Index: cube/templatetags/cube_templatetags.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/templatetags/cube_templatetags.py	(revision )
+++ cube/templatetags/cube_templatetags.py	(revision )
@@ -0,0 +1,261 @@
+import re
+import copy
+
+from django.template import Node, NodeList, TemplateSyntaxError, Library, Variable, Context, VariableDoesNotExist
+from django.template.loader import get_template
+from django.conf import settings
+
+register = Library()
+
+
+class TableFromCubeNode(Node):
+    def __init__(self, cube, dimensions, filepath):
+        self.filepath = filepath
+        self.dimensions, self.cube = dimensions, cube
+
+    def render(self, context):
+
+        #resolve filename
+        matched = re.match('(?P<quote>"|\')(?P<literal>\w+)(?P=quote)', self.filepath)
+        if matched:
+            filepath = matched.group('literal')
+        else:
+            try:
+                filepath = Variable(self.filepath).resolve(context)
+            except VariableDoesNotExist:
+                if settings.DEBUG:
+                    return "[couldn't resolve file path]"
+                else:
+                    return ''
+
+        #resolve cube from context
+        try:
+            cube = self.cube.resolve(context, False)
+        except VariableDoesNotExist:
+            if settings.DEBUG:
+                return "[couldn't resolve cube]"
+            else:
+                return ''
+
+        #resolve dimensions
+        dimensions = []
+        for dimension in self.dimensions:
+            matched = re.match('(?P<quote>"|\')(?P<literal>\w+)(?P=quote)', dimension)
+            if matched:
+                dimensions.append(matched.group('literal'))
+            else:
+                try:
+                    dimensions.append(Variable(dimension).resolve(context))
+                except VariableDoesNotExist:
+                    if settings.DEBUG:
+                        return "[couldn't resolve dimension]"
+                    else:
+                        return ''
+
+        #build context
+        try:
+            extra_context = cube.table_helper(*dimensions)
+            extra_context['cube'] = cube
+        except ValueError, e:
+            if settings.DEBUG:
+                return "[%s]" % e
+            else:
+                return ''
+
+        #rendering template
+        try:
+            new_context = copy.copy(context)
+            new_context.update(extra_context)
+            t = get_template(filepath)
+            c = Context(new_context)
+            return t.render(c)
+        except TemplateSyntaxError, e:
+            if settings.TEMPLATE_DEBUG:
+                raise
+            return ''
+        except:
+            return '' # Fail silently for invalid included templates.
+
+
+def do_tablefromcube(parser, token):
+    """
+    Inclusion tag to render a table using a defined template. Usage : ::
+    
+        {% tablefromcube <cube> by <dimension1>, <dimension2> using <template_name> %}
+
+    For example : ::
+    
+        {% tablefromcube my_cube by some_dimension, "some_other_dimension" using "mytable.html" %}
+
+    The context with which this template is rendered contains the variables :
+
+        - col_names: list of tuples *(<column name>, <column pretty name>)*
+        - row_names: list of tuples *(<row name>, <row pretty name>)*
+        - cols: list of columns, as *[{'name': col_name, 'pretty_name': col_pretty_name, 'values': [measure1, measure2, , measureN], 'overall': col_overall}]*
+        - rows: list of columns, as *[{'name': row_name, 'pretty_name': row_pretty_name, 'values': [measure1, measure2, , measureN], 'overall': row_overall}]*
+        - row_overalls: list of measure on whole rows, therefore the measure is taken on the row dimension, with *row_name* as value
+        - col_overalls: list of measure on whole columns, therefore the measure is taken on the column dimension, with *col_name* as value
+        - col_dim_name: the dimension on which the columns are calculated
+        - row_dim_name: the dimension on which the rows are calculated
+        - overall: measure on the whole cube
+        - cube: the cube passed as a parameter to the tag.
+    """
+    bits = token.contents.split()
+
+    tagname = bits[0]
+    by_index = 2
+    using_index = 5
+    filepath_index = -1
+
+    if not len(bits) == 7:
+        raise TemplateSyntaxError("'%s' tag should have seven words: %s" % (tagname, token.contents))
+
+    if not bits[by_index] == 'by' or not bits[using_index] == 'using':
+        raise TemplateSyntaxError("'%s' invalid syntax, 'by' or 'using'"
+                                  "not at the expected position %s" % (tagname, token.contents))
+
+    #trim the spaces around comas, and then split the list to have all the dimensions
+    dimensions = re.sub(r' *, *', ',', ' '.join(bits[by_index + 1:using_index])).split(',')
+    for dim in dimensions:
+        if not dim or ' ' in dim:
+            raise TemplateSyntaxError("'%s' tag received an invalid argument:"
+                                      " %s" % (tagname, token.contents))
+
+    #turns the cube argument into a template.Variable
+    cube = parser.compile_filter(bits[1])
+
+    return TableFromCubeNode(cube, dimensions, bits[filepath_index])
+
+
+do_tablefromcube = register.tag('tablefromcube', do_tablefromcube)
+
+
+class SubcubesNode(Node):
+    def __init__(self, cube, dimensions, subcube_var, nodelist):
+        self.dimensions, self.cube = dimensions, cube
+        self.subcube_var = subcube_var
+        self.nodelist = nodelist
+
+    def __repr__(self):
+        return "<Subcube Node: %s by %s as %s>" % \
+               (self.cube, ', '.join(self.dimensions), self.subcube_var)
+
+    def __iter__(self):
+        for node in self.nodelist:
+            yield node
+
+    def render(self, context):
+        #resolve cube from context
+        try:
+            cube = self.cube.resolve(context, False)
+        except VariableDoesNotExist:
+            return ''
+
+        #resolve dimensions
+        dimensions = []
+        for dimension in self.dimensions:
+            matched = re.match('(?P<quote>"|\')(?P<literal>\w+)(?P=quote)', dimension)
+            if matched:
+                dimensions.append(str(matched.group('literal')))
+            else:
+                try:
+                    dimensions.append(str(Variable(dimension).resolve(context)))
+                except VariableDoesNotExist:
+                    return ''
+
+        #loop subcubes and render nodes
+        nodelist = NodeList()
+        for subcube in cube.subcubes(*dimensions):
+            context[self.subcube_var] = subcube
+            for node in self.nodelist:
+                nodelist.append(node.render(context))
+
+        return nodelist.render(context)
+
+
+def do_subcubes(parser, token):
+    """
+    Use the *subcubes* template tag to loop over the subcubes of a cube. The syntax is : ::
+
+        {% subcubes <cube> by <dimension1>[, <dimensionN>] as <subcube> %}
+            ...
+        {% endsubcubes %}
+
+    Example : ::
+
+        <ul>
+        {% subcubes musician_cube by "instrument" as m_subcube %}
+                <li> {{ m_subcube|prettyconstraint:"instrument" }}
+                <ul>
+                    {% subcubes m_subcube by "firstname" as i_subcube %}
+                    <li>{{ i_subcube|prettyconstraint:"firstname" }} : {{ i_subcube.measure }}</li>
+                    {% endfor %}
+                </ul>
+                </li>
+        {% endsubcubes %}
+        </ul>
+
+    Would for example output : ::
+
+        * Trumpet
+            - John : 9
+            - Jack : 67
+            - Miles : 1
+        * Saxophone
+            - Jean-michel : 10
+            ...
+    """
+    bits = token.contents.split()
+    tagname = bits[0]
+
+    if len(bits) < 6:
+        raise TemplateSyntaxError("'%s' statements should have at least six"
+                                  " words: %s" % (tagname, token.contents))
+
+    by_index = 2
+    if bits[by_index] != 'by':
+        raise TemplateSyntaxError("'%s' statements should use the format"
+                                  " '%s cube by dimension as subcube': %s" % (tagname, tagname, token.contents))
+
+    as_index = -2
+    if bits[as_index] != 'as':
+        raise TemplateSyntaxError("'%s' statements should use the format"
+                                  " '%s cube by dimension as subcube': %s" % (tagname, tagname, token.contents))
+
+    #trim the spaces around comas, and then split the list to have all the dimensions
+    dimensions = re.sub(r' *, *', ',', ' '.join(bits[by_index + 1:as_index])).split(',')
+    for dim in dimensions:
+        if not dim or ' ' in dim:
+            raise TemplateSyntaxError("'%s' tag received an invalid argument:"
+                                      " %s" % (tagname, token.contents))
+
+    #name of the variable that will contain the subcube
+    subcube_var = bits[-1]
+
+    #turns the cube argument into a template.Variable
+    cube = parser.compile_filter(bits[1])
+
+    #gets all the nodes contained in the tag
+    nodelist = parser.parse(('end%s' % tagname,))
+    #next token is *endsubcubes* so we delete it
+    parser.delete_first_token()
+
+    return SubcubesNode(cube, dimensions, subcube_var, nodelist)
+
+
+do_subcubes = register.tag("subcubes", do_subcubes)
+
+
+def prettyconstraint(cube, dim_name):
+    """
+    Filter to get the value of the constraint for a dimension. Use it as : ::
+        
+        {{ cube|prettyconstraint:'dimension_name' }}
+    """
+    return cube.dimensions[dim_name].pretty_constraint
+
+
+register.filter('prettyconstraint', prettyconstraint)
+
+
+
Index: contents/static/js/jquery.color.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/jquery.color.js	(revision )
+++ contents/static/js/jquery.color.js	(revision )
@@ -0,0 +1,123 @@
+/*
+* jQuery Color Animations
+* Copyright 2007 John Resig
+* Released under the MIT and GPL licenses.
+*/
+
+(function(jQuery){
+
+// We override the animation for all of these color styles
+jQuery.each(['backgroundColor', 'borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'color', 'outlineColor'], function(i,attr){
+jQuery.fx.step[attr] = function(fx){
+if ( fx.state == 0 ) {
+fx.start = getColor( fx.elem, attr );
+fx.end = getRGB( fx.end );
+}
+
+fx.elem.style[attr] = "rgb(" + [
+Math.max(Math.min( parseInt((fx.pos * (fx.end[0] - fx.start[0])) + fx.start[0]), 255), 0),
+Math.max(Math.min( parseInt((fx.pos * (fx.end[1] - fx.start[1])) + fx.start[1]), 255), 0),
+Math.max(Math.min( parseInt((fx.pos * (fx.end[2] - fx.start[2])) + fx.start[2]), 255), 0)
+].join(",") + ")";
+}
+});
+
+// Color Conversion functions from highlightFade
+// By Blair Mitchelmore
+// http://jquery.offput.ca/highlightFade/
+
+// Parse strings looking for color tuples [255,255,255]
+function getRGB(color) {
+var result;
+
+// Check if we're already dealing with an array of colors
+if ( color && color.constructor == Array && color.length == 3 )
+return color;
+
+// Look for rgb(num,num,num)
+if (result = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(color))
+return [parseInt(result[1]), parseInt(result[2]), parseInt(result[3])];
+
+// Look for rgb(num%,num%,num%)
+if (result = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(color))
+return [parseFloat(result[1])*2.55, parseFloat(result[2])*2.55, parseFloat(result[3])*2.55];
+
+// Look for #a0b1c2
+if (result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(color))
+return [parseInt(result[1],16), parseInt(result[2],16), parseInt(result[3],16)];
+
+// Look for #fff
+if (result = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(color))
+return [parseInt(result[1]+result[1],16), parseInt(result[2]+result[2],16), parseInt(result[3]+result[3],16)];
+
+// Otherwise, we're most likely dealing with a named color
+return colors[jQuery.trim(color).toLowerCase()];
+}
+
+function getColor(elem, attr) {
+var color;
+
+do {
+color = jQuery.curCSS(elem, attr);
+
+// Keep going until we find an element that has color, or we hit the body
+if ( color != '' && color != 'transparent' || jQuery.nodeName(elem, "body") )
+break;
+
+attr = "backgroundColor";
+} while ( elem = elem.parentNode );
+
+return getRGB(color);
+};
+
+// Some named colors to work with
+// From Interface by Stefan Petre
+// http://interface.eyecon.ro/
+
+var colors = {
+aqua:[0,255,255],
+azure:[240,255,255],
+beige:[245,245,220],
+black:[0,0,0],
+blue:[0,0,255],
+brown:[165,42,42],
+cyan:[0,255,255],
+darkblue:[0,0,139],
+darkcyan:[0,139,139],
+darkgrey:[169,169,169],
+darkgreen:[0,100,0],
+darkkhaki:[189,183,107],
+darkmagenta:[139,0,139],
+darkolivegreen:[85,107,47],
+darkorange:[255,140,0],
+darkorchid:[153,50,204],
+darkred:[139,0,0],
+darksalmon:[233,150,122],
+darkviolet:[148,0,211],
+fuchsia:[255,0,255],
+gold:[255,215,0],
+green:[0,128,0],
+indigo:[75,0,130],
+khaki:[240,230,140],
+lightblue:[173,216,230],
+lightcyan:[224,255,255],
+lightgreen:[144,238,144],
+lightgrey:[211,211,211],
+lightpink:[255,182,193],
+lightyellow:[255,255,224],
+lime:[0,255,0],
+magenta:[255,0,255],
+maroon:[128,0,0],
+navy:[0,0,128],
+olive:[128,128,0],
+orange:[255,165,0],
+pink:[255,192,203],
+purple:[128,0,128],
+violet:[128,0,128],
+red:[255,0,0],
+silver:[192,192,192],
+white:[255,255,255],
+yellow:[255,255,0]
+};
+
+})(jQuery);
\ No newline at end of file
Index: contents/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/__init__.py	(revision )
+++ contents/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 2.7.5 (C:/Python27/python.exe)" project-jdk-type="Python SDK" />
+</project>
+
Index: contents/static/js/plugins.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/plugins.js	(revision )
+++ contents/static/js/plugins.js	(revision )
@@ -0,0 +1,167 @@
+/*! jQuery Easing v1.3 - http://gsgd.co.uk/sandbox/jquery/easing/ */
+jQuery.easing['jswing']=jQuery.easing['swing'];jQuery.extend(jQuery.easing,{def:'easeOutQuad',swing:function(x,t,b,c,d){return jQuery.easing[jQuery.easing.def](x,t,b,c,d)},easeInQuad:function(x,t,b,c,d){return c*(t/=d)*t+b},easeOutQuad:function(x,t,b,c,d){return-c*(t/=d)*(t-2)+b},easeInOutQuad:function(x,t,b,c,d){if((t/=d/2)<1)return c/2*t*t+b;return-c/2*((--t)*(t-2)-1)+b},easeInCubic:function(x,t,b,c,d){return c*(t/=d)*t*t+b},easeOutCubic:function(x,t,b,c,d){return c*((t=t/d-1)*t*t+1)+b},easeInOutCubic:function(x,t,b,c,d){if((t/=d/2)<1)return c/2*t*t*t+b;return c/2*((t-=2)*t*t+2)+b},easeInQuart:function(x,t,b,c,d){return c*(t/=d)*t*t*t+b},easeOutQuart:function(x,t,b,c,d){return-c*((t=t/d-1)*t*t*t-1)+b},easeInOutQuart:function(x,t,b,c,d){if((t/=d/2)<1)return c/2*t*t*t*t+b;return-c/2*((t-=2)*t*t*t-2)+b},easeInQuint:function(x,t,b,c,d){return c*(t/=d)*t*t*t*t+b},easeOutQuint:function(x,t,b,c,d){return c*((t=t/d-1)*t*t*t*t+1)+b},easeInOutQuint:function(x,t,b,c,d){if((t/=d/2)<1)return c/2*t*t*t*t*t+b;return c/2*((t-=2)*t*t*t*t+2)+b},easeInSine:function(x,t,b,c,d){return-c*Math.cos(t/d*(Math.PI/2))+c+b},easeOutSine:function(x,t,b,c,d){return c*Math.sin(t/d*(Math.PI/2))+b},easeInOutSine:function(x,t,b,c,d){return-c/2*(Math.cos(Math.PI*t/d)-1)+b},easeInExpo:function(x,t,b,c,d){return(t==0)?b:c*Math.pow(2,10*(t/d-1))+b},easeOutExpo:function(x,t,b,c,d){return(t==d)?b+c:c*(-Math.pow(2,-10*t/d)+1)+b},easeInOutExpo:function(x,t,b,c,d){if(t==0)return b;if(t==d)return b+c;if((t/=d/2)<1)return c/2*Math.pow(2,10*(t-1))+b;return c/2*(-Math.pow(2,-10*--t)+2)+b},easeInCirc:function(x,t,b,c,d){return-c*(Math.sqrt(1-(t/=d)*t)-1)+b},easeOutCirc:function(x,t,b,c,d){return c*Math.sqrt(1-(t=t/d-1)*t)+b},easeInOutCirc:function(x,t,b,c,d){if((t/=d/2)<1)return-c/2*(Math.sqrt(1-t*t)-1)+b;return c/2*(Math.sqrt(1-(t-=2)*t)+1)+b},easeInElastic:function(x,t,b,c,d){var s=1.70158;var p=0;var a=c;if(t==0)return b;if((t/=d)==1)return b+c;if(!p)p=d*.3;if(a
+<Math.abs(c)){a=c;var s=p/4}else var s=p/(2*Math.PI)*Math.asin(c/a);return-(a*Math.pow(2,10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p))+b},easeOutElastic:function(x,t,b,c,d){var s=1.70158;var p=0;var a=c;if(t==0)return b;if((t/=d)==1)return b+c;if(!p)p=d*.3;if(a
+<Math.abs(c)){a=c;var s=p/4}else var s=p/(2*Math.PI)*Math.asin(c/a);return a*Math.pow(2,-10*t)*Math.sin((t*d-s)*(2*Math.PI)/p)+c+b},easeInOutElastic:function(x,t,b,c,d){var s=1.70158;var p=0;var a=c;if(t==0)return b;if((t/=d/2)==2)return b+c;if(!p)p=d*(.3*1.5);if(a
+<Math.abs(c)){a=c;var s=p/4}else var s=p/(2*Math.PI)*Math.asin(c/a);if(t<1)return-.5*(a*Math.pow(2,10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p))+b;return a*Math.pow(2,-10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p)*.5+c+b},easeInBack:function(x,t,b,c,d,s){if(s==undefined)s=1.70158;return c*(t/=d)*t*((s+1)*t-s)+b},easeOutBack:function(x,t,b,c,d,s){if(s==undefined)s=1.70158;return c*((t=t/d-1)*t*((s+1)*t+s)+1)+b},easeInOutBack:function(x,t,b,c,d,s){if(s==undefined)s=1.70158;if((t/=d/2)<1)return c/2*(t*t*(((s*=(1.525))+1)*t-s))+b;return c/2*((t-=2)*t*(((s*=(1.525))+1)*t+s)+2)+b},easeInBounce:function(x,t,b,c,d){return c-jQuery.easing.easeOutBounce(x,d-t,0,c,d)+b},easeOutBounce:function(x,t,b,c,d){if((t/=d)<(1/2.75)){return c*(7.5625*t*t)+b}else if(t<(2/2.75)){return c*(7.5625*(t-=(1.5/2.75))*t+.75)+b}else if(t<(2.5/2.75)){return c*(7.5625*(t-=(2.25/2.75))*t+.9375)+b}else{return c*(7.5625*(t-=(2.625/2.75))*t+.984375)+b}},easeInOutBounce:function(x,t,b,c,d){if(t
+<d/2)return jQuery.easing.easeInBounce(x,t*2,0,c,d)*.5+b;return jQuery.easing.easeOutBounce(x,t*2-d,0,c,d)*.5+c*.5+b}});
+
+/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)
+* Licensed under the MIT License (LICENSE.txt).
+*
+* Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
+* Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
+* Thanks to: Seamus Leahy for adding deltaX and deltaY
+*
+* Version: 3.0.6
+*
+* Requires: 1.2.2+
+*/
+(function($){var types=['DOMMouseScroll','mousewheel'];if($.event.fixHooks){for(var i=types.length;i;){$.event.fixHooks[types[--i]]=$.event.mouseHooks}}$.event.special.mousewheel={setup:function(){if(this.addEventListener){for(var i=types.length;i;){this.addEventListener(types[--i],handler,false)}}else{this.onmousewheel=handler}},teardown:function(){if(this.removeEventListener){for(var i=types.length;i;){this.removeEventListener(types[--i],handler,false)}}else{this.onmousewheel=null}}};$.fn.extend({mousewheel:function(fn){return fn?this.bind("mousewheel",fn):this.trigger("mousewheel")},unmousewheel:function(fn){return this.unbind("mousewheel",fn)}});function handler(event){var orgEvent=event||window.event,args=[].slice.call(arguments,1),delta=0,returnValue=true,deltaX=0,deltaY=0;event=$.event.fix(orgEvent);event.type="mousewheel";if(orgEvent.wheelDelta){delta=orgEvent.wheelDelta/120}if(orgEvent.detail){delta=-orgEvent.detail/3}deltaY=delta;if(orgEvent.axis!==undefined&&orgEvent.axis===orgEvent.HORIZONTAL_AXIS){deltaY=0;deltaX=-1*delta}if(orgEvent.wheelDeltaY!==undefined){deltaY=orgEvent.wheelDeltaY/120}if(orgEvent.wheelDeltaX!==undefined){deltaX=-1*orgEvent.wheelDeltaX/120}args.unshift(event,delta,deltaX,deltaY);return($.event.dispatch||$.event.handle).apply(this,args)}})(jQuery);
+
+/*! fancyBox v2.1.4 fancyapps.com | fancyapps.com/fancybox/#license */
+(function(C,z,f,r){var q=f(C),n=f(z),b=f.fancybox=function(){b.open.apply(this,arguments)},H=navigator.userAgent.match(/msie/),w=null,s=z.createTouch!==r,t=function(a){return a&&a.hasOwnProperty&&a instanceof f},p=function(a){return a&&"string"===f.type(a)},F=function(a){return p(a)&&0
+<a.indexOf("%")},l=function(a,d){var e=parseInt(a,10)||0;d&&F(a)&&(e*=b.getViewport()[d]/100);return Math.ceil(e)},x=function(a,b){return l(a,b)+"px"};f.extend(b,{version:"2.1.4",defaults:{padding:15,margin:20,width:800,
+height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!s,fitToView:!0,aspectRatio:!1,topRatio:0.5,leftRatio:0.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3E3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",
+34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'
+<div class="fancybox-wrap" tabIndex="-1">
+    <div class="fancybox-skin">
+        <div class="fancybox-outer">
+            <div class="fancybox-inner"></div>
+        </div>
+    </div>
+</div>',image:'<img class="fancybox-image" src="{href}" alt=""/>',iframe:'
+<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0"
+        hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+
+(H?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please
+    try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close"
+                                       href="javascript:;"></a>',next:'<a title="Next"
+                                                                          class="fancybox-nav fancybox-next"
+                                                                          href="javascript:;"><span></span></a>',prev:'
+<a title="Previous" class="fancybox-nav fancybox-prev"
+   href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,
+openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:f.noop,beforeLoad:f.noop,afterLoad:f.noop,beforeShow:f.noop,afterShow:f.noop,beforeChange:f.noop,beforeClose:f.noop,afterClose:f.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,
+isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(a,d){if(a&&(f.isPlainObject(d)||(d={}),!1!==b.close(!0)))return f.isArray(a)||(a=t(a)?f(a).get():[a]),f.each(a,function(e,c){var k={},g,h,j,m,l;"object"===f.type(c)&&(c.nodeType&&(c=f(c)),t(c)?(k={href:c.data("fancybox-href")||c.attr("href"),title:c.data("fancybox-title")||c.attr("title"),isDom:!0,element:c},f.metadata&&f.extend(!0,k,
+c.metadata())):k=c);g=d.href||k.href||(p(c)?c:null);h=d.title!==r?d.title:k.title||"";m=(j=d.content||k.content)?"html":d.type||k.type;!m&&k.isDom&&(m=c.data("fancybox-type"),m||(m=(m=c.prop("class").match(/fancybox\.(\w+)/))?m[1]:null));p(g)&&(m||(b.isImage(g)?m="image":b.isSWF(g)?m="swf":"#"===g.charAt(0)?m="inline":p(c)&&(m="html",j=c)),"ajax"===m&&(l=g.split(/\s+/,2),g=l.shift(),l=l.shift()));j||("inline"===m?g?j=f(p(g)?g.replace(/.*(?=#[^\s]+$)/,""):g):k.isDom&&(j=c):"html"===m?j=g:!m&&(!g&&
+k.isDom)&&(m="inline",j=c));f.extend(k,{href:g,type:m,content:j,title:h,selector:l});a[e]=k}),b.opts=f.extend(!0,{},b.defaults,d),d.keys!==r&&(b.opts.keys=d.keys?f.extend({},b.defaults.keys,d.keys):!1),b.group=a,b._start(b.opts.index)},cancel:function(){var a=b.coming;a&&!1!==b.trigger("onCancel")&&(b.hideLoading(),b.ajaxLoad&&b.ajaxLoad.abort(),b.ajaxLoad=null,b.imgPreload&&(b.imgPreload.onload=b.imgPreload.onerror=null),a.wrap&&a.wrap.stop(!0,!0).trigger("onReset").remove(),b.coming=null,b.current||
+b._afterZoomOut(a))},close:function(a){b.cancel();!1!==b.trigger("beforeClose")&&(b.unbindEvents(),b.isActive&&(!b.isOpen||!0===a?(f(".fancybox-wrap").stop(!0).trigger("onReset").remove(),b._afterZoomOut()):(b.isOpen=b.isOpened=!1,b.isClosing=!0,f(".fancybox-item, .fancybox-nav").remove(),b.wrap.stop(!0,!0).removeClass("fancybox-opened"),b.transitions[b.current.closeMethod]())))},play:function(a){var d=function(){clearTimeout(b.player.timer)},e=function(){d();b.current&&b.player.isActive&&(b.player.timer=
+setTimeout(b.next,b.current.playSpeed))},c=function(){d();f("body").unbind(".player");b.player.isActive=!1;b.trigger("onPlayEnd")};if(!0===a||!b.player.isActive&&!1!==a){if(b.current&&(b.current.loop||b.current.index
+<b.group.length-1))b.player.isActive=!0,f("body").bind({"afterShow.player onUpdate.player":e,"onCancel.player beforeClose.player":c,"beforeLoad.player":d}),e(),b.trigger("onPlayStart")}else c()},next:function(a){var d=b.current;d&&(p(a)||(a=d.direction.next),b.jumpto(d.index+1,a,"next"))},
+prev:function(a){var d=b.current;d&&(p(a)||(a=d.direction.prev),b.jumpto(d.index-1,a,"prev"))},jumpto:function(a,d,e){var c=b.current;c&&(a=l(a),b.direction=d||c.direction[a>=c.index?"next":"prev"],b.router=e||"jumpto",c.loop&&(0>a&&(a=c.group.length+a%c.group.length),a%=c.group.length),c.group[a]!==r&&(b.cancel(),b._start(a)))},reposition:function(a,d){var e=b.current,c=e?e.wrap:null,k;c&&(k=b._getPosition(d),a&&"scroll"===a.type?(delete k.position,c.stop(!0,!0).animate(k,200)):(c.css(k),e.pos=f.extend({},
+e.dim,k)))},update:function(a){var d=a&&a.type,e=!d||"orientationchange"===d;e&&(clearTimeout(w),w=null);b.isOpen&&!w&&(w=setTimeout(function(){var c=b.current;c&&!b.isClosing&&(b.wrap.removeClass("fancybox-tmp"),(e||"load"===d||"resize"===d&&c.autoResize)&&b._setDimension(),"scroll"===d&&c.canShrink||b.reposition(a),b.trigger("onUpdate"),w=null)},e&&!s?0:300))},toggle:function(a){b.isOpen&&(b.current.fitToView="boolean"===f.type(a)?a:!b.current.fitToView,s&&(b.wrap.removeAttr("style").addClass("fancybox-tmp"),
+b.trigger("onUpdate")),b.update())},hideLoading:function(){n.unbind(".loading");f("#fancybox-loading").remove()},showLoading:function(){var a,d;b.hideLoading();a=f('
+<div id="fancybox-loading">
+    <div></div>
+</div>').click(b.cancel).appendTo("body");n.bind("keydown.loading",function(a){if(27===(a.which||a.keyCode))a.preventDefault(),b.cancel()});b.defaults.fixed||(d=b.getViewport(),a.css({position:"absolute",top:0.5*d.h+d.y,left:0.5*d.w+d.x}))},getViewport:function(){var a=b.current&&b.current.locked||
+!1,d={x:q.scrollLeft(),y:q.scrollTop()};a?(d.w=a[0].clientWidth,d.h=a[0].clientHeight):(d.w=s&&C.innerWidth?C.innerWidth:q.width(),d.h=s&&C.innerHeight?C.innerHeight:q.height());return d},unbindEvents:function(){b.wrap&&t(b.wrap)&&b.wrap.unbind(".fb");n.unbind(".fb");q.unbind(".fb")},bindEvents:function(){var a=b.current,d;a&&(q.bind("orientationchange.fb"+(s?"":" resize.fb")+(a.autoCenter&&!a.locked?" scroll.fb":""),b.update),(d=a.keys)&&n.bind("keydown.fb",function(e){var c=e.which||e.keyCode,k=
+e.target||e.srcElement;if(27===c&&b.coming)return!1;!e.ctrlKey&&(!e.altKey&&!e.shiftKey&&!e.metaKey&&(!k||!k.type&&!f(k).is("[contenteditable]")))&&f.each(d,function(d,k){if(1
+<a.group.length&&k[c]!==r)return b[d](k[c]),e.preventDefault(),!1;if(-1
+<f.inArray(c,k))return b[d](),e.preventDefault(),!1})}),f.fn.mousewheel&&a.mouseWheel&&b.wrap.bind("mousewheel.fb",function(d,c,k,g){for(var h=f(d.target||null),j=!1;h.length&&!j&&!h.is(".fancybox-skin")&&!h.is(".fancybox-wrap");)j=h[0]&&!(h[0].style.overflow&&
+"hidden"===h[0].style.overflow)&&(h[0].clientWidth&&h[0].scrollWidth>h[0].clientWidth||h[0].clientHeight&&h[0].scrollHeight>h[0].clientHeight),h=f(h).parent();if(0!==c&&!j&&1
+<b.group.length&&!a.canShrink){if(0
+<g||0
+<k)b.prev(0
+<g?"down":"left");else if(0>g||0>k)b.next(0>g?"up":"right");d.preventDefault()}}))},trigger:function(a,d){var e,c=d||b.coming||b.current;if(c){f.isFunction(c[a])&&(e=c[a].apply(c,Array.prototype.slice.call(arguments,1)));if(!1===e)return!1;c.helpers&&f.each(c.helpers,function(d,
+e){e&&(b.helpers[d]&&f.isFunction(b.helpers[d][a]))&&(e=f.extend(!0,{},b.helpers[d].defaults,e),b.helpers[d][a](e,c))});f.event.trigger(a+".fb")}},isImage:function(a){return p(a)&&a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp)((\?|#).*)?$)/i)},isSWF:function(a){return p(a)&&a.match(/\.(swf)((\?|#).*)?$/i)},_start:function(a){var d={},e,c;a=l(a);e=b.group[a]||null;if(!e)return!1;d=f.extend(!0,{},b.opts,e);e=d.margin;c=d.padding;"number"===f.type(e)&&(d.margin=[e,e,e,e]);"number"===f.type(c)&&
+(d.padding=[c,c,c,c]);d.modal&&f.extend(!0,d,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}});d.autoSize&&(d.autoWidth=d.autoHeight=!0);"auto"===d.width&&(d.autoWidth=!0);"auto"===d.height&&(d.autoHeight=!0);d.group=b.group;d.index=a;b.coming=d;if(!1===b.trigger("beforeLoad"))b.coming=null;else{c=d.type;e=d.href;if(!c)return b.coming=null,b.current&&b.router&&"jumpto"!==b.router?(b.current.index=a,b[b.router](b.direction)):!1;b.isActive=
+!0;if("image"===c||"swf"===c)d.autoHeight=d.autoWidth=!1,d.scrolling="visible";"image"===c&&(d.aspectRatio=!0);"iframe"===c&&s&&(d.scrolling="scroll");d.wrap=f(d.tpl.wrap).addClass("fancybox-"+(s?"mobile":"desktop")+" fancybox-type-"+c+" fancybox-tmp "+d.wrapCSS).appendTo(d.parent||"body");f.extend(d,{skin:f(".fancybox-skin",d.wrap),outer:f(".fancybox-outer",d.wrap),inner:f(".fancybox-inner",d.wrap)});f.each(["Top","Right","Bottom","Left"],function(a,b){d.skin.css("padding"+b,x(d.padding[a]))});b.trigger("onReady");
+if("inline"===c||"html"===c){if(!d.content||!d.content.length)return b._error("content")}else if(!e)return b._error("href");"image"===c?b._loadImage():"ajax"===c?b._loadAjax():"iframe"===c?b._loadIframe():b._afterLoad()}},_error:function(a){f.extend(b.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:a,content:b.coming.tpl.error});b._afterLoad()},_loadImage:function(){var a=b.imgPreload=new Image;a.onload=function(){this.onload=this.onerror=null;b.coming.width=
+this.width;b.coming.height=this.height;b._afterLoad()};a.onerror=function(){this.onload=this.onerror=null;b._error("image")};a.src=b.coming.href;!0!==a.complete&&b.showLoading()},_loadAjax:function(){var a=b.coming;b.showLoading();b.ajaxLoad=f.ajax(f.extend({},a.ajax,{url:a.href,error:function(a,e){b.coming&&"abort"!==e?b._error("ajax",a):b.hideLoading()},success:function(d,e){"success"===e&&(a.content=d,b._afterLoad())}}))},_loadIframe:function(){var a=b.coming,d=f(a.tpl.iframe.replace(/\{rnd\}/g,
+(new Date).getTime())).attr("scrolling",s?"auto":a.iframe.scrolling).attr("src",a.href);f(a.wrap).bind("onReset",function(){try{f(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(a){}});a.iframe.preload&&(b.showLoading(),d.one("load",function(){f(this).data("ready",1);s||f(this).bind("load.fb",b.update);f(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show();b._afterLoad()}));a.content=d.appendTo(a.inner);a.iframe.preload||b._afterLoad()},_preloadImages:function(){var a=
+b.group,d=b.current,e=a.length,c=d.preload?Math.min(d.preload,e-1):0,f,g;for(g=1;g<=c;g+=1)f=a[(d.index+g)%e],"image"===f.type&&f.href&&((new Image).src=f.href)},_afterLoad:function(){var a=b.coming,d=b.current,e,c,k,g,h;b.hideLoading();if(a&&!1!==b.isActive)if(!1===b.trigger("afterLoad",a,d))a.wrap.stop(!0).trigger("onReset").remove(),b.coming=null;else{d&&(b.trigger("beforeChange",d),d.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove());b.unbindEvents();
+e=a.content;c=a.type;k=a.scrolling;f.extend(b,{wrap:a.wrap,skin:a.skin,outer:a.outer,inner:a.inner,current:a,previous:d});g=a.href;switch(c){case "inline":case "ajax":case "html":a.selector?e=f("
+<div>").html(e).find(a.selector):t(e)&&(e.data("fancybox-placeholder")||e.data("fancybox-placeholder",f('
+    <div class="fancybox-placeholder"></div>
+    ').insertAfter(e).hide()),e=e.show().detach(),a.wrap.bind("onReset",function(){f(this).find(e).length&&e.hide().replaceAll(e.data("fancybox-placeholder")).data("fancybox-placeholder",
+    !1)}));break;case "image":e=a.tpl.image.replace("{href}",g);break;case "swf":e='
+    <object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%">
+        <param name="movie" value="'+g+'"></param>
+        ',h="",f.each(a.swf,function(a,b){e+='
+        <param name="'+a+'" value="'+b+'"></param>
+        ';h+=" "+a+'="'+b+'"'}),e+='
+        <embed src="'+g+'" type="application/x-shockwave-flash" width="100%" height="100%"
+        '+h+"></embed></object>
+    "}(!t(e)||!e.parent().is(a.inner))&&a.inner.append(e);b.trigger("beforeShow");
+    a.inner.css("overflow","yes"===k?"scroll":"no"===k?"hidden":k);b._setDimension();b.reposition();b.isOpen=!1;b.coming=null;b.bindEvents();if(b.isOpened){if(d.prevMethod)b.transitions[d.prevMethod]()}else
+    f(".fancybox-wrap").not(a.wrap).stop(!0).trigger("onReset").remove();b.transitions[b.isOpened?a.nextMethod:a.openMethod]();b._preloadImages()}},_setDimension:function(){var
+    a=b.getViewport(),d=0,e=!1,c=!1,e=b.wrap,k=b.skin,g=b.inner,h=b.current,c=h.width,j=h.height,m=h.minWidth,u=h.minHeight,n=h.maxWidth,
+    v=h.maxHeight,s=h.scrolling,q=h.scrollOutside?h.scrollbarWidth:0,y=h.margin,p=l(y[1]+y[3]),r=l(y[0]+y[2]),z,A,t,D,B,G,C,E,w;e.add(k).add(g).width("auto").height("auto").removeClass("fancybox-tmp");y=l(k.outerWidth(!0)-k.width());z=l(k.outerHeight(!0)-k.height());A=p+y;t=r+z;D=F(c)?(a.w-A)*l(c)/100:c;B=F(j)?(a.h-t)*l(j)/100:j;if("iframe"===h.type){if(w=h.content,h.autoHeight&&1===w.data("ready"))try{w[0].contentWindow.document.location&&(g.width(D).height(9999),G=w.contents().find("body"),q&&G.css("overflow-x",
+    "hidden"),B=G.height())}catch(H){}}else
+    if(h.autoWidth||h.autoHeight)g.addClass("fancybox-tmp"),h.autoWidth||g.width(D),h.autoHeight||g.height(B),h.autoWidth&&(D=g.width()),h.autoHeight&&(B=g.height()),g.removeClass("fancybox-tmp");c=l(D);j=l(B);E=D/B;m=l(F(m)?l(m,"w")-A:m);n=l(F(n)?l(n,"w")-A:n);u=l(F(u)?l(u,"h")-t:u);v=l(F(v)?l(v,"h")-t:v);G=n;C=v;h.fitToView&&(n=Math.min(a.w-A,n),v=Math.min(a.h-t,v));A=a.w-p;r=a.h-r;h.aspectRatio?(c>n&&(c=n,j=l(c/E)),j>v&&(j=v,c=l(j*E)),c
+    <m
+    &&(c=m,j=l(c/E)),j<u&&
+    (j=u,c=l(j*E))):(c=Math.max(m,Math.min(c,n)),h.autoHeight&&"iframe"!==h.type&&(g.width(c),j=g.height()),j=Math.max(u,Math.min(j,v)));if(h.fitToView)if(g.width(c).height(j),e.width(c+y),a=e.width(),p=e.height(),h.aspectRatio)for(;(a>A||p>r)&&(c>m&&j>u)&&!(19
+    <d
+    ++);)j=Math.max(u,Math.min(v,j-10)),c=l(j*E),c
+    <m
+    &&(c=m,j=l(c/E)),c>n&&(c=n,j=l(c/E)),g.width(c).height(j),e.width(c+y),a=e.width(),p=e.height();else
+    c=Math.max(m,Math.min(c,c-(a-A))),j=Math.max(u,Math.min(j,j-(p-r)));q&&("auto"===s&&j<B&&c+y+
+    q<A)&&(c+=q);g.width(c).height(j);e.width(c+y);a=e.width();p=e.height();e=(a>A||p>r)&&c>m&&j>u;c=h.aspectRatio?c
+    <G
+    &&j
+    <C
+    &&c
+    <D
+    &&j
+    <B:
+    (c
+    <G
+    ||j
+    <C
+    )&&(c
+    <D
+    ||j<B);f.extend(h,{dim:{width:x(a),height:x(p)},origWidth:D,origHeight:B,canShrink:e,canExpand:c,wPadding:y,hPadding:z,wrapSpace:p-k.outerHeight(!0),skinSpace:k.height()-j});!w&&(h.autoHeight&&j>u&&j
+    <v
+    &&!c)&&g.height("auto")},_getPosition:function(a){var
+    d=b.current,e=b.getViewport(),c=d.margin,f=b.wrap.width()+c[1]+c[3],g=b.wrap.height()+c[0]+c[2],c={position:"absolute",
+    top:c[0],left:c[3]};d.autoCenter&&d.fixed&&!a&&g<=e.h&&f<=e.w?c.position="fixed":d.locked||(c.top+=e.y,c.left+=e.x);c.top=x(Math.max(c.top,c.top+(e.h-g)*d.topRatio));c.left=x(Math.max(c.left,c.left+(e.w-f)*d.leftRatio));return
+    c},_afterZoomIn:function(){var
+    a=b.current;a&&(b.isOpen=b.isOpened=!0,b.wrap.css("overflow","visible").addClass("fancybox-opened"),b.update(),(a.closeClick||a.nextClick&&1
+    <b.group.length
+    )&&b.inner.css("cursor","pointer").bind("click.fb",function(d){!f(d.target).is("a")&&!f(d.target).parent().is("a")&&
+    (d.preventDefault(),b[a.closeClick?"close":"next"]())}),a.closeBtn&&f(a.tpl.closeBtn).appendTo(b.skin).bind("click.fb",function(a){a.preventDefault();b.close()}),a.arrows&&1
+    <b.group.length
+    &&((a.loop||0
+    <a.index
+    )&&f(a.tpl.prev).appendTo(b.outer).bind("click.fb",b.prev),(a.loop||a.index
+    <b.group.length-1
+    )&&f(a.tpl.next).appendTo(b.outer).bind("click.fb",b.next)),b.trigger("afterShow"),!a.loop&&a.index===a.group.length-1?b.play(!1):b.opts.autoPlay&&!b.player.isActive&&(b.opts.autoPlay=!1,b.play()))},_afterZoomOut:function(a){a=
+    a||b.current;f(".fancybox-wrap").trigger("onReset").remove();f.extend(b,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null});b.trigger("afterClose",a)}});b.transitions={getOrigPosition:function(){var
+    a=b.current,d=a.element,e=a.orig,c={},f=50,g=50,h=a.hPadding,j=a.wPadding,m=b.getViewport();!e&&(a.isDom&&d.is(":visible"))&&(e=d.find("img:first"),e.length||(e=d));t(e)?(c=e.offset(),e.is("img")&&(f=e.outerWidth(),g=e.outerHeight())):
+    (c.top=m.y+(m.h-g)*a.topRatio,c.left=m.x+(m.w-f)*a.leftRatio);if("fixed"===b.wrap.css("position")||a.locked)c.top-=m.y,c.left-=m.x;return
+    c={top:x(c.top-h*a.topRatio),left:x(c.left-j*a.leftRatio),width:x(f+j),height:x(g+h)}},step:function(a,d){var
+    e,c,f=d.prop;c=b.current;var
+    g=c.wrapSpace,h=c.skinSpace;if("width"===f||"height"===f)e=d.end===d.start?1:(a-d.start)/(d.end-d.start),b.isClosing&&(e=1-e),c="width"===f?c.wPadding:c.hPadding,c=a-c,b.skin[f](l("width"===f?c:c-g*e)),b.inner[f](l("width"===
+    f?c:c-g*e-h*e))},zoomIn:function(){var
+    a=b.current,d=a.pos,e=a.openEffect,c="elastic"===e,k=f.extend({opacity:1},d);delete
+    k.position;c?(d=this.getOrigPosition(),a.openOpacity&&(d.opacity=0.1)):"fade"===e&&(d.opacity=0.1);b.wrap.css(d).animate(k,{duration:"none"===e?0:a.openSpeed,easing:a.openEasing,step:c?this.step:null,complete:b._afterZoomIn})},zoomOut:function(){var
+    a=b.current,d=a.closeEffect,e="elastic"===d,c={opacity:0.1};e&&(c=this.getOrigPosition(),a.closeOpacity&&(c.opacity=0.1));b.wrap.animate(c,
+    {duration:"none"===d?0:a.closeSpeed,easing:a.closeEasing,step:e?this.step:null,complete:b._afterZoomOut})},changeIn:function(){var
+    a=b.current,d=a.nextEffect,e=a.pos,c={opacity:1},f=b.direction,g;e.opacity=0.1;"elastic"===d&&(g="down"===f||"up"===f?"top":"left","down"===f||"right"===f?(e[g]=x(l(e[g])-200),c[g]="+=200px"):(e[g]=x(l(e[g])+200),c[g]="-=200px"));"none"===d?b._afterZoomIn():b.wrap.css(e).animate(c,{duration:a.nextSpeed,easing:a.nextEasing,complete:b._afterZoomIn})},changeOut:function(){var
+    a=
+    b.previous,d=a.prevEffect,e={opacity:0.1},c=b.direction;"elastic"===d&&(e["down"===c||"up"===c?"top":"left"]=("up"===c||"left"===c?"-":"+")+"=200px");a.wrap.animate(e,{duration:"none"===d?0:a.prevSpeed,easing:a.prevEasing,complete:function(){f(this).trigger("onReset").remove()}})}};b.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!s,fixed:!0},overlay:null,fixed:!1,create:function(a){a=f.extend({},this.defaults,a);this.overlay&&this.close();this.overlay=f('
+    <div class="fancybox-overlay"></div>
+    ').appendTo("body");
+    this.fixed=!1;a.fixed&&b.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(a){var
+    d=this;a=f.extend({},this.defaults,a);this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(a);this.fixed||(q.bind("resize.overlay",f.proxy(this.update,this)),this.update());a.closeClick&&this.overlay.bind("click.overlay",function(a){f(a.target).hasClass("fancybox-overlay")&&(b.isActive?b.close():d.close())});this.overlay.css(a.css).show()},
+    close:function(){f(".fancybox-overlay").remove();q.unbind("resize.overlay");this.overlay=null;!1!==this.margin&&(f("body").css("margin-right",this.margin),this.margin=!1);this.el&&this.el.removeClass("fancybox-lock")},update:function(){var
+    a="100%",b;this.overlay.width(a).height("100%");H?(b=Math.max(z.documentElement.offsetWidth,z.body.offsetWidth),n.width()>b&&(a=n.width())):n.width()>q.width()&&(a=n.width());this.overlay.width(a).height(n.height())},onReady:function(a,b){f(".fancybox-overlay").stop(!0,
+    !0);this.overlay||(this.margin=n.height()>q.height()||"scroll"===f("body").css("overflow-y")?f("body").css("margin-right"):!1,this.el=z.all&&!z.querySelector?f("html"):f("body"),this.create(a));a.locked&&this.fixed&&(b.locked=this.overlay.append(b.wrap),b.fixed=!1);!0===a.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(a,b){b.locked&&(this.el.addClass("fancybox-lock"),!1!==this.margin&&f("body").css("margin-right",l(this.margin)+b.scrollbarWidth));this.open(a)},onUpdate:function(){this.fixed||
+    this.update()},afterClose:function(a){this.overlay&&!b.isActive&&this.overlay.fadeOut(a.speedOut,f.proxy(this.close,this))}};b.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(a){var
+    d=b.current,e=d.title,c=a.type;f.isFunction(e)&&(e=e.call(d.element,d));if(p(e)&&""!==f.trim(e)){d=f('
+    <div class="fancybox-title fancybox-title-'+c+'-wrap">'+e+"</div>
+    ");switch(c){case "inside":c=b.skin;break;case "outside":c=b.wrap;break;case
+    "over":c=b.inner;break;default:c=b.skin,d.appendTo("body"),
+    H&&d.width(d.width()),d.wrapInner('<span class="child"></span>'),b.current.margin[2]+=Math.abs(l(d.css("margin-bottom")))}d["top"===a.position?"prependTo":"appendTo"](c)}}};f.fn.fancybox=function(a){var
+    d,e=f(this),c=this.selector||"",k=function(g){var
+    h=f(this).blur(),j=d,k,l;!g.ctrlKey&&(!g.altKey&&!g.shiftKey&&!g.metaKey)&&!h.is(".fancybox-wrap")&&(k=a.groupAttr||"data-fancybox-group",l=h.attr(k),l||(k="rel",l=h.get(0)[k]),l&&(""!==l&&"nofollow"!==l)&&(h=c.length?f(c):e,h=h.filter("["+k+'="'+l+
+    '"]'),j=h.index(this)),a.index=j,!1!==b.open(h,a)&&g.preventDefault())};a=a||{};d=a.index||0;!c||!1===a.live?e.unbind("click.fb-start").bind("click.fb-start",k):n.undelegate(c,"click.fb-start").delegate(c+":not('.fancybox-item,
+    .fancybox-nav')","click.fb-start",k);this.filter("[data-fancybox-start=1]").trigger("click");return
+    this};n.ready(function(){f.scrollbarWidth===r&&(f.scrollbarWidth=function(){var a=f('
+    <div style="width:50px;height:50px;overflow:auto">
+        <div/>
+    </div>
+    ').appendTo("body"),b=a.children(),
+    b=b.innerWidth()-b.height(99).innerWidth();a.remove();return b});if(f.support.fixedPosition===r){var
+    a=f.support,d=f('
+    <div style="position:fixed;top:20px;"></div>
+    ').appendTo("body"),e=20===d[0].offsetTop||15===d[0].offsetTop;d.remove();a.fixedPosition=e}f.extend(b.defaults,{scrollbarWidth:f.scrollbarWidth(),fixed:f.support.fixedPosition,parent:f("body")})})})(window,document,jQuery);
\ No newline at end of file
Index: blogs/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/__init__.py	(revision )
+++ blogs/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: contents/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/models.py	(revision )
+++ contents/models.py	(revision )
@@ -0,0 +1,43 @@
+from django.db import models
+
+
+class Content(models.Model):
+    title = models.CharField(max_length=200)
+    description = models.TextField()
+    page_slug = models.CharField(max_length=200)
+    pub_date = models.DateField('date published')
+    meta_title = models.CharField(max_length=200)
+    meta_description = models.CharField(max_length=500)
+    is_menu = models.BooleanField()
+
+    def __unicode__(self):
+        return self.title
+
+
+class Images(models.Model):
+    content = models.ForeignKey(Content)
+    alt = models.CharField(max_length=200)
+    url = models.ImageField(upload_to='contents/static/images')
+
+    def __unicode__(self):
+        return self.alt
+
+
+class slideshow(models.Model):
+    content = models.ForeignKey(Content)
+    alt = models.CharField(max_length=200)
+    url = models.ImageField(upload_to='contents/static/slideshows')
+
+    def __unicode__(self):
+        return self.alt
+
+
+from django import forms
+
+
+class ContactForm(forms.Form):
+    subject = forms.CharField(max_length=100)
+    message = forms.CharField(widget=forms.Textarea(attrs={'rows': 5, 'cols': 40}))
+    sender = forms.EmailField()
+    name = forms.CharField(max_length=100)
+    cc_myself = forms.BooleanField(required=False)
\ No newline at end of file
Index: templates/contents/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/contents/index.html	(revision )
+++ templates/contents/index.html	(revision )
@@ -0,0 +1,11 @@
+{% extends "site_base.html" %}
+{% load menu %}
+{% block body %}
+<h1>{{ content.title }}</h1>
+{{ content.description }}
+<ul>
+    {% for image in imagecollection %}
+    <li><img src='/{{ image.url|cut:"contents/" }}' title="{{ image.alt }}"/></li>
+    {% endfor %}
+</ul>
+{% endblock %}
\ No newline at end of file
Index: contents/static/js/jquery.bxslider.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/jquery.bxslider.js	(revision )
+++ contents/static/js/jquery.bxslider.js	(revision )
@@ -0,0 +1,1326 @@
+/**
+* BxSlider v4.1.1 - Fully loaded, responsive content slider
+* http://bxslider.com
+*
+* Copyright 2013, Steven Wanderski - http://stevenwanderski.com - http://bxcreative.com
+* Written while drinking Belgian ales and listening to jazz
+*
+* Released under the MIT license - http://opensource.org/licenses/MIT
+*/
+
+;(function($){
+
+var plugin = {};
+
+var defaults = {
+
+// GENERAL
+mode: 'horizontal',
+slideSelector: '',
+infiniteLoop: true,
+hideControlOnEnd: false,
+speed: 500,
+easing: null,
+slideMargin: 0,
+startSlide: 0,
+randomStart: false,
+captions: false,
+ticker: false,
+tickerHover: false,
+adaptiveHeight: false,
+adaptiveHeightSpeed: 500,
+video: false,
+useCSS: true,
+preloadImages: 'visible',
+responsive: true,
+
+// TOUCH
+touchEnabled: true,
+swipeThreshold: 50,
+oneToOneTouch: true,
+preventDefaultSwipeX: true,
+preventDefaultSwipeY: false,
+
+// PAGER
+pager: true,
+pagerType: 'full',
+pagerShortSeparator: ' / ',
+pagerSelector: null,
+buildPager: null,
+pagerCustom: null,
+
+// CONTROLS
+controls: true,
+nextText: 'Next',
+prevText: 'Prev',
+nextSelector: null,
+prevSelector: null,
+autoControls: false,
+startText: 'Start',
+stopText: 'Stop',
+autoControlsCombine: false,
+autoControlsSelector: null,
+
+// AUTO
+auto: false,
+pause: 4000,
+autoStart: true,
+autoDirection: 'next',
+autoHover: false,
+autoDelay: 0,
+
+// CAROUSEL
+minSlides: 1,
+maxSlides: 1,
+moveSlides: 0,
+slideWidth: 0,
+
+// CALLBACKS
+onSliderLoad: function() {},
+onSlideBefore: function() {},
+onSlideAfter: function() {},
+onSlideNext: function() {},
+onSlidePrev: function() {}
+}
+
+$.fn.bxSlider = function(options){
+
+if(this.length == 0) return this;
+
+// support mutltiple elements
+if(this.length > 1){
+this.each(function(){$(this).bxSlider(options)});
+return this;
+}
+
+// create a namespace to be used throughout the plugin
+var slider = {};
+// set a reference to our slider element
+var el = this;
+plugin.el = this;
+
+/**
+* Makes slideshow responsive
+*/
+// first get the original window dimens (thanks alot IE)
+var windowWidth = $(window).width();
+var windowHeight = $(window).height();
+
+
+/**
+* ===================================================================================
+* = PRIVATE FUNCTIONS
+* ===================================================================================
+*/
+
+/**
+* Initializes namespace settings to be used throughout plugin
+*/
+var init = function(){
+// merge user-supplied options with the defaults
+slider.settings = $.extend({}, defaults, options);
+// parse slideWidth setting
+slider.settings.slideWidth = parseInt(slider.settings.slideWidth);
+// store the original children
+slider.children = el.children(slider.settings.slideSelector);
+// check if actual number of slides is less than minSlides / maxSlides
+if(slider.children.length < slider.settings.minSlides) slider.settings.minSlides = slider.children.length;
+if(slider.children.length < slider.settings.maxSlides) slider.settings.maxSlides = slider.children.length;
+// if random start, set the startSlide setting to random number
+if(slider.settings.randomStart) slider.settings.startSlide = Math.floor(Math.random() * slider.children.length);
+// store active slide information
+slider.active = { index: slider.settings.startSlide }
+// store if the slider is in carousel mode (displaying / moving multiple slides)
+slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1;
+// if carousel, force preloadImages = 'all'
+if(slider.carousel) slider.settings.preloadImages = 'all';
+// calculate the min / max width thresholds based on min / max number of slides
+// used to setup and update carousel slides dimensions
+slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);
+slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
+// store the current state of the slider (if currently animating, working is true)
+slider.working = false;
+// initialize the controls object
+slider.controls = {};
+// initialize an auto interval
+slider.interval = null;
+// determine which property to use for transitions
+slider.animProp = slider.settings.mode == 'vertical' ? 'top' : 'left';
+// determine if hardware acceleration can be used
+slider.usingCSS = slider.settings.useCSS && slider.settings.mode != 'fade' && (function(){
+// create our test div element
+var div = document.createElement('div');
+// css transition properties
+var props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];
+// test for each property
+for(var i in props){
+if(div.style[props[i]] !== undefined){
+slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();
+slider.animProp = '-' + slider.cssPrefix + '-transform';
+return true;
+}
+}
+return false;
+}());
+// if vertical mode always make maxSlides and minSlides equal
+if(slider.settings.mode == 'vertical') slider.settings.maxSlides = slider.settings.minSlides;
+// save original style data
+el.data("origStyle", el.attr("style"));
+el.children(slider.settings.slideSelector).each(function() {
+$(this).data("origStyle", $(this).attr("style"));
+});
+// perform all DOM / CSS modifications
+setup();
+}
+
+/**
+* Performs all DOM and CSS modifications
+*/
+var setup = function(){
+// wrap el in a wrapper
+el.wrap('
+<div class="bx-wrapper">
+    <div class="bx-viewport"></div>
+</div>');
+// store a namspace reference to .bx-viewport
+slider.viewport = el.parent();
+// add a loading div to display while images are loading
+slider.loader = $('
+<div class="bx-loading"/>');
+slider.viewport.prepend(slider.loader);
+// set el to a massive width, to hold any needed slides
+// also strip any margin and padding from el
+el.css({
+width: slider.settings.mode == 'horizontal' ? (slider.children.length * 100 + 215) + '%' : 'auto',
+position: 'relative'
+});
+// if using CSS, add the easing property
+if(slider.usingCSS && slider.settings.easing){
+el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);
+// if not using CSS and no easing value was supplied, use the default JS animation easing (swing)
+}else if(!slider.settings.easing){
+slider.settings.easing = 'swing';
+}
+var slidesShowing = getNumberSlidesShowing();
+// make modifications to the viewport (.bx-viewport)
+slider.viewport.css({
+width: '100%',
+overflow: 'hidden',
+position: 'relative'
+});
+slider.viewport.parent().css({
+maxWidth: getViewportMaxWidth()
+});
+// make modification to the wrapper (.bx-wrapper)
+if(!slider.settings.pager) {
+slider.viewport.parent().css({
+margin: '0 auto 0px'
+});
+}
+// apply css to all slider children
+slider.children.css({
+'float': slider.settings.mode == 'horizontal' ? 'left' : 'none',
+listStyle: 'none',
+position: 'relative'
+});
+// apply the calculated width after the float is applied to prevent scrollbar interference
+slider.children.css('width', getSlideWidth());
+// if slideMargin is supplied, add the css
+if(slider.settings.mode == 'horizontal' && slider.settings.slideMargin > 0) slider.children.css('marginRight', slider.settings.slideMargin);
+if(slider.settings.mode == 'vertical' && slider.settings.slideMargin > 0) slider.children.css('marginBottom', slider.settings.slideMargin);
+// if "fade" mode, add positioning and z-index CSS
+if(slider.settings.mode == 'fade'){
+slider.children.css({
+position: 'absolute',
+zIndex: 0,
+display: 'none'
+});
+// prepare the z-index on the showing element
+slider.children.eq(slider.settings.startSlide).css({zIndex: 50, display: 'block'});
+}
+// create an element to contain all slider controls (pager, start / stop, etc)
+slider.controls.el = $('
+<div class="bx-controls"/>');
+// if captions are requested, add them
+if(slider.settings.captions) appendCaptions();
+// check if startSlide is last slide
+slider.active.last = slider.settings.startSlide == getPagerQty() - 1;
+// if video is true, set up the fitVids plugin
+if(slider.settings.video) el.fitVids();
+// set the default preload selector (visible)
+var preloadSelector = slider.children.eq(slider.settings.startSlide);
+if (slider.settings.preloadImages == "all") preloadSelector = slider.children;
+// only check for control addition if not in "ticker" mode
+if(!slider.settings.ticker){
+// if pager is requested, add it
+if(slider.settings.pager) appendPager();
+// if controls are requested, add them
+if(slider.settings.controls) appendControls();
+// if auto is true, and auto controls are requested, add them
+if(slider.settings.auto && slider.settings.autoControls) appendControlsAuto();
+// if any control option is requested, add the controls wrapper
+if(slider.settings.controls || slider.settings.autoControls || slider.settings.pager) slider.viewport.after(slider.controls.el);
+// if ticker mode, do not allow a pager
+}else{
+slider.settings.pager = false;
+}
+// preload all images, then perform final DOM / CSS modifications that depend on images being loaded
+loadElements(preloadSelector, start);
+}
+
+var loadElements = function(selector, callback){
+var total = selector.find('img, iframe').length;
+if (total == 0){
+callback();
+return;
+}
+var count = 0;
+selector.find('img, iframe').each(function(){
+$(this).one('load', function() {
+if(++count == total) callback();
+}).each(function() {
+if(this.complete) $(this).load();
+});
+});
+}
+
+/**
+* Start the slider
+*/
+var start = function(){
+// if infinite loop, prepare additional slides
+if(slider.settings.infiniteLoop && slider.settings.mode != 'fade' && !slider.settings.ticker){
+var slice = slider.settings.mode == 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides;
+var sliceAppend = slider.children.slice(0, slice).clone().addClass('bx-clone');
+var slicePrepend = slider.children.slice(-slice).clone().addClass('bx-clone');
+el.append(sliceAppend).prepend(slicePrepend);
+}
+// remove the loading DOM element
+slider.loader.remove();
+// set the left / top position of "el"
+setSlidePosition();
+// if "vertical" mode, always use adaptiveHeight to prevent odd behavior
+if (slider.settings.mode == 'vertical') slider.settings.adaptiveHeight = true;
+// set the viewport height
+slider.viewport.height(getViewportHeight());
+// make sure everything is positioned just right (same as a window resize)
+el.redrawSlider();
+// onSliderLoad callback
+slider.settings.onSliderLoad(slider.active.index);
+// slider has been fully initialized
+slider.initialized = true;
+// bind the resize call to the window
+if (slider.settings.responsive) $(window).bind('resize', resizeWindow);
+// if auto is true, start the show
+if (slider.settings.auto && slider.settings.autoStart) initAuto();
+// if ticker is true, start the ticker
+if (slider.settings.ticker) initTicker();
+// if pager is requested, make the appropriate pager link active
+if (slider.settings.pager) updatePagerActive(slider.settings.startSlide);
+// check for any updates to the controls (like hideControlOnEnd updates)
+if (slider.settings.controls) updateDirectionControls();
+// if touchEnabled is true, setup the touch events
+if (slider.settings.touchEnabled && !slider.settings.ticker) initTouch();
+}
+
+/**
+* Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value
+*/
+var getViewportHeight = function(){
+var height = 0;
+// first determine which children (slides) should be used in our height calculation
+var children = $();
+// if mode is not "vertical" and adaptiveHeight is false, include all children
+if(slider.settings.mode != 'vertical' && !slider.settings.adaptiveHeight){
+children = slider.children;
+}else{
+// if not carousel, return the single active child
+if(!slider.carousel){
+children = slider.children.eq(slider.active.index);
+// if carousel, return a slice of children
+}else{
+// get the individual slide index
+var currentIndex = slider.settings.moveSlides == 1 ? slider.active.index : slider.active.index * getMoveBy();
+// add the current slide to the children
+children = slider.children.eq(currentIndex);
+// cycle through the remaining "showing" slides
+for (i = 1; i <= slider.settings.maxSlides - 1; i++){
+// if looped back to the start
+if(currentIndex + i >= slider.children.length){
+children = children.add(slider.children.eq(i - 1));
+}else{
+children = children.add(slider.children.eq(currentIndex + i));
+}
+}
+}
+}
+// if "vertical" mode, calculate the sum of the heights of the children
+if(slider.settings.mode == 'vertical'){
+children.each(function(index) {
+height += $(this).outerHeight();
+});
+// add user-supplied margins
+if(slider.settings.slideMargin > 0){
+height += slider.settings.slideMargin * (slider.settings.minSlides - 1);
+}
+// if not "vertical" mode, calculate the max height of the children
+}else{
+height = Math.max.apply(Math, children.map(function(){
+return $(this).outerHeight(false);
+}).get());
+}
+return height;
+}
+
+/**
+* Returns the calculated width to be used for the outer wrapper / viewport
+*/
+var getViewportMaxWidth = function(){
+var width = '100%';
+if(slider.settings.slideWidth > 0){
+if(slider.settings.mode == 'horizontal'){
+width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
+}else{
+width = slider.settings.slideWidth;
+}
+}
+return width;
+}
+
+/**
+* Returns the calculated width to be applied to each slide
+*/
+var getSlideWidth = function(){
+// start with any user-supplied slide width
+var newElWidth = slider.settings.slideWidth;
+// get the current viewport width
+var wrapWidth = slider.viewport.width();
+// if slide width was not supplied, or is larger than the viewport use the viewport width
+if(slider.settings.slideWidth == 0 ||
+(slider.settings.slideWidth > wrapWidth && !slider.carousel) ||
+slider.settings.mode == 'vertical'){
+newElWidth = wrapWidth;
+// if carousel, use the thresholds to determine the width
+}else if(slider.settings.maxSlides > 1 && slider.settings.mode == 'horizontal'){
+if(wrapWidth > slider.maxThreshold){
+// newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.maxSlides - 1))) / slider.settings.maxSlides;
+}else if(wrapWidth < slider.minThreshold){
+newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;
+}
+}
+return newElWidth;
+}
+
+/**
+* Returns the number of slides currently visible in the viewport (includes partially visible slides)
+*/
+var getNumberSlidesShowing = function(){
+var slidesShowing = 1;
+if(slider.settings.mode == 'horizontal' && slider.settings.slideWidth > 0){
+// if viewport is smaller than minThreshold, return minSlides
+if(slider.viewport.width() < slider.minThreshold){
+slidesShowing = slider.settings.minSlides;
+// if viewport is larger than minThreshold, return maxSlides
+}else if(slider.viewport.width() > slider.maxThreshold){
+slidesShowing = slider.settings.maxSlides;
+// if viewport is between min / max thresholds, divide viewport width by first child width
+}else{
+var childWidth = slider.children.first().width();
+slidesShowing = Math.floor(slider.viewport.width() / childWidth);
+}
+// if "vertical" mode, slides showing will always be minSlides
+}else if(slider.settings.mode == 'vertical'){
+slidesShowing = slider.settings.minSlides;
+}
+return slidesShowing;
+}
+
+/**
+* Returns the number of pages (one full viewport of slides is one "page")
+*/
+var getPagerQty = function(){
+var pagerQty = 0;
+// if moveSlides is specified by the user
+if(slider.settings.moveSlides > 0){
+if(slider.settings.infiniteLoop){
+pagerQty = slider.children.length / getMoveBy();
+}else{
+// use a while loop to determine pages
+var breakPoint = 0;
+var counter = 0
+// when breakpoint goes above children length, counter is the number of pages
+while (breakPoint < slider.children.length){
+++pagerQty;
+breakPoint = counter + getNumberSlidesShowing();
+counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();
+}
+}
+// if moveSlides is 0 (auto) divide children length by sides showing, then round up
+}else{
+pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());
+}
+return pagerQty;
+}
+
+/**
+* Returns the number of indivual slides by which to shift the slider
+*/
+var getMoveBy = function(){
+// if moveSlides was set by the user and moveSlides is less than number of slides showing
+if(slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()){
+return slider.settings.moveSlides;
+}
+// if moveSlides is 0 (auto)
+return getNumberSlidesShowing();
+}
+
+/**
+* Sets the slider's (el) left or top position
+*/
+var setSlidePosition = function(){
+// if last slide, not infinite loop, and number of children is larger than specified maxSlides
+if(slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop){
+if (slider.settings.mode == 'horizontal'){
+// get the last child's position
+var lastChild = slider.children.last();
+var position = lastChild.position();
+// set the left position
+setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.width())), 'reset', 0);
+}else if(slider.settings.mode == 'vertical'){
+// get the last showing index's position
+var lastShowingIndex = slider.children.length - slider.settings.minSlides;
+var position = slider.children.eq(lastShowingIndex).position();
+// set the top position
+setPositionProperty(-position.top, 'reset', 0);
+}
+// if not last slide
+}else{
+// get the position of the first showing slide
+var position = slider.children.eq(slider.active.index * getMoveBy()).position();
+// check for last slide
+if (slider.active.index == getPagerQty() - 1) slider.active.last = true;
+// set the repective position
+if (position != undefined){
+if (slider.settings.mode == 'horizontal') setPositionProperty(-position.left, 'reset', 0);
+else if (slider.settings.mode == 'vertical') setPositionProperty(-position.top, 'reset', 0);
+}
+}
+}
+
+/**
+* Sets the el's animating property position (which in turn will sometimes animate el).
+* If using CSS, sets the transform property. If not using CSS, sets the top / left property.
+*
+* @param value (int)
+*  - the animating property's value
+*
+* @param type (string) 'slider', 'reset', 'ticker'
+*  - the type of instance for which the function is being
+*
+* @param duration (int)
+*  - the amount of time (in ms) the transition should occupy
+*
+* @param params (array) optional
+*  - an optional parameter containing any variables that need to be passed in
+*/
+var setPositionProperty = function(value, type, duration, params){
+// use CSS transform
+if(slider.usingCSS){
+// determine the translate3d value
+var propValue = slider.settings.mode == 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';
+// add the CSS transition-duration
+el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');
+if(type == 'slide'){
+// set the property value
+el.css(slider.animProp, propValue);
+// bind a callback method - executes when CSS transition completes
+el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(){
+// unbind the callback
+el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
+updateAfterSlideTransition();
+});
+}else if(type == 'reset'){
+el.css(slider.animProp, propValue);
+}else if(type == 'ticker'){
+// make the transition use 'linear'
+el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');
+el.css(slider.animProp, propValue);
+// bind a callback method - executes when CSS transition completes
+el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(){
+// unbind the callback
+el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
+// reset the position
+setPositionProperty(params['resetValue'], 'reset', 0);
+// start the loop again
+tickerLoop();
+});
+}
+// use JS animate
+}else{
+var animateObj = {};
+animateObj[slider.animProp] = value;
+if(type == 'slide'){
+el.animate(animateObj, duration, slider.settings.easing, function(){
+updateAfterSlideTransition();
+});
+}else if(type == 'reset'){
+el.css(slider.animProp, value)
+}else if(type == 'ticker'){
+el.animate(animateObj, speed, 'linear', function(){
+setPositionProperty(params['resetValue'], 'reset', 0);
+// run the recursive loop after animation
+tickerLoop();
+});
+}
+}
+}
+
+/**
+* Populates the pager with proper amount of pages
+*/
+var populatePager = function(){
+var pagerHtml = '';
+var pagerQty = getPagerQty();
+// loop through each pager item
+for(var i=0; i < pagerQty; i++){
+var linkContent = '';
+// if a buildPager function is supplied, use it to get pager link value, else use index + 1
+if(slider.settings.buildPager && $.isFunction(slider.settings.buildPager)){
+linkContent = slider.settings.buildPager(i);
+slider.pagerEl.addClass('bx-custom-pager');
+}else{
+linkContent = i + 1;
+slider.pagerEl.addClass('bx-default-pager');
+}
+// var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;
+// add the markup to the string
+pagerHtml += '
+<div class="bx-pager-item"><a href="" data-slide-index="' + i + '" class="bx-pager-link">' + linkContent + '</a></div>';
+};
+// populate the pager element with pager links
+slider.pagerEl.html(pagerHtml);
+}
+
+/**
+* Appends the pager to the controls element
+*/
+var appendPager = function(){
+if(!slider.settings.pagerCustom){
+// create the pager DOM element
+slider.pagerEl = $('
+<div class="bx-pager"/>');
+// if a pager selector was supplied, populate it with the pager
+if(slider.settings.pagerSelector){
+$(slider.settings.pagerSelector).html(slider.pagerEl);
+// if no pager selector was supplied, add it after the wrapper
+}else{
+slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);
+}
+// populate the pager
+populatePager();
+}else{
+slider.pagerEl = $(slider.settings.pagerCustom);
+}
+// assign the pager click binding
+slider.pagerEl.delegate('a', 'click', clickPagerBind);
+}
+
+/**
+* Appends prev / next controls to the controls element
+*/
+var appendControls = function(){
+slider.controls.next = $('<a class="bx-next" href="">' + slider.settings.nextText + '</a>');
+slider.controls.prev = $('<a class="bx-prev" href="">' + slider.settings.prevText + '</a>');
+// bind click actions to the controls
+slider.controls.next.bind('click', clickNextBind);
+slider.controls.prev.bind('click', clickPrevBind);
+// if nextSlector was supplied, populate it
+if(slider.settings.nextSelector){
+$(slider.settings.nextSelector).append(slider.controls.next);
+}
+// if prevSlector was supplied, populate it
+if(slider.settings.prevSelector){
+$(slider.settings.prevSelector).append(slider.controls.prev);
+}
+// if no custom selectors were supplied
+if(!slider.settings.nextSelector && !slider.settings.prevSelector){
+// add the controls to the DOM
+slider.controls.directionEl = $('
+<div class="bx-controls-direction"/>');
+// add the control elements to the directionEl
+slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);
+// slider.viewport.append(slider.controls.directionEl);
+slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);
+}
+}
+
+/**
+* Appends start / stop auto controls to the controls element
+*/
+var appendControlsAuto = function(){
+slider.controls.start = $('
+<div class="bx-controls-auto-item"><a class="bx-start" href="">' + slider.settings.startText + '</a></div>');
+slider.controls.stop = $('
+<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + slider.settings.stopText + '</a></div>');
+// add the controls to the DOM
+slider.controls.autoEl = $('
+<div class="bx-controls-auto"/>');
+// bind click actions to the controls
+slider.controls.autoEl.delegate('.bx-start', 'click', clickStartBind);
+slider.controls.autoEl.delegate('.bx-stop', 'click', clickStopBind);
+// if autoControlsCombine, insert only the "start" control
+if(slider.settings.autoControlsCombine){
+slider.controls.autoEl.append(slider.controls.start);
+// if autoControlsCombine is false, insert both controls
+}else{
+slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);
+}
+// if auto controls selector was supplied, populate it with the controls
+if(slider.settings.autoControlsSelector){
+$(slider.settings.autoControlsSelector).html(slider.controls.autoEl);
+// if auto controls selector was not supplied, add it after the wrapper
+}else{
+slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);
+}
+// update the auto controls
+updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');
+}
+
+/**
+* Appends image captions to the DOM
+*/
+var appendCaptions = function(){
+// cycle through each child
+slider.children.each(function(index){
+// get the image title attribute
+var title = $(this).find('img:first').attr('title');
+// append the caption
+if (title != undefined && ('' + title).length) {
+$(this).append('
+<div class="bx-caption"><span>' + title + '</span></div>');
+}
+});
+}
+
+/**
+* Click next binding
+*
+* @param e (event)
+*  - DOM event object
+*/
+var clickNextBind = function(e){
+// if auto show is running, stop it
+if (slider.settings.auto) el.stopAuto();
+el.goToNextSlide();
+e.preventDefault();
+}
+
+/**
+* Click prev binding
+*
+* @param e (event)
+*  - DOM event object
+*/
+var clickPrevBind = function(e){
+// if auto show is running, stop it
+if (slider.settings.auto) el.stopAuto();
+el.goToPrevSlide();
+e.preventDefault();
+}
+
+/**
+* Click start binding
+*
+* @param e (event)
+*  - DOM event object
+*/
+var clickStartBind = function(e){
+el.startAuto();
+e.preventDefault();
+}
+
+/**
+* Click stop binding
+*
+* @param e (event)
+*  - DOM event object
+*/
+var clickStopBind = function(e){
+el.stopAuto();
+e.preventDefault();
+}
+
+/**
+* Click pager binding
+*
+* @param e (event)
+*  - DOM event object
+*/
+var clickPagerBind = function(e){
+// if auto show is running, stop it
+if (slider.settings.auto) el.stopAuto();
+var pagerLink = $(e.currentTarget);
+var pagerIndex = parseInt(pagerLink.attr('data-slide-index'));
+// if clicked pager link is not active, continue with the goToSlide call
+if(pagerIndex != slider.active.index) el.goToSlide(pagerIndex);
+e.preventDefault();
+}
+
+/**
+* Updates the pager links with an active class
+*
+* @param slideIndex (int)
+*  - index of slide to make active
+*/
+var updatePagerActive = function(slideIndex){
+// if "short" pager type
+var len = slider.children.length; // nb of children
+if(slider.settings.pagerType == 'short'){
+if(slider.settings.maxSlides > 1) {
+len = Math.ceil(slider.children.length/slider.settings.maxSlides);
+}
+slider.pagerEl.html( (slideIndex + 1) + slider.settings.pagerShortSeparator + len);
+return;
+}
+// remove all pager active classes
+slider.pagerEl.find('a').removeClass('active');
+// apply the active class for all pagers
+slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });
+}
+
+/**
+* Performs needed actions after a slide transition
+*/
+var updateAfterSlideTransition = function(){
+// if infinte loop is true
+if(slider.settings.infiniteLoop){
+var position = '';
+// first slide
+if(slider.active.index == 0){
+// set the new position
+position = slider.children.eq(0).position();
+// carousel, last slide
+}else if(slider.active.index == getPagerQty() - 1 && slider.carousel){
+position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();
+// last slide
+}else if(slider.active.index == slider.children.length - 1){
+position = slider.children.eq(slider.children.length - 1).position();
+}
+if (slider.settings.mode == 'horizontal') { setPositionProperty(-position.left, 'reset', 0);; }
+else if (slider.settings.mode == 'vertical') { setPositionProperty(-position.top, 'reset', 0);; }
+}
+// declare that the transition is complete
+slider.working = false;
+// onSlideAfter callback
+slider.settings.onSlideAfter(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
+}
+
+/**
+* Updates the auto controls state (either active, or combined switch)
+*
+* @param state (string) "start", "stop"
+*  - the new state of the auto show
+*/
+var updateAutoControls = function(state){
+// if autoControlsCombine is true, replace the current control with the new state
+if(slider.settings.autoControlsCombine){
+slider.controls.autoEl.html(slider.controls[state]);
+// if autoControlsCombine is false, apply the "active" class to the appropriate control
+}else{
+slider.controls.autoEl.find('a').removeClass('active');
+slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');
+}
+}
+
+/**
+* Updates the direction controls (checks if either should be hidden)
+*/
+var updateDirectionControls = function(){
+if(getPagerQty() == 1){
+slider.controls.prev.addClass('disabled');
+slider.controls.next.addClass('disabled');
+}else if(!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd){
+// if first slide
+if (slider.active.index == 0){
+slider.controls.prev.addClass('disabled');
+slider.controls.next.removeClass('disabled');
+// if last slide
+}else if(slider.active.index == getPagerQty() - 1){
+slider.controls.next.addClass('disabled');
+slider.controls.prev.removeClass('disabled');
+// if any slide in the middle
+}else{
+slider.controls.prev.removeClass('disabled');
+slider.controls.next.removeClass('disabled');
+}
+}
+}
+
+/**
+* Initialzes the auto process
+*/
+var initAuto = function(){
+// if autoDelay was supplied, launch the auto show using a setTimeout() call
+if(slider.settings.autoDelay > 0){
+var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);
+// if autoDelay was not supplied, start the auto show normally
+}else{
+el.startAuto();
+}
+// if autoHover is requested
+if(slider.settings.autoHover){
+// on el hover
+el.hover(function(){
+// if the auto show is currently playing (has an active interval)
+if(slider.interval){
+// stop the auto show and pass true agument which will prevent control update
+el.stopAuto(true);
+// create a new autoPaused value which will be used by the relative "mouseout" event
+slider.autoPaused = true;
+}
+}, function(){
+// if the autoPaused value was created be the prior "mouseover" event
+if(slider.autoPaused){
+// start the auto show and pass true agument which will prevent control update
+el.startAuto(true);
+// reset the autoPaused value
+slider.autoPaused = null;
+}
+});
+}
+}
+
+/**
+* Initialzes the ticker process
+*/
+var initTicker = function(){
+var startPosition = 0;
+// if autoDirection is "next", append a clone of the entire slider
+if(slider.settings.autoDirection == 'next'){
+el.append(slider.children.clone().addClass('bx-clone'));
+// if autoDirection is "prev", prepend a clone of the entire slider, and set the left position
+}else{
+el.prepend(slider.children.clone().addClass('bx-clone'));
+var position = slider.children.first().position();
+startPosition = slider.settings.mode == 'horizontal' ? -position.left : -position.top;
+}
+setPositionProperty(startPosition, 'reset', 0);
+// do not allow controls in ticker mode
+slider.settings.pager = false;
+slider.settings.controls = false;
+slider.settings.autoControls = false;
+// if autoHover is requested
+if(slider.settings.tickerHover && !slider.usingCSS){
+// on el hover
+slider.viewport.hover(function(){
+el.stop();
+}, function(){
+// calculate the total width of children (used to calculate the speed ratio)
+var totalDimens = 0;
+slider.children.each(function(index){
+totalDimens += slider.settings.mode == 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
+});
+// calculate the speed ratio (used to determine the new speed to finish the paused animation)
+var ratio = slider.settings.speed / totalDimens;
+// determine which property to use
+var property = slider.settings.mode == 'horizontal' ? 'left' : 'top';
+// calculate the new speed
+var newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));
+tickerLoop(newSpeed);
+});
+}
+// start the ticker loop
+tickerLoop();
+}
+
+/**
+* Runs a continuous loop, news ticker-style
+*/
+var tickerLoop = function(resumeSpeed){
+speed = resumeSpeed ? resumeSpeed : slider.settings.speed;
+var position = {left: 0, top: 0};
+var reset = {left: 0, top: 0};
+// if "next" animate left position to last child, then reset left to 0
+if(slider.settings.autoDirection == 'next'){
+position = el.find('.bx-clone').first().position();
+// if "prev" animate left position to 0, then reset left to first non-clone child
+}else{
+reset = slider.children.first().position();
+}
+var animateProperty = slider.settings.mode == 'horizontal' ? -position.left : -position.top;
+var resetValue = slider.settings.mode == 'horizontal' ? -reset.left : -reset.top;
+var params = {resetValue: resetValue};
+setPositionProperty(animateProperty, 'ticker', speed, params);
+}
+
+/**
+* Initializes touch events
+*/
+var initTouch = function(){
+// initialize object to contain all touch values
+slider.touch = {
+start: {x: 0, y: 0},
+end: {x: 0, y: 0}
+}
+slider.viewport.bind('touchstart', onTouchStart);
+}
+
+/**
+* Event handler for "touchstart"
+*
+* @param e (event)
+*  - DOM event object
+*/
+var onTouchStart = function(e){
+if(slider.working){
+e.preventDefault();
+}else{
+// record the original position when touch starts
+slider.touch.originalPos = el.position();
+var orig = e.originalEvent;
+// record the starting touch x, y coordinates
+slider.touch.start.x = orig.changedTouches[0].pageX;
+slider.touch.start.y = orig.changedTouches[0].pageY;
+// bind a "touchmove" event to the viewport
+slider.viewport.bind('touchmove', onTouchMove);
+// bind a "touchend" event to the viewport
+slider.viewport.bind('touchend', onTouchEnd);
+}
+}
+
+/**
+* Event handler for "touchmove"
+*
+* @param e (event)
+*  - DOM event object
+*/
+var onTouchMove = function(e){
+var orig = e.originalEvent;
+// if scrolling on y axis, do not prevent default
+var xMovement = Math.abs(orig.changedTouches[0].pageX - slider.touch.start.x);
+var yMovement = Math.abs(orig.changedTouches[0].pageY - slider.touch.start.y);
+// x axis swipe
+if((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX){
+e.preventDefault();
+// y axis swipe
+}else if((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY){
+e.preventDefault();
+}
+if(slider.settings.mode != 'fade' && slider.settings.oneToOneTouch){
+var value = 0;
+// if horizontal, drag along x axis
+if(slider.settings.mode == 'horizontal'){
+var change = orig.changedTouches[0].pageX - slider.touch.start.x;
+value = slider.touch.originalPos.left + change;
+// if vertical, drag along y axis
+}else{
+var change = orig.changedTouches[0].pageY - slider.touch.start.y;
+value = slider.touch.originalPos.top + change;
+}
+setPositionProperty(value, 'reset', 0);
+}
+}
+
+/**
+* Event handler for "touchend"
+*
+* @param e (event)
+*  - DOM event object
+*/
+var onTouchEnd = function(e){
+slider.viewport.unbind('touchmove', onTouchMove);
+var orig = e.originalEvent;
+var value = 0;
+// record end x, y positions
+slider.touch.end.x = orig.changedTouches[0].pageX;
+slider.touch.end.y = orig.changedTouches[0].pageY;
+// if fade mode, check if absolute x distance clears the threshold
+if(slider.settings.mode == 'fade'){
+var distance = Math.abs(slider.touch.start.x - slider.touch.end.x);
+if(distance >= slider.settings.swipeThreshold){
+slider.touch.start.x > slider.touch.end.x ? el.goToNextSlide() : el.goToPrevSlide();
+el.stopAuto();
+}
+// not fade mode
+}else{
+var distance = 0;
+// calculate distance and el's animate property
+if(slider.settings.mode == 'horizontal'){
+distance = slider.touch.end.x - slider.touch.start.x;
+value = slider.touch.originalPos.left;
+}else{
+distance = slider.touch.end.y - slider.touch.start.y;
+value = slider.touch.originalPos.top;
+}
+// if not infinite loop and first / last slide, do not attempt a slide transition
+if(!slider.settings.infiniteLoop && ((slider.active.index == 0 && distance > 0) || (slider.active.last && distance < 0))){
+setPositionProperty(value, 'reset', 200);
+}else{
+// check if distance clears threshold
+if(Math.abs(distance) >= slider.settings.swipeThreshold){
+distance < 0 ? el.goToNextSlide() : el.goToPrevSlide();
+el.stopAuto();
+}else{
+// el.animate(property, 200);
+setPositionProperty(value, 'reset', 200);
+}
+}
+}
+slider.viewport.unbind('touchend', onTouchEnd);
+}
+
+/**
+* Window resize event callback
+*/
+var resizeWindow = function(e){
+// get the new window dimens (again, thank you IE)
+var windowWidthNew = $(window).width();
+var windowHeightNew = $(window).height();
+// make sure that it is a true window resize
+// *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements
+// are resized. Can you just die already?*
+if(windowWidth != windowWidthNew || windowHeight != windowHeightNew){
+// set the new window dimens
+windowWidth = windowWidthNew;
+windowHeight = windowHeightNew;
+// update all dynamic elements
+el.redrawSlider();
+}
+}
+
+/**
+* ===================================================================================
+* = PUBLIC FUNCTIONS
+* ===================================================================================
+*/
+
+/**
+* Performs slide transition to the specified slide
+*
+* @param slideIndex (int)
+*  - the destination slide's index (zero-based)
+*
+* @param direction (string)
+*  - INTERNAL USE ONLY - the direction of travel ("prev" / "next")
+*/
+el.goToSlide = function(slideIndex, direction){
+// if plugin is currently in motion, ignore request
+if(slider.working || slider.active.index == slideIndex) return;
+// declare that plugin is in motion
+slider.working = true;
+// store the old index
+slider.oldIndex = slider.active.index;
+// if slideIndex is less than zero, set active index to last child (this happens during infinite loop)
+if(slideIndex < 0){
+slider.active.index = getPagerQty() - 1;
+// if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)
+}else if(slideIndex >= getPagerQty()){
+slider.active.index = 0;
+// set active index to requested slide
+}else{
+slider.active.index = slideIndex;
+}
+// onSlideBefore, onSlideNext, onSlidePrev callbacks
+slider.settings.onSlideBefore(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
+if(direction == 'next'){
+slider.settings.onSlideNext(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
+}else if(direction == 'prev'){
+slider.settings.onSlidePrev(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
+}
+// check if last slide
+slider.active.last = slider.active.index >= getPagerQty() - 1;
+// update the pager with active class
+if(slider.settings.pager) updatePagerActive(slider.active.index);
+// // check for direction control update
+if(slider.settings.controls) updateDirectionControls();
+// if slider is set to mode: "fade"
+if(slider.settings.mode == 'fade'){
+// if adaptiveHeight is true and next height is different from current height, animate to the new height
+if(slider.settings.adaptiveHeight && slider.viewport.height() != getViewportHeight()){
+slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
+}
+// fade out the visible child and reset its z-index value
+slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});
+// fade in the newly requested slide
+slider.children.eq(slider.active.index).css('zIndex', 51).fadeIn(slider.settings.speed, function(){
+$(this).css('zIndex', 50);
+updateAfterSlideTransition();
+});
+// slider mode is not "fade"
+}else{
+// if adaptiveHeight is true and next height is different from current height, animate to the new height
+if(slider.settings.adaptiveHeight && slider.viewport.height() != getViewportHeight()){
+slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
+}
+var moveBy = 0;
+var position = {left: 0, top: 0};
+// if carousel and not infinite loop
+if(!slider.settings.infiniteLoop && slider.carousel && slider.active.last){
+if(slider.settings.mode == 'horizontal'){
+// get the last child position
+var lastChild = slider.children.eq(slider.children.length - 1);
+position = lastChild.position();
+// calculate the position of the last slide
+moveBy = slider.viewport.width() - lastChild.outerWidth();
+}else{
+// get last showing index position
+var lastShowingIndex = slider.children.length - slider.settings.minSlides;
+position = slider.children.eq(lastShowingIndex).position();
+}
+// horizontal carousel, going previous while on first slide (infiniteLoop mode)
+}else if(slider.carousel && slider.active.last && direction == 'prev'){
+// get the last child position
+var eq = slider.settings.moveSlides == 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);
+var lastChild = el.children('.bx-clone').eq(eq);
+position = lastChild.position();
+// if infinite loop and "Next" is clicked on the last slide
+}else if(direction == 'next' && slider.active.index == 0){
+// get the last clone position
+position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();
+slider.active.last = false;
+// normal non-zero requests
+}else if(slideIndex >= 0){
+var requestEl = slideIndex * getMoveBy();
+position = slider.children.eq(requestEl).position();
+}
+
+/* If the position doesn't exist
+* (e.g. if you destroy the slider on a next click),
+* it doesn't throw an error.
+*/
+if ("undefined" !== typeof(position)) {
+var value = slider.settings.mode == 'horizontal' ? -(position.left - moveBy) : -position.top;
+// plugin values to be animated
+setPositionProperty(value, 'slide', slider.settings.speed);
+}
+}
+}
+
+/**
+* Transitions to the next slide in the show
+*/
+el.goToNextSlide = function(){
+// if infiniteLoop is false and last page is showing, disregard call
+if (!slider.settings.infiniteLoop && slider.active.last) return;
+var pagerIndex = parseInt(slider.active.index) + 1;
+el.goToSlide(pagerIndex, 'next');
+}
+
+/**
+* Transitions to the prev slide in the show
+*/
+el.goToPrevSlide = function(){
+// if infiniteLoop is false and last page is showing, disregard call
+if (!slider.settings.infiniteLoop && slider.active.index == 0) return;
+var pagerIndex = parseInt(slider.active.index) - 1;
+el.goToSlide(pagerIndex, 'prev');
+}
+
+/**
+* Starts the auto show
+*
+* @param preventControlUpdate (boolean)
+*  - if true, auto controls state will not be updated
+*/
+el.startAuto = function(preventControlUpdate){
+// if an interval already exists, disregard call
+if(slider.interval) return;
+// create an interval
+slider.interval = setInterval(function(){
+slider.settings.autoDirection == 'next' ? el.goToNextSlide() : el.goToPrevSlide();
+}, slider.settings.pause);
+// if auto controls are displayed and preventControlUpdate is not true
+if (slider.settings.autoControls && preventControlUpdate != true) updateAutoControls('stop');
+}
+
+/**
+* Stops the auto show
+*
+* @param preventControlUpdate (boolean)
+*  - if true, auto controls state will not be updated
+*/
+el.stopAuto = function(preventControlUpdate){
+// if no interval exists, disregard call
+if(!slider.interval) return;
+// clear the interval
+clearInterval(slider.interval);
+slider.interval = null;
+// if auto controls are displayed and preventControlUpdate is not true
+if (slider.settings.autoControls && preventControlUpdate != true) updateAutoControls('start');
+}
+
+/**
+* Returns current slide index (zero-based)
+*/
+el.getCurrentSlide = function(){
+return slider.active.index;
+}
+
+/**
+* Returns number of slides in show
+*/
+el.getSlideCount = function(){
+return slider.children.length;
+}
+
+/**
+* Update all dynamic slider elements
+*/
+el.redrawSlider = function(){
+// resize all children in ratio to new screen size
+slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());
+// adjust the height
+slider.viewport.css('height', getViewportHeight());
+// update the slide position
+if(!slider.settings.ticker) setSlidePosition();
+// if active.last was true before the screen resize, we want
+// to keep it last no matter what screen size we end on
+if (slider.active.last) slider.active.index = getPagerQty() - 1;
+// if the active index (page) no longer exists due to the resize, simply set the index as last
+if (slider.active.index >= getPagerQty()) slider.active.last = true;
+// if a pager is being displayed and a custom pager is not being used, update it
+if(slider.settings.pager && !slider.settings.pagerCustom){
+populatePager();
+updatePagerActive(slider.active.index);
+}
+}
+
+/**
+* Destroy the current instance of the slider (revert everything back to original state)
+*/
+el.destroySlider = function(){
+// don't do anything if slider has already been destroyed
+if(!slider.initialized) return;
+slider.initialized = false;
+$('.bx-clone', this).remove();
+slider.children.each(function() {
+$(this).data("origStyle") != undefined ? $(this).attr("style", $(this).data("origStyle")) : $(this).removeAttr('style');
+});
+$(this).data("origStyle") != undefined ? this.attr("style", $(this).data("origStyle")) : $(this).removeAttr('style');
+$(this).unwrap().unwrap();
+if(slider.controls.el) slider.controls.el.remove();
+if(slider.controls.next) slider.controls.next.remove();
+if(slider.controls.prev) slider.controls.prev.remove();
+if(slider.pagerEl) slider.pagerEl.remove();
+$('.bx-caption', this).remove();
+if(slider.controls.autoEl) slider.controls.autoEl.remove();
+clearInterval(slider.interval);
+if(slider.settings.responsive) $(window).unbind('resize', resizeWindow);
+}
+
+/**
+* Reload the slider (revert all DOM changes, and re-initialize)
+*/
+el.reloadSlider = function(settings){
+if (settings != undefined) options = settings;
+el.destroySlider();
+init();
+}
+
+init();
+
+// returns the current jQuery object
+return this;
+}
+
+})(jQuery);
\ No newline at end of file
Index: contents/static/fonts/codropsicons/license.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/fonts/codropsicons/license.txt	(revision )
+++ contents/static/fonts/codropsicons/license.txt	(revision )
@@ -0,0 +1,6 @@
+Icon Set:	Font Awesome -- http://fortawesome.github.com/Font-Awesome/
+License:	SIL -- http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL
+
+
+Icon Set:	Eco Ico -- http://dribbble.com/shots/665585-Eco-Ico
+License:	CC0 -- http://creativecommons.org/publicdomain/zero/1.0/
\ No newline at end of file
Index: templates/robots.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/robots.txt	(revision )
+++ templates/robots.txt	(revision )
@@ -0,0 +1,2 @@
+User-agent: *
+Crawl-delay: 10
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding" useUTFGuessing="true" native2AsciiForPropertiesFiles="false" />
+</project>
+
Index: cube/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/views.py	(revision )
+++ cube/views.py	(revision )
@@ -0,0 +1,25 @@
+from django.shortcuts import render_to_response
+from django.template import RequestContext
+
+
+def table_from_cube(request, cube=None, dimensions=None, extra_context={}, template_name='table_from_cube.html'):
+    """
+    A view that renders *template_name* with a context built with :func:`cube.models.Cube.table_helper`.
+
+    Kwargs:
+    
+        cube(Cube). The cube to build the table from.
+        dimensions(list). A list ["dimension1", "dimension2"], where "dimension1" is the name of the dimension that will be used for columns, "dimension2" the name of the dimension for rows.
+    """
+    if not cube:
+        raise TypeError('You must provide a cube.')
+
+    if not dimensions or None in dimensions:
+        raise TypeError(
+            'You must provide two dimensions, either by passing them as kwargs, or by sending them along with the request.')
+
+    context = cube.table_helper(*dimensions)
+    context["cube"] = cube
+    context.update(extra_context)
+
+    return render_to_response(template_name, context, context_instance=RequestContext(request))
Index: cube/test_cube/test_models/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/test_cube/test_models/models.py	(revision )
+++ cube/test_cube/test_models/models.py	(revision )
@@ -0,0 +1,903 @@
+"""
+.. 
+    >>> from datetime import datetime, date
+    >>> from cube.models import Cube, Dimension
+    >>> from cube.views import table_from_cube
+    >>> import copy
+
+.. currentmodule:: cube
+
+Some fixtures for the examples ...
+
+Some models
+
+    >>> class Instrument(models.Model):
+    ...     name = models.CharField(max_length=100)
+    ... 
+    >>> class Musician(models.Model):
+    ...     firstname = models.CharField(max_length=100)
+    ...     lastname = models.CharField(max_length=100)
+    ...     instrument = models.ForeignKey(Instrument)
+    ... 
+    >>> class Song(models.Model):
+    ...     title = models.CharField(max_length=100)
+    ...     release_date = models.DateField()
+    ...     author = models.ForeignKey(Musician)
+    ... 
+
+Some instruments
+
+    >>> trumpet = Instrument(name='trumpet')
+    >>> piano = Instrument(name='piano')
+    >>> sax = Instrument(name='sax')
+
+..
+    >>> trumpet.save() ; piano.save() ; sax.save()
+
+Some musicians
+
+    >>> miles_davis = Musician(firstname='Miles', lastname='Davis', instrument=trumpet)
+    >>> freddie_hubbard = Musician(firstname='Freddie', lastname='Hubbard', instrument=trumpet)
+    >>> erroll_garner = Musician(firstname='Erroll', lastname='Garner', instrument=piano)
+    >>> bill_evans_p = Musician(firstname='Bill', lastname='Evans', instrument=piano)
+    >>> thelonious_monk = Musician(firstname='Thelonious', lastname='Monk', instrument=piano)
+    >>> bill_evans_s = Musician(firstname='Bill', lastname='Evans', instrument=sax)
+
+..
+    >>> miles_davis.save() ; freddie_hubbard.save() ; erroll_garner.save() ; bill_evans_p.save() ; thelonious_monk.save() ; bill_evans_s.save()
+
+Some songs
+
+    >>> so_what = Song(title='So What', author=miles_davis, release_date=date(1959, 8, 17))
+    >>> all_blues = Song(title='All Blues', author=miles_davis, release_date=date(1959, 8, 17))
+    >>> blue_in_green = Song(title='Blue In Green', author=bill_evans_p, release_date=date(1959, 8, 17))
+    >>> south_street_stroll = Song(title='South Street Stroll', author=freddie_hubbard, release_date=date(1969, 1, 21))
+    >>> well_you_neednt = Song(title='Well You Needn\\'t', author=thelonious_monk, release_date=date(1944, 2, 1))
+    >>> blue_monk = Song(title='Blue Monk', author=thelonious_monk, release_date=date(1945, 2, 1))
+
+..
+    >>> so_what.save() ; all_blues.save() ; blue_in_green.save() ; south_street_stroll.save() ; well_you_neednt.save() ; blue_monk.save()
+
+
+Dimension
+===========
+..
+    ----- Deep copy
+    >>> d = Dimension(field='attribute__date__absmonth', queryset=[1, 2, 3], sample_space=[89, 99])
+    >>> d_copy = copy.deepcopy(d)
+
+    >>> id(d_copy) != id(d)
+    True
+    >>> d_copy.field == d.field
+    True
+    >>> id(d_copy.sample_space) != id(d.sample_space) ; d_copy.sample_space == d.sample_space
+    True
+    True
+    >>> id(d_copy.queryset) != id(d.queryset) ; d_copy.queryset == d.queryset
+    True
+    True
+
+    ----- Formatting datetimes constraint
+    >>> d = Dimension(field='attribute__date__absmonth')
+    >>> d.constraint = date(3000, 7, 1)
+    >>> d.to_queryset_filter() == {'attribute__date__month': 7, 'attribute__date__year': 3000}
+    True
+    >>> d = Dimension(field='attribute__date__absday')
+    >>> d.constraint = datetime(1990, 8, 23, 0, 0, 0)
+    >>> d.to_queryset_filter() == {'attribute__date__day': 23, 'attribute__date__month': 8, 'attribute__date__year': 1990}
+    True
+    >>> d = Dimension()
+    >>> d._name = 'myname'
+    >>> d.constraint = 'coucou'
+    >>> d.to_queryset_filter() == {'myname': 'coucou'}
+    True
+
+Setting a dimension's sample space
+---------------------------------------
+
+You can set explicitely the sample space for a dimension, by passing to the constructor a keyword *sample_space* that is an iterable. It works with lists :
+
+    >>> d = Dimension(field='instrument__name', sample_space=['trumpet', 'piano'])
+    >>> d.get_sample_space(sort=True) == sorted(['trumpet', 'piano'])
+    True
+
+But also with querysets (any iterable):
+
+    >>> d = Dimension(field='instrument', sample_space=Instrument.objects.filter(name__contains='a').order_by('name'))
+    >>> d.get_sample_space() == [piano, sax]
+    True
+
+Default sample space for a dimension
+-----------------------------------------------
+
+If you didn't give explicitely the sample space of a dimension, the method :meth:`get_sample_space` will return a default sample space taken from the dimension's queryset.
+
+    >>> d = Dimension(field='title', queryset=Song.objects.all())
+    >>> set(d.get_sample_space()) == set([
+    ...     'So What', 'All Blues', 'Blue In Green',
+    ...     'South Street Stroll', 'Well You Needn\\'t', 'Blue Monk'
+    ... ])
+    True
+
+It works also with field names that use django field-lookup syntax
+
+    >>> d = Dimension(field='release_date__year', queryset=Song.objects.all())
+    >>> d.get_sample_space() == sorted([1944, 1969, 1959, 1945])
+    True
+
+And you can also use the special "field-lookups" *absmonth* or *absday*
+
+    >>> d = Dimension(field='release_date__absmonth', queryset=Song.objects.all())
+    >>> d.get_sample_space() == sorted([
+    ...     datetime(1969, 1, 1, 0, 0), datetime(1945, 2, 1, 0, 0),
+    ...     datetime(1944, 2, 1, 0, 0), datetime(1959, 8, 1, 0, 0)
+    ... ])
+    True
+    >>> d = Dimension(field='release_date__absday', queryset=Song.objects.all())
+    >>> d.get_sample_space() == sorted([
+    ...     datetime(1969, 1, 21, 0, 0), datetime(1945, 2, 1, 0, 0),
+    ...     datetime(1944, 2, 1, 0, 0), datetime(1959, 8, 17, 0, 0)
+    ... ])
+    True
+
+You can traverse foreign keys,
+
+    >>> d = Dimension(field='author__firstname', queryset=Song.objects.all())
+    >>> d.get_sample_space(sort=True) == sorted(['Bill', 'Miles', 'Thelonious', 'Freddie'])
+    True
+    >>> d = Dimension(field='author__instrument__name', queryset=Song.objects.all())
+    >>> d.get_sample_space(sort=True) == sorted(['piano', 'trumpet'])
+    True
+
+and refer to any type of field, even a django object
+
+    >>> d = Dimension(field='author__instrument', queryset=Song.objects.all())
+    >>> d.get_sample_space(sort=True) == [trumpet, piano] # django objects are ordered by their pk
+    True
+    >>> d = Dimension(field='author', queryset=Song.objects.all())
+    >>> d.get_sample_space(sort=True) == [
+    ...     miles_davis, freddie_hubbard,
+    ...     bill_evans_p, thelonious_monk,
+    ... ]
+    True
+
+Giving dimension's sample space as a callable
+---------------------------------------------
+
+You can pass a callable to the dimension's constructor to set its sample space. This callable takes a queryset as parameter, and returns the sample space. For example :
+
+    >>> def select_contains_s(queryset):
+    ...     #This function returns all musicians that wrote a song
+    ...     #and whose last name contains at least one 's'
+    ...     s_queryset = queryset.filter(author__lastname__icontains='s').distinct().select_related()
+    ...     m_queryset = Musician.objects.filter(pk__in=s_queryset.values_list('author', flat=True))
+    ...     return list(m_queryset)
+    >>> d = Dimension(field='author', queryset=Song.objects.all(), sample_space=select_contains_s)
+    >>> d.get_sample_space() == [
+    ...     miles_davis, bill_evans_p
+    ... ]
+    True
+
+Overriding the display of dimension's value
+---------------------------------------------
+
+:class:`Dimension` provides a property :meth:`Dimension.pretty_constraint` which gives a pretty version of the dimension's value (AKA its constraint). To customize this display, just declare a new sub-class of :class:`Dimension`, and override the :meth:`pretty_constraint` property. For example, this displays an Instrument object as its name, with a capital letter first :
+
+    >>> class InstrumentDimension(Dimension):
+    ...     @property
+    ...     def pretty_constraint(self):
+    ...         return self.constraint.name.capitalize()
+
+Cube
+======
+
+..
+    Metaclass
+    -----------
+    >>> class MyCube(Cube):
+    ...     dim1 = Dimension()
+    ...     dim2 = Dimension()
+    >>> set([dim.name for dim in MyCube._meta.dimensions.values()]) == set(['dim1', 'dim2'])
+    True
+
+    Inheritance
+    --------------
+    >>> class ParentCube(Cube):
+    ...     dim1 = Dimension()
+    ...     dim2 = Dimension()
+    >>> class ChildCube(ParentCube):
+    ...     pass
+    >>> set([dim.name for dim in ChildCube._meta.dimensions.values()]) == set(['dim1', 'dim2'])
+    True
+    >>> set(ChildCube._meta.dimensions.values()) == set(ParentCube._meta.dimensions.values())
+    False
+
+
+Declaring cubes 
+-----------------
+
+Declaring a cube is very similar to declaring a Django model, with dimensions instead of fields. Notice that you have to override the static method :meth:`aggregation`, which calculates the aggregation on a given queryset.
+
+    >>> class SongCube(Cube):
+    ...     author = Dimension()
+    ...     auth_name = Dimension(field='author__lastname')
+    ...     date = Dimension(field='release_date')
+    ...     date_absmonth = Dimension(field='release_date__absmonth')
+    ...     date_month = Dimension(field='release_date__month')
+    ...     date_year = Dimension(field='release_date__year')
+    ...     
+    ...     @staticmethod
+    ...     def aggregation(queryset):
+    ...         return queryset.count()
+    ... 
+    >>> class MusicianCube(Cube):
+    ...     instrument_name = Dimension(field='instrument__name')
+    ...     instrument_cat = Dimension(field='instrument__name__in',
+    ...         sample_space=[('trumpet', 'piano'), ('trumpet', 'sax'), ('sax', 'piano')])
+    ...     instrument = InstrumentDimension()
+    ...     firstname = Dimension()
+    ...     lastname = Dimension()
+    ...     
+    ...     @staticmethod
+    ...     def aggregation(queryset):
+    ...         return queryset.count()
+
+.. 
+    ----- Deep copy
+    >>> c = MusicianCube(Musician.objects.all())
+    >>> c_copy = copy.deepcopy(c)
+    >>> id(c_copy) != id(c)
+    True
+    >>> set(c_copy.dimensions.keys()) == set(c.dimensions.keys())
+    True
+    >>> c_copy.constraint == c.constraint
+    True
+    >>> id(c_copy.queryset) != id(c.queryset) ; list(c_copy.queryset) == list(c.queryset)
+    True
+    True
+
+Get a cube's sample space
+----------------------------
+
+On the cube, you can get the sample space for one dimension like this :
+    
+    >>> c.get_sample_space('firstname', format='flat') == ['Bill', 'Erroll', 'Freddie', 'Miles', 'Thelonious']
+    True
+    
+and the cube's sample space for several dimensions like this :
+    
+    >>> c.get_sample_space('firstname', 'instrument_name') == [
+    ...     {'firstname': 'Bill', 'instrument_name': 'piano'},
+    ...     {'firstname': 'Bill', 'instrument_name': 'sax'},
+    ...     {'firstname': 'Bill', 'instrument_name': 'trumpet'},
+    ...     {'firstname': 'Erroll', 'instrument_name': 'piano'},
+    ...     {'firstname': 'Erroll', 'instrument_name': 'sax'},
+    ...     {'firstname': 'Erroll', 'instrument_name': 'trumpet'},
+    ...     {'firstname': 'Freddie', 'instrument_name': 'piano'},
+    ...     {'firstname': 'Freddie', 'instrument_name': 'sax'},
+    ...     {'firstname': 'Freddie', 'instrument_name': 'trumpet'},
+    ...     {'firstname': 'Miles', 'instrument_name': 'piano'},
+    ...     {'firstname': 'Miles', 'instrument_name': 'sax'},
+    ...     {'firstname': 'Miles', 'instrument_name': 'trumpet'},
+    ...     {'firstname': 'Thelonious', 'instrument_name': 'piano'},
+    ...     {'firstname': 'Thelonious', 'instrument_name': 'sax'},
+    ...     {'firstname': 'Thelonious', 'instrument_name': 'trumpet'},
+    ... ]
+    True
+
+And note that if one dimension is already constrained, the sample space for the cube on this dimension is the constraint value :
+    
+    >>> c = c.constrain(firstname='Bill')
+    >>> c.get_sample_space('firstname', 'instrument_name') == [
+    ...     {'firstname': 'Bill', 'instrument_name': 'piano'},
+    ...     {'firstname': 'Bill', 'instrument_name': 'sax'},
+    ...     {'firstname': 'Bill', 'instrument_name': 'trumpet'},
+    ... ]
+    True
+
+Getting a measure from the cube
+--------------------------------
+
+Once you have instantiated a cube with a base queryset, you can access a measure at any valid coordinates. 
+
+    >>> c = MusicianCube(Musician.objects.all())
+    >>> c.measure(firstname='Miles')
+    1
+    >>> c.measure(firstname='Bill')
+    2
+    >>> c.measure(firstname='Miles', instrument_name='trumpet')
+    1
+    >>> c.measure(firstname='Miles', instrument_name='piano')
+    0
+    >>> c.measure()
+    6
+
+Iterating over cube's subcubes
+---------------------------------
+
+If your cube has no constrained dimension, querying its subcubes will yield as many subcubes as there are combinations of elements from the dimensions' sample spaces. For example : 
+    >>> ['%s' % subcube for subcube in c.subcubes('firstname', 'instrument_name')] == [
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Bill, instrument_name=piano)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Bill, instrument_name=sax)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Bill, instrument_name=trumpet)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Erroll, instrument_name=piano)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Erroll, instrument_name=sax)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Erroll, instrument_name=trumpet)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Freddie, instrument_name=piano)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Freddie, instrument_name=sax)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Freddie, instrument_name=trumpet)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Miles, instrument_name=piano)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Miles, instrument_name=sax)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Miles, instrument_name=trumpet)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Thelonious, instrument_name=piano)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Thelonious, instrument_name=sax)',
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Thelonious, instrument_name=trumpet)'
+    ... ]
+    True
+
+On the other hand, if your cube is constrained, all the subcubes yielded will be constrained as well : 
+
+    >>> c = MusicianCube(Musician.objects.all()).constrain(firstname='Miles')
+    >>> ['%s' % subcube for subcube in c.subcubes('firstname')] == [
+    ...     'Cube(instrument, instrument_cat, instrument_name, lastname, firstname=Miles)',
+    ... ]
+    True
+
+List of measures as dictionnaries
+----------------------------------
+
+Using :meth:`Cube.measures`, you can get a list of measures, very similar to what is returned by the `.values()` method on a django queryset.
+
+    >>> c = MusicianCube(Musician.objects.filter(instrument__name__in=['piano', 'trumpet']))
+    >>> c.measures('firstname', 'instrument_name') == [
+    ...     {'firstname': 'Bill', 'instrument_name': 'piano', '__measure': 1},
+    ...     {'firstname': 'Bill', 'instrument_name': 'trumpet', '__measure': 0},
+    ...     {'firstname': 'Erroll', 'instrument_name': 'piano', '__measure': 1},
+    ...     {'firstname': 'Erroll', 'instrument_name': 'trumpet', '__measure': 0},
+    ...     {'firstname': 'Freddie', 'instrument_name': 'piano', '__measure': 0},
+    ...     {'firstname': 'Freddie', 'instrument_name': 'trumpet', '__measure': 1},
+    ...     {'firstname': 'Miles', 'instrument_name': 'piano', '__measure': 0},
+    ...     {'firstname': 'Miles', 'instrument_name': 'trumpet', '__measure': 1},
+    ...     {'firstname': 'Thelonious', 'instrument_name': 'piano', '__measure': 1},
+    ...     {'firstname': 'Thelonious', 'instrument_name': 'trumpet', '__measure': 0},
+    ... ]
+    True
+
+Multidimensionnal dictionnary of measures
+-------------------------------------------
+
+Using :meth:`Cube.measures_dict`, you can get a dictionnary of all the measures, organized by dimensions : 
+
+    >>> c = MusicianCube(Musician.objects.filter(instrument__name__in=['piano', 'trumpet']))
+    >>> c.measures_dict('firstname', 'instrument_name') == {
+    ...     'subcubes': {
+    ...         'Bill': {
+    ...             'subcubes': {
+    ...                 'piano': {'measure': 1},
+    ...                 'trumpet': {'measure': 0},
+    ...             },
+    ...             'measure': 1
+    ...         },
+    ...         'Miles': {
+    ...             'subcubes': {
+    ...                 'piano': {'measure': 0},
+    ...                 'trumpet': {'measure': 1},
+    ...             },
+    ...             'measure': 1
+    ...         },
+    ...         'Thelonious': {
+    ...             'subcubes': {
+    ...                 'piano': {'measure': 1},
+    ...                 'trumpet': {'measure': 0},
+    ...             },
+    ...             'measure': 1
+    ...         },
+    ...         'Freddie': {
+    ...             'subcubes': {
+    ...                 'piano': {'measure': 0},
+    ...                 'trumpet': {'measure': 1},
+    ...             },
+    ...             'measure': 1
+    ...         },
+    ...         'Erroll': {
+    ...             'subcubes': {
+    ...                 'piano': {'measure': 1},
+    ...                 'trumpet': {'measure': 0},
+    ...             },
+    ...             'measure': 1
+    ...         },
+    ...     },
+    ...     'measure': 5
+    ... }
+    True
+
+You can do the same thing, but calculating only the measures for the subcubes whose dimensions passed to :meth:`measures_dict` are all fixed.
+
+    >>> c.measures_dict('firstname', 'instrument_name', full=False) == {
+    ...     'Bill': {
+    ...         'piano': {'measure': 1},
+    ...         'trumpet': {'measure': 0},
+    ...     },
+    ...     'Miles': {
+    ...         'piano': {'measure': 0},
+    ...         'trumpet': {'measure': 1},
+    ...     },
+    ...     'Thelonious': {
+    ...         'piano': {'measure': 1},
+    ...         'trumpet': {'measure': 0},
+    ...     },
+    ...     'Freddie': {
+    ...         'piano': {'measure': 0},
+    ...         'trumpet': {'measure': 1},
+    ...     },
+    ...     'Erroll': {
+    ...         'piano': {'measure': 1},
+    ...         'trumpet': {'measure': 0},
+    ...     },
+    ... }
+    True
+
+Multidimensionnal list of measures
+------------------------------------
+
+Using :meth:`Cube.measures_list`, you can get a list of measures organized by dimension :
+
+    >>> c.measures_list('firstname', 'instrument_name') == [
+    ...     [1, 0], #Bill: piano, trumpet
+    ...     [1, 0], #Erroll ...
+    ...     [0, 1], #Freddie ...
+    ...     [0, 1], #Miles ...
+    ...     [1, 0], #Thelonious ...
+    ... ]
+    True
+    >>> other_c = MusicianCube(Musician.objects.filter(instrument__name__in=['piano']))
+    >>> other_c.measures_list('firstname', 'instrument_name', 'lastname') == [
+    ...     [[1, 0, 0]], #Bill: piano: Evans, Garner, Monk
+    ...     [[0, 1, 0]], #Erroll ...
+    ...     [[0, 0, 1]], #Thelonious ...
+    ... ]
+    True
+
+Getting a subcube
+------------------
+
+You can get a subcube of a cube by constraining it :
+
+    >>> subcube = c.constrain(instrument_name='trumpet')
+    >>> subcube.measures_dict('firstname', 'instrument_name', full=False) == {
+    ...     'Bill': {
+    ...         'trumpet': {'measure': 0},
+    ...     },
+    ...     'Erroll': {
+    ...         'trumpet': {'measure': 0},
+    ...     },
+    ...     'Freddie': {
+    ...         'trumpet': {'measure': 1},
+    ...     },
+    ...     'Miles': {
+    ...         'trumpet': {'measure': 1},
+    ...     },
+    ...     'Thelonious': {
+    ...         'trumpet': {'measure': 0},
+    ...     },
+    ... }
+    True
+
+Using Django field-lookup syntax for date dimensions (see the dimensions declaration) works pretty well too :
+
+    >>> c = SongCube(Song.objects.all())
+    >>> subcube = c.constrain(date_month=2)
+    >>> subcube.measures_dict('date_month', 'date_year', 'auth_name', full=False) == {
+    ...     2: {
+    ...         1945: {
+    ...             'Davis': {'measure': 0},
+    ...             'Hubbard': {'measure': 0},
+    ...             'Evans': {'measure': 0},
+    ...             'Monk': {'measure': 1}
+    ...         },
+    ...         1944: {
+    ...             'Davis': {'measure': 0},
+    ...             'Hubbard': {'measure': 0},
+    ...             'Evans': {'measure': 0},
+    ...             'Monk': {'measure': 1}
+    ...         },
+    ...         1969: {
+    ...             'Davis': {'measure': 0},
+    ...             'Hubbard': {'measure': 0},
+    ...             'Evans': {'measure': 0},
+    ...             'Monk': {'measure': 0}
+    ...         },
+    ...         1959: {
+    ...             'Davis': {'measure': 0},
+    ...             'Hubbard': {'measure': 0},
+    ...             'Evans': {'measure': 0},
+    ...             'Monk': {'measure': 0}
+    ...         },
+    ...     }
+    ... }
+    True
+
+As well as using Django field-lookup syntax for relations (see the dimensions declaration) :
+
+    >>> c = MusicianCube(Musician.objects.all())
+    >>> c.measures_dict('instrument_cat', 'firstname', full=False) == {
+    ...     ('trumpet', 'piano'): {
+    ...         'Bill': {'measure': 1},
+    ...         'Erroll': {'measure': 1},
+    ...         'Miles': {'measure': 1},
+    ...         'Freddie': {'measure': 1},
+    ...         'Thelonious': {'measure': 1},
+    ...     },
+    ...     ('trumpet', 'sax'): {
+    ...         'Bill': {'measure': 1},
+    ...         'Erroll': {'measure': 0},
+    ...         'Miles': {'measure': 1},
+    ...         'Freddie': {'measure': 1},
+    ...         'Thelonious': {'measure': 0},
+    ...     },
+    ...     ('sax', 'piano'): {
+    ...         'Bill': {'measure': 2},
+    ...         'Erroll': {'measure': 1},
+    ...         'Miles': {'measure': 0},
+    ...         'Freddie': {'measure': 0},
+    ...         'Thelonious': {'measure': 1},
+    ...     },
+    ... }
+    True
+
+Sorting results
+---------------------
+We declare a cube that overrides *sort_key* to provide custom sorting.
+
+    >>> class SortedCube(Cube):
+    ...     instrument_name = Dimension(field='instrument__name')
+    ...     firstname = Dimension()
+    ...     lastname = Dimension()
+    ...     
+    ...     @staticmethod
+    ...     def sort_key(coordinates):
+    ...         coordinates = dict(coordinates)
+    ...         if coordinates.get('firstname'):
+    ...             return coordinates.pop('firstname') + ''.join(coordinates.values())
+    ...
+    ...     @staticmethod
+    ...     def aggregation(queryset):
+    ...         return queryset.count()
+
+Now, everytime that the dimension *firstname* is used, it has priority on other dimensions for sorting.
+
+    >>> ['%s' % c for c in SortedCube(Musician.objects.all()).subcubes('instrument_name', 'firstname')] == [
+    ...     u'Cube(lastname, firstname=Bill, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Bill, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Bill, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Erroll, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Erroll, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Erroll, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Freddie, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Freddie, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Freddie, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Miles, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Miles, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Miles, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Thelonious, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Thelonious, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Thelonious, instrument_name=trumpet)'
+    ... ]
+    True
+
+    >>> ['%s' % c for c in SortedCube(Musician.objects.all()).subcubes('firstname', 'instrument_name')] == [
+    ...     u'Cube(lastname, firstname=Bill, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Bill, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Bill, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Erroll, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Erroll, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Erroll, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Freddie, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Freddie, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Freddie, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Miles, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Miles, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Miles, instrument_name=trumpet)',
+    ...     u'Cube(lastname, firstname=Thelonious, instrument_name=piano)',
+    ...     u'Cube(lastname, firstname=Thelonious, instrument_name=sax)',
+    ...     u'Cube(lastname, firstname=Thelonious, instrument_name=trumpet)'
+    ... ]
+    True
+    
+
+Template tags and filters
+============================
+..
+    >>> from cube.templatetags import cube_templatetags
+    >>> from django.template import Template, Context, Variable
+    >>> import re
+
+Iterating over cube's subcubes
+-------------------------------
+
+Let's create a cube
+
+    >>> c = MusicianCube(Musician.objects.filter(firstname__in=['Bill', 'Miles']))
+
+Here's how to use the template tag *subcubes* to iterate over subcubes :
+
+    >>> context = Context({'my_cube': c, 'dim1': 'firstname'})
+    >>> template = Template(
+    ...     '{% load cube_templatetags %}'
+    ...     '{% subcubes my_cube by dim1, "instrument_name" as subcube1 %}'
+    ...         '{{ subcube1 }}:{{ subcube1.measure }}'
+    ...         '{% subcubes subcube1 by "lastname" as subcube2 %}'
+    ...             '{{ subcube2 }}:{{ subcube2.measure }}'
+    ...         '{% endsubcubes %}'
+    ...     '{% endsubcubes %}'
+    ... )
+
+Here is what the rendering gives :
+
+    >>> awaited = ''\\
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Bill, instrument_name=piano):1'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Bill, instrument_name=piano, lastname=Davis):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Bill, instrument_name=piano, lastname=Evans):1'\\
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Bill, instrument_name=sax):1'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Bill, instrument_name=sax, lastname=Davis):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Bill, instrument_name=sax, lastname=Evans):1'\\
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Bill, instrument_name=trumpet):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Bill, instrument_name=trumpet, lastname=Davis):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Bill, instrument_name=trumpet, lastname=Evans):0'\\
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Miles, instrument_name=piano):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Miles, instrument_name=piano, lastname=Davis):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Miles, instrument_name=piano, lastname=Evans):0'\\
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Miles, instrument_name=sax):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Miles, instrument_name=sax, lastname=Davis):0'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Miles, instrument_name=sax, lastname=Evans):0'\\
+    ...     'Cube(instrument, instrument_cat, lastname, firstname=Miles, instrument_name=trumpet):1'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Miles, instrument_name=trumpet, lastname=Davis):1'\\
+    ...         'Cube(instrument, instrument_cat, firstname=Miles, instrument_name=trumpet, lastname=Evans):0'\\
+
+..
+    >>> awaited == template.render(context)
+    True
+
+
+Get a pretty display of a dimension's constraint
+----------------------------------------------------
+
+In your templates, you can access the pretty value of dimension's constraint by using the filter `prettyconstraint`. This will call the method :meth:`Dimension.pretty_constraint` on the dimension whose name is passed as argument.
+
+    >>> c = MusicianCube(Musician.objects.all()).constrain(
+    ...     firstname='John',
+    ...     instrument=sax,
+    ... )
+    >>> context = Context({'my_cube': c})
+    >>> template = Template(
+    ... '{% load cube_templatetags %}'
+    ... '>FUNKY<{{ my_cube|prettyconstraint:\\'instrument\\' }}>FUNKY<'
+    ... )
+    >>> template.render(context)
+    u'>FUNKY<Sax>FUNKY<'
+
+..
+
+    ----- Test creation of table from cube context
+    >>> c = MusicianCube(Musician.objects.all())
+
+    >>> c.table_helper('firstname', 'instrument') == {
+    ...     'col_names': [
+    ...         ('Bill', 'Bill'),
+    ...         ('Erroll', 'Erroll'),
+    ...         ('Freddie', 'Freddie'),
+    ...         ('Miles', 'Miles'),
+    ...         ('Thelonious', 'Thelonious'),
+    ...     ],
+    ...     'cols': [
+    ...         {'name': 'Bill', 'pretty_name': 'Bill', 'values': [0, 1, 1], 'overall': 2},
+    ...         {'name': 'Erroll', 'pretty_name': 'Erroll', 'values': [0, 1, 0], 'overall': 1},
+    ...         {'name': 'Freddie', 'pretty_name': 'Freddie', 'values': [1, 0, 0], 'overall': 1},
+    ...         {'name': 'Miles', 'pretty_name': 'Miles', 'values': [1, 0, 0], 'overall': 1},
+    ...         {'name': 'Thelonious', 'pretty_name': 'Thelonious', 'values': [0, 1, 0], 'overall': 1}
+    ...     ],
+    ...     'col_overalls': [2, 1, 1, 1, 1],
+    ...     'row_names': [
+    ...         (trumpet, 'Trumpet'),
+    ...         (piano, 'Piano'),
+    ...         (sax, 'Sax'),
+    ...     ],
+    ...     'rows': [
+    ...         {'name': trumpet, 'pretty_name': 'Trumpet', 'values': [0, 0, 1, 1, 0], 'overall': 2},
+    ...         {'name': piano, 'pretty_name': 'Piano', 'values': [1, 1, 0, 0, 1], 'overall': 3},
+    ...         {'name': sax, 'pretty_name': 'Sax', 'values': [1, 0, 0, 0, 0], 'overall': 1},
+    ...     ],
+    ...     'row_overalls': [2, 3, 1],
+    ...     'col_dim_name': 'firstname',
+    ...     'row_dim_name': 'instrument',
+    ...     'overall': 6,
+    ... }
+    True
+
+
+Insert a table
+----------------
+
+Let's create a cube
+
+    >>> c = MusicianCube(Musician.objects.all())
+
+Here's how to use the inclusion tag *tablefromcube* to insert a table in your template :
+
+    >>> context = Context({'my_cube': c, 'dim1': 'firstname', 'template_name': 'table_from_cube.html'})
+    >>> template = Template(
+    ... '{% load cube_templatetags %}'
+    ... '{% tablefromcube my_cube by dim1, "instrument_name" using template_name %}'
+    ... )
+
+It will render 'template_name' with a context built from :meth:`models.Cube.table_helper`.
+
+Here is what the rendering gives :
+
+    >>> awaited = ''\\
+    ... '<table>'\\
+    ...     '<theader>'\\
+    ...         '<tr>'\\
+    ...             '<th></th>'\\
+    ...             '<th>Bill</th>'\\
+    ...             '<th>Erroll</th>'\\
+    ...             '<th>Freddie</th>'\\
+    ...             '<th>Miles</th>'\\
+    ...             '<th>Thelonious</th>'\\
+    ...             '<th>OVERALL</th>'\\
+    ...         '</tr>'\\
+    ...     '</theader>'\\
+    ...     '<tbody>'\\
+    ...         '<tr>'\\
+    ...             '<th>piano</th>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>3</td>'\\
+    ...         '</tr>'\\
+    ...         '<tr>'\\
+    ...             '<th>sax</th>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>1</td>'\\
+    ...         '</tr>'\\
+    ...         '<tr>'\\
+    ...             '<th>trumpet</th>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>2</td>'\\
+    ...         '</tr>'\\
+    ...     '</tbody>'\\
+    ...     '<tfoot>'\\
+    ...         '<tr>'\\
+    ...             '<th>OVERALL</th>'\\
+    ...             '<td>2</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>6</td>'\\
+    ...         '</tr>'\\
+    ...     '</tfoot>'\\
+    ... '</table>'
+
+..
+    >>> awaited == re.sub(' |\\n', '', template.render(context))
+    True
+
+Views
+=======
+
+Get a table from a cube
+-------------------------
+
+Let's create a cube
+
+    >>> c = MusicianCube(Musician.objects.all())
+
+..
+    >>> from django.http import HttpRequest
+    >>> request = HttpRequest()
+
+Let's use the view :func:`views.table_from_cube` which will render the template with a context built from :meth:`models.Cube.table_helper`. :
+    
+    >>> response = table_from_cube(request, cube=c, dimensions=['firstname', 'instrument_name'])
+    
+Here is what the rendering gives :
+
+    >>> awaited = ''\\
+    ... 'Content-Type:text/html;charset=utf-8'\\
+    ... '<table>'\\
+    ...     '<theader>'\\
+    ...         '<tr>'\\
+    ...             '<th></th>'\\
+    ...             '<th>Bill</th>'\\
+    ...             '<th>Erroll</th>'\\
+    ...             '<th>Freddie</th>'\\
+    ...             '<th>Miles</th>'\\
+    ...             '<th>Thelonious</th>'\\
+    ...             '<th>OVERALL</th>'\\
+    ...         '</tr>'\\
+    ...     '</theader>'\\
+    ...     '<tbody>'\\
+    ...         '<tr>'\\
+    ...             '<th>piano</th>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>3</td>'\\
+    ...         '</tr>'\\
+    ...         '<tr>'\\
+    ...             '<th>sax</th>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>1</td>'\\
+    ...         '</tr>'\\
+    ...         '<tr>'\\
+    ...             '<th>trumpet</th>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>0</td>'\\
+    ...             '<td>2</td>'\\
+    ...         '</tr>'\\
+    ...     '</tbody>'\\
+    ...     '<tfoot>'\\
+    ...         '<tr>'\\
+    ...             '<th>OVERALL</th>'\\
+    ...             '<td>2</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>1</td>'\\
+    ...             '<td>6</td>'\\
+    ...         '</tr>'\\
+    ...     '</tfoot>'\\
+    ... '</table>'
+
+..
+    >>> awaited == re.sub(' |\\n|<BLANKLINE>', '', str(response))
+    True
+
+"""
+
+from django.db import models
+
+
+class Instrument(models.Model):
+    name = models.CharField(max_length=100)
+
+    def __unicode__(self):
+        return u'%s' % self.name
+
+
+class Musician(models.Model):
+    firstname = models.CharField(max_length=100)
+    lastname = models.CharField(max_length=100)
+    instrument = models.ForeignKey(Instrument)
+
+    def __unicode__(self):
+        return u'%s %s' % (self.firstname, self.lastname)
+
+
+class Song(models.Model):
+    title = models.CharField(max_length=100)
+    release_date = models.DateField()
+    author = models.ForeignKey(Musician)
+
+    def __unicode__(self):
+        return u'%s' % self.title
Index: cube/test_cube/doctest_runner/runner.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/test_cube/doctest_runner/runner.py	(revision )
+++ cube/test_cube/doctest_runner/runner.py	(revision )
@@ -0,0 +1,159 @@
+__doc__ = """
+In your settings, use
+
+  TEST_RUNNER = 'ambidjangolib.test.simple.run_tests_until_fail'
+
+to make `manage.py test` stop after the first test suite with failures, and
+only show the first failing test in the suite.
+"""
+
+from unittest import \
+    TestSuite, TextTestRunner, _TextTestResult, defaultTestLoader
+from django.test import _doctest as doctest
+from django.conf import settings
+from django.db import transaction, connection
+from django.db.models import get_app, get_apps
+from django.test.utils import \
+    setup_test_environment, teardown_test_environment
+from django.test.simple import build_test, get_tests, doctestOutputChecker
+from django.test.testcases import DocTestRunner
+
+try:
+    # pre-Django-1.0
+    from django.test.utils import create_test_db, destroy_test_db
+except ImportError:
+    # post-Django-1.0
+    def create_test_db(*args, **kwargs):
+        connection.creation.create_test_db(*args, **kwargs)
+
+    def destroy_test_db(*args, **kwargs):
+        connection.creation.destroy_test_db(*args, **kwargs)
+
+
+class DocTestRunner(doctest.DocTestRunner):
+    """
+    Replacement for django.test.testcases.DocTestRunner which unfortunately
+    overrides any supplied `optionflags=` kwarg with only `doctest.ELLIPSIS`.
+    We need to pass on optionflags.
+    """
+
+    def __init__(self, *args, **kwargs):
+        doctest.DocTestRunner.__init__(self, *args, **kwargs)
+        self.optionflags |= doctest.ELLIPSIS
+        # Django's original has `=` instead of `|=` here
+
+    def report_unexpected_exception(self, out, test, example, exc_info):
+        doctest.DocTestRunner.report_unexpected_exception(self, out, test,
+                                                          example, exc_info)
+        # Rollback, in case of database errors. Otherwise they'd have
+        # side effects on other tests.
+        transaction.rollback_unless_managed()
+
+
+def _add_tests_for_module(suite, module):
+    """
+    Repeated code from inside `build_suite()` is refactored here.
+    """
+    # Load unit and doctests in the given module. If module has a suite()
+    # method, use it. Otherwise build the test suite ourselves.
+    if hasattr(module, 'suite'):
+        suite.addTest(module.suite())
+    else:
+        suite.addTest(defaultTestLoader.loadTestsFromModule(module))
+        try:
+            suite.addTest(doctest.DocTestSuite(
+                module,
+                checker=doctestOutputChecker,
+                runner=DocTestRunner,
+                optionflags=doctest.REPORT_ONLY_FIRST_FAILURE))
+        except ValueError:
+            # No doc tests in models.py
+            pass
+
+
+def build_suite(app_module):
+    """
+    Create a complete Django test suite for the provided application module.
+
+    This overrides Django's original `django.test.simple.build_suite()` because
+    we need to pass the `REPORT_ONLY_FIRST_FAILURE` option flag to
+    `DocTestSuite` instances.
+    """
+    suite = TestSuite()
+
+    _add_tests_for_module(suite, app_module)
+
+    # Check to see if a separate 'tests' module exists parallel to the
+    # models module
+    test_module = get_tests(app_module)
+    if test_module:
+        _add_tests_for_module(suite, test_module)
+
+    return suite
+
+
+class _FailStopTextTestResult(_TextTestResult):
+    def addError(self, test, err):
+        _TextTestResult.addError(self, test, err)
+        self.shouldStop = True
+
+    def addFailure(self, test, err):
+        _TextTestResult.addFailure(self, test, err)
+        self.shouldStop = True
+
+
+class FailStopTextTestRunner(TextTestRunner):
+    def _makeResult(self):
+        return _FailStopTextTestResult(
+            self.stream, self.descriptions, self.verbosity)
+
+
+def run_tests_until_fail(test_labels, verbosity=1, interactive=True, extra_tests=[]):
+    """
+    Run the unit tests for all the test labels in the provided list.
+    Labels must be of the form:
+     - app.TestClass.test_method
+        Run a single specific test method
+     - app.TestClass
+        Run all the test methods in a given class
+     - app
+        Search for doctests and unittests in the named application.
+
+    When looking for tests, the test runner will look in the models and
+    tests modules for the application.
+
+    A list of 'extra' tests may also be provided; these tests
+    will be added to the test suite.
+
+    Stops the tests at the first failure and returns 1.  If all test pass,
+    returns 0.
+
+    Also displays only the first failure in the failing test suite.
+    """
+    setup_test_environment()
+
+    settings.DEBUG = False
+    suite = TestSuite()
+
+    if test_labels:
+        for label in test_labels:
+            if '.' in label:
+                suite.addTest(build_test(label))
+            else:
+                app = get_app(label)
+                suite.addTest(build_suite(app))
+    else:
+        for app in get_apps():
+            suite.addTest(build_suite(app))
+
+    for test in extra_tests:
+        suite.addTest(test)
+
+    old_name = settings.DATABASE_NAME
+    create_test_db(verbosity, autoclobber=not interactive)
+    result = FailStopTextTestRunner(verbosity=verbosity).run(suite)
+    destroy_test_db(old_name, verbosity)
+
+    teardown_test_environment()
+
+    return len(result.failures) + len(result.errors)
Index: contents/static/markitup/sets/bbcode/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/markitup/sets/bbcode/style.css	(revision )
+++ contents/static/markitup/sets/bbcode/style.css	(revision )
@@ -0,0 +1,98 @@
+/* -------------------------------------------------------------------
+// markItUp!
+// By Jay Salvat - http://markitup.jaysalvat.com/
+// ------------------------------------------------------------------*/
+.bbcode .markItUpButton1 a	{
+	background-image:url(images/bold.png);
+}
+.bbcode .markItUpButton2 a	{
+	background-image:url(images/italic.png);
+}
+.bbcode .markItUpButton3 a	{
+	background-image:url(images/underline.png);
+}
+
+.bbcode .markItUpButton4 a	{
+	background-image:url(images/picture.png);
+}
+.bbcode .markItUpButton5 a	{
+	background-image:url(images/link.png);
+}
+
+.bbcode .markItUpButton6 a {
+	background-image:url(images/colors.png);
+}
+	.bbcode .markItUpButton6 ul {
+		width:81px;
+		padding:1px;
+	}
+	.bbcode .markItUpButton6  li {
+		border:1px solid white;
+		width:25px;	height:25px;
+		overflow:hidden;
+		padding:0px; margin:0px;
+		float:left;
+	}
+	.bbcode .markItUpButton6 ul a {
+		width:25px;	height:25px;
+	}
+	.bbcode .markItUpButton6 ul a:hover {
+		background-color:none;
+	}
+
+	.bbcode .markItUpButton6 .col1-1 a {
+		background:yellow;
+	}
+	.bbcode .markItUpButton6 .col1-2 a {
+		background:orange;
+	}
+	.bbcode .markItUpButton6 .col1-3 a {
+		background:red;
+	}
+
+	.bbcode .markItUpButton6 .col2-1 a {
+		background:blue;
+	}
+	.bbcode .markItUpButton6 .col2-2 a {
+		background:purple;
+	}
+	.bbcode .markItUpButton6 .col2-3 a {
+		background:green;
+	}
+
+	.bbcode .markItUpButton6 .col3-1 a {
+		background:white;
+	}
+	.bbcode .markItUpButton6 .col3-2 a {
+		background:gray;
+	}
+	.bbcode .markItUpButton6 .col3-3 a {
+		background:black;
+	}
+
+.bbcode .markItUpButton7 a	{
+	background-image:url(images/fonts.png);
+}
+.bbcode .markItUpButton8 a	{
+	background-image:url(images/list-bullet.png);
+}
+.bbcode .markItUpButton9 a	{
+	background-image:url(images/list-numeric.png);
+}
+.bbcode .markItUpButton10 a	{
+	background-image:url(images/list-item.png);
+}
+
+.bbcode .markItUpButton11 a	{
+	background-image:url(images/quotes.png);
+}
+.bbcode .markItUpButton12 a	{
+	background-image:url(images/code.png);
+}
+
+.bbcode .markItUpButton13 a	{
+	background-image:url(images/clean.png);
+}
+.bbcode .preview a {
+	background-image:url(images/preview.png);
+}
\ No newline at end of file
Index: blogs/search_indexes.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/search_indexes.py	(revision )
+++ blogs/search_indexes.py	(revision )
@@ -0,0 +1,16 @@
+import datetime
+from haystack import indexes
+from blogs.models import Blog
+
+
+class BlogIndex(indexes.SearchIndex, indexes.Indexable):
+    text = indexes.CharField(document=True, use_template=True)
+    author = indexes.CharField(model_attr='user')
+    pub_date = indexes.DateField(model_attr='pub_date')
+
+    def get_model(self):
+        return Blog
+
+    def index_queryset(self, using=None):
+        """Used when the entire index for model is updated."""
+        return self.get_model().objects.filter(pub_date__lte=datetime.datetime.now())
\ No newline at end of file
Index: cube/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/models.py	(revision )
+++ cube/models.py	(revision )
@@ -0,0 +1,245 @@
+# -*- coding: utf-8 -*-
+#'django-cube'
+#Copyright (C) 2010 Sébastien Piquemal @ futurice
+#contact : sebastien.piquemal@futurice.com
+#futurice's website : www.futurice.com
+
+#This program is free software: you can redistribute it and/or modify
+#it under the terms of the GNU General Public License as published by
+#the Free Software Foundation, either version 3 of the License, or
+#(at your option) any later version.
+
+#This program is distributed in the hope that it will be useful,
+#but WITHOUT ANY WARRANTY; without even the implied warranty of
+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#GNU General Public License for more details.
+
+#You should have received a copy of the GNU General Public License
+#along with this program.  If not, see <http://www.gnu.org/licenses/>.
+"""
+"""
+import re
+from datetime import date, datetime
+
+from django.db.models import ForeignKey, FieldDoesNotExist, Model
+
+from base import BaseDimension, BaseCube
+from query import CubeQueryMixin
+
+
+class Dimension(BaseDimension):
+    """
+    A dimension that is associated with a Django model's field.
+
+    Kwargs:
+        - sample_space (iterable|callable): The sample space of the dimension to create. If this parameter is a callable, the call will receive the dimension's base queryset as only parameter, and must return a list.
+        - field (str): The name of the model's field this dimension refers to. Defaults to dimension's name.
+        - queryset (Queryset): A queryset to take the default sample space from. Usefull if the parameter *sample_space* is not given. Defaults to the dimension's cube's queryset.
+    """
+
+    def __init__(self, field=None, queryset=None, sample_space=[]):
+        """
+        """
+        super(Dimension, self).__init__(sample_space=sample_space)
+        self._field = field
+        self.queryset = queryset
+
+    @property
+    def field(self):
+        """
+        Returns:
+            str. The name of the model's field this dimension refers to.
+        """
+        return self._field or self._name
+
+    def get_sample_space(self, sort=False):
+        """
+        Kwargs:
+            sort (bool): whether to sort or not the sample space returned.
+
+        Returns:
+            list. The sample space for the calling dimension. If the dimension is constrained, the sample space is only the constraint value.
+        """
+        #if sample_space is given...
+        if self.constraint:
+            return [self.constraint]
+        if self.sample_space:
+            #... is it iterable ?
+            try:
+                sample_space = list(self.sample_space)
+            except TypeError:
+                #... it is callable ?
+                if hasattr(self.sample_space, '__call__'):
+                    sample_space = self.sample_space(self.queryset)
+                else:
+                    raise TypeError(
+                        '\'%s\' unvalid \'sample_space\' attribute, because it is not iterable nor callable')
+        else:
+            sample_space = self._default_sample_space()
+
+        if sort:
+            return self._sort_sample_space(sample_space)
+        else:
+            return sample_space
+
+    def to_queryset_filter(self):
+        """
+        Returns:
+            dict. The django queryset filter equivalent to this dimension and its constraint. Returns *{}* if the dimension is not constrained. 
+        """
+        filter_dict = {}
+        lookup_list = re.split('__', self.field)
+
+        if not self.constraint:
+            pass
+        elif (isinstance(self.constraint, date) or isinstance(self.constraint, datetime)) and lookup_list[-1] in [
+            'absmonth', 'absday']:
+            base_lookup = ''
+            for lookup_value in lookup_list[:-1]:
+                base_lookup += lookup_value + '__'
+
+            if lookup_list[-1] == 'absmonth':
+                filter_dict[base_lookup + 'month'] = self.constraint.month
+                filter_dict[base_lookup + 'year'] = self.constraint.year
+            elif lookup_list[-1] == 'absday':
+                filter_dict[base_lookup + 'day'] = self.constraint.day
+                filter_dict[base_lookup + 'month'] = self.constraint.month
+                filter_dict[base_lookup + 'year'] = self.constraint.year
+        else:
+            filter_dict.update({self.field: self.constraint})
+        return filter_dict
+
+    def _default_sample_space(self):
+        """
+        .. todo:: rewrite prettier
+        """
+        sample_space = []
+        if not self.queryset: return []
+        lookup_list = re.split('__', self.field)
+
+        if len(lookup_list) == 1:
+            key = lookup_list[0]
+            try:
+                field = self.queryset.model._meta.get_field_by_name(key)[0]
+            except FieldDoesNotExist:
+                raise ValueError("invalid field '%s', because '%s' is an invalid field name for %s" \
+                                 % (self.field, key, self.queryset.model))
+                #if ForeignKey, we get all distinct objects of foreign model
+            if type(field) == ForeignKey:
+                sample_space = self.queryset.values_list(key, flat=True).distinct()
+                filter_dict = {'%s__in' % field.rel.field_name: sample_space}
+                sample_space = field.related.parent_model.objects.filter(**filter_dict)
+            else:
+                sample_space = self.queryset.values_list(key, flat=True).distinct()
+
+        else:
+            queryset = self.queryset
+
+            #we assume first item is always a field_name
+            key = lookup_list.pop(0)
+
+            #we loop over the rest
+            next_key = lookup_list.pop(0)
+
+            #For the field lookup, we just assume that a 'month', 'day' or 'year' lookup is always terminal,
+            #same thing for a field that is not a foreign key.
+            while (key):
+
+                #TODO this is totally wrong ! What if there is a field called 'month', 'year', ... ? Should introspect model._meta ?
+                if next_key in ['day', 'month', 'year']:
+                    for date in queryset.dates(key, next_key):
+                        sample_space.append(getattr(date, next_key))
+                    break
+                elif next_key in ['absday', 'absmonth']:
+                    query_key = {'absday': 'day', 'absmonth': 'month'}[next_key]
+                    for date in queryset.dates(key, query_key):
+                        sample_space.append(date)
+                    break
+                else:
+                    try:
+                        field = queryset.model._meta.get_field_by_name(key)[0]
+                    except FieldDoesNotExist:
+                        raise ValueError("invalid field %s, because %s is an invalid field name for %s" \
+                                         % (self.field, key, queryset.model))
+                        #if ForeignKey, we get all distinct objects of foreign model
+                    if type(field) == ForeignKey:
+                        sample_space = queryset.values_list(key, flat=True).distinct()
+                        filter_dict = {'%s__in' % field.rel.field_name: sample_space}
+                        queryset = sample_space = field.related.parent_model.objects.filter(**filter_dict)
+                    #else, we just return values
+                    else:
+                        sample_space = queryset.values_list(key, flat=True).distinct()
+                        break
+
+                key = next_key
+                try:
+                    next_key = lookup_list.pop(0)
+                except IndexError:
+                    next_key = None
+
+        return sample_space
+
+    def _sort_sample_space(self, sample_space):
+        """
+        override the parent method, in order to sort the list of django models by their *pk*.
+        """
+        if sample_space and isinstance(sample_space[0], Model):
+            return sorted(sample_space, key=lambda item: item.pk)
+        else:
+            return super(Dimension, self)._sort_sample_space(sample_space)
+
+
+class Cube(BaseCube, CubeQueryMixin):
+    """
+    A cube that can calculates measures on Django querysets.
+
+    Args:
+        queryset (Queryset): the base queryset of the cube.
+
+    Kwargs:
+        measure_none (object): the value that the measure should actually return if the calculation returned *None*.
+    """
+
+    def __init__(self, queryset, measure_none=0):
+        super(Cube, self).__init__()
+        self.queryset = queryset
+        self.measure_none = measure_none
+
+        #give all the dimensions a default queryset if they don't already have one.
+        for dim_name, dimension in self.dimensions.iteritems():
+            dimension.queryset = dimension.queryset or queryset
+
+    def measure(self, **coordinates):
+        if coordinates:
+            #realizes some local copies
+            constraint = dict(self.constraint)
+            coordinates = dict(coordinates)
+
+            #we check the coordinates passed
+            for dim_name, value in coordinates.iteritems():
+                if not dim_name in self.dimensions:
+                    raise ValueError("invalid dimension '%s'" % dim_name)
+                    #If dimension is already constrained, we only accept the same value in *coordinates*
+                if dim_name in self.constraint and constraint[dim_name] != value:
+                    raise ValueError("dimension '%s' is already constrained to a different value" % dim_name)
+
+            #we get a subcube constrained with *coordinates*, and calculate the measure on this whole subcube. 
+            return self.constrain(**coordinates).measure()
+        else:
+            #we build the filters for the queryset
+            filters_dict = {}
+            for dim_name, dimension in self.dimensions.iteritems():
+                filters_dict.update(dimension.to_queryset_filter())
+            return self.aggregation(self.queryset.filter(**filters_dict)) or self.measure_none
+
+    @staticmethod
+    def aggregation(queryset):
+        """
+        Abstract method. Given a *queryset*, this method should calculate and return the measure. For example :
+
+        >>> def aggregation(queryset):
+        ...     return queryset.count()
+        
+        **In practice**, the *queryset* received as a parameter will **always** be : the cube's base queryset, filtered according to the cube's constraint.
+        """
+        raise NotImplementedError
Index: website/wsgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- website/wsgi.py	(revision )
+++ website/wsgi.py	(revision )
@@ -0,0 +1,33 @@
+"""
+WSGI config for website project.
+
+This module contains the WSGI application used by Django's development server
+and any production WSGI deployments. It should expose a module-level variable
+named ``application``. Django's ``runserver`` and ``runfcgi`` commands discover
+this application via the ``WSGI_APPLICATION`` setting.
+
+Usually you will have the standard Django WSGI application here, but it also
+might make sense to replace the whole Django WSGI application with a custom one
+that later delegates to the Django one. For example, you could introduce WSGI
+middleware here, or combine a Django application with an application of another
+framework.
+
+"""
+import os
+
+# We defer to a DJANGO_SETTINGS_MODULE already in the environment. This breaks
+# if running multiple sites in the same mod_wsgi process. To fix this, use
+# mod_wsgi daemon mode with each site in its own daemon process, or use
+# os.environ["DJANGO_SETTINGS_MODULE"] = "website.settings"
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "website.settings")
+
+# This application object is used by any WSGI server configured to use this
+# file. This includes Django's development server, if the WSGI_APPLICATION
+# setting points here.
+from django.core.wsgi import get_wsgi_application
+
+application = get_wsgi_application()
+
+# Apply WSGI middleware here.
+# from helloworld.wsgi import HelloWorldApplication
+# application = HelloWorldApplication(application)
Index: templates/site_base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/site_base.html	(revision )
+++ templates/site_base.html	(revision )
@@ -0,0 +1,50 @@
+<html>
+<head>
+    {% load staticfiles %}
+    {% include "head.html" %}
+    {% block style_base %}
+    {% block extra_style %}{% endblock %}
+    {% endblock %}
+    {% block extra_script %}
+    {% endblock %}
+</head>
+<body>
+<div class="wrapper">
+
+    <article class="main">
+        {% include "header.html" %}
+        {% if content.page_slug = "home" %}
+        <ul class="bxslider">
+            {% for slide in slideshowcollection %}
+            <li><img src='/{{ slide.url|cut:"contents/" }}' title="{{ slide.alt }}"/></li>
+            {% endfor %}
+            {% endif %}
+        </ul>
+        <div class="clearfix">
+            <div class="main-left">
+                {% block breadcrumb %}
+
+                {% endblock %}
+                <div class="spacebottom"></div>
+                {% block body %}
+                <!-- Main hero unit for a primary marketing message or call to action -->
+                <div class="main-block">
+
+                    <div id="content">
+                        {% block content %}{% endblock %}
+                    </div>
+                </div>
+                {% if user.is_authenticated %}
+
+                {% endif %}
+                {% endblock %}
+            </div>
+            {% include "sidebar.html" %}
+        </div>
+    </article>
+    {% include "footer.html" %}
+</div>
+</body>
+</html>
+
+
Index: templates/blogs/detail.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/blogs/detail.html	(revision )
+++ templates/blogs/detail.html	(revision )
@@ -0,0 +1,51 @@
+{% extends "site_base.html" %}
+{% block body %}
+<div class="post">
+    <h1 class="page_title">
+        <a href="/blogs/{{ content.page_slug }}">{{ content.title }}</a>
+    </h1>
+
+    <div class="content">
+        <div class="meta">
+            Published in: <a href="/blogs/category/{{ content.category.page_slug }}">{{ content.category }}</a> on {{
+            content.pub_date }}
+        </div>
+        <!-- meta -->
+        {{ content.description }}
+
+    </div>
+    <!-- content -->
+</div>
+
+
+<h2>Comments</h2>
+<div class="comment">
+    {% for comment in commentcollection %}
+    <p>{{ comment.user }} says: {{ comment.comment }}</p>
+    {% endfor %}
+</div>
+
+{% if user.is_authenticated %}
+
+{% if a_message %}<p><strong>{{ a_message }}</strong></p>{% endif %}
+{% if content.is_comment %}
+<h3>Leave a comment</h3>
+<form action="/blogs/{{ content.page_slug }}/" method="post" id="hongkiat-form">
+
+    {% csrf_token %}
+    <input type="hidden" name="formuser" value="{{ user.id }}"/>
+
+    <div class="fieldWrapper">
+        <textarea name="comments" id="bbcode" class="txtblock" placeholder="Comments:"></textarea>
+    </div>
+    <section id="buttons">
+        <input type="reset" name="reset" id="resetbtn" class="resetbtn" value="Reset">
+        <input type="submit" name="submit" value="Submit" class="submitbtn" id="submitbtn"/>
+    </section>
+</form>
+{% endif %}
+{% else %}
+<p>Welcome, new user. Please <a href="/accounts/login/">log in</a> or <a href="/accounts/registration/">register</a> to
+    comment</p>
+{% endif %}
+{% endblock %}
\ No newline at end of file
Index: cube/test_cube/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/test_cube/__init__.py	(revision )
+++ cube/test_cube/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: templates/registration/login.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/registration/login.html	(revision )
+++ templates/registration/login.html	(revision )
@@ -0,0 +1,30 @@
+{% extends "site_base.html" %}
+{% block body %}
+<h1>Login</h1>
+<p>Please enter username & password</p>
+{% block content %}
+
+{% if form.errors %}
+<p class="errorlist">Your username and password didn't match. Please try again.</p>
+{% endif %}
+
+<form method="post" action="{% url 'django.contrib.auth.views.login' %}" id="hongkiat-form">
+    {% csrf_token %}
+    <div class="fieldWrapper">
+        <input id="id_name" maxlength="254" name="username" type="text" clickev="true" class="txtinput"
+               placeholder="Username:">
+    </div>
+    <div class="fieldWrapper">
+        <input id="id_subject" name="password" type="password" clickev="true" class="txtinput"
+               placeholder="Password:">
+    </div>
+    <section id="buttons">
+        <input type="reset" name="reset" id="resetbtn" class="resetbtn" value="Reset">
+        <input type="submit" value="Login" class="submitbtn" id="submitbtn">
+    </section>
+
+    <input type="hidden" name="next" value="{{ next }}"/>
+</form>
+
+{% endblock %}
+{% endblock %}
\ No newline at end of file
Index: templates/account/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/account/base.html	(revision )
+++ templates/account/base.html	(revision )
@@ -0,0 +1,26 @@
+{% extends "site_base.html" %}
+
+{% load url from future %}
+{% load i18n %}
+
+{% block body_class %}account{% endblock %}
+
+{% block subnav %}
+<div class="panel panel-default">
+    <div class="panel-heading"><strong>{% trans "Account" %}</strong></div>
+    <div class="list-group">
+        <a class="list-group-item settings" href="{% url " account_settings" %}">
+        {% trans "Settings" %}
+        </a>
+        <a class="list-group-item password" href="{% url " account_password" %}">
+        {% trans "Change password" %}
+        </a>
+        <a class="list-group-item delete" href="{% url " account_delete" %}">
+        {% trans "Delete account" %}
+        </a>
+        <a class="list-group-item" href="{% url " pybb:edit_profile" %}">
+        Profile settings
+        </a>
+    </div>
+</div>
+{% endblock %}
Index: cube/test_cube/doctest_runner/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/test_cube/doctest_runner/__init__.py	(revision )
+++ cube/test_cube/doctest_runner/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
+
Index: website/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- website/settings.py	(revision )
+++ website/settings.py	(revision )
@@ -0,0 +1,195 @@
+# Django settings for website project.
+
+DEBUG = True
+TEMPLATE_DEBUG = DEBUG
+
+ADMINS = (
+# ('Your Name', 'your_email@example.com'),
+)
+
+MANAGERS = ADMINS
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
+        'NAME': 'C:/python/projects/website/website.db', # Or path to database file if using sqlite3.
+        # The following settings are not used with sqlite3:
+        'USER': '',
+        'PASSWORD': '',
+        'HOST': '', # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
+        'PORT': '', # Set to empty string for default.
+    }
+}
+
+# Hosts/domain names that are valid for this site; required if DEBUG is False
+# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
+ALLOWED_HOSTS = []
+
+# Local time zone for this installation. Choices can be found here:
+# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
+# although not all choices may be available on all operating systems.
+# In a Windows environment this must be set to your system time zone.
+TIME_ZONE = 'America/Chicago'
+
+# Language code for this installation. All choices can be found here:
+# http://www.i18nguy.com/unicode/language-identifiers.html
+LANGUAGE_CODE = 'en-us'
+
+SITE_ID = 1
+
+# If you set this to False, Django will make some optimizations so as not
+# to load the internationalization machinery.
+USE_I18N = True
+
+# If you set this to False, Django will not format dates, numbers and
+# calendars according to the current locale.
+USE_L10N = True
+
+# If you set this to False, Django will not use timezone-aware datetimes.
+USE_TZ = True
+
+# Absolute filesystem path to the directory that will hold user-uploaded files.
+# Example: "/var/www/example.com/media/"
+MEDIA_ROOT = ''
+
+# URL that handles the media served from MEDIA_ROOT. Make sure to use a
+# trailing slash.
+# Examples: "http://example.com/media/", "http://media.example.com/"
+MEDIA_URL = ''
+
+# Absolute path to the directory static files should be collected to.
+# Don't put anything in this directory yourself; store your static files
+# in apps' "static/" subdirectories and in STATICFILES_DIRS.
+# Example: "/var/www/example.com/static/"
+STATIC_ROOT = ''
+
+# URL prefix for static files.
+# Example: "http://example.com/static/", "http://static.example.com/"
+STATIC_URL = '/static/'
+
+# Additional locations of static files
+STATICFILES_DIRS = (
+# Put strings here, like "/home/html/static" or "C:/www/django/static".
+# Always use forward slashes, even on Windows.
+# Don't forget to use absolute paths, not relative paths.
+)
+
+# List of finder classes that know how to find static files in
+# various locations.
+STATICFILES_FINDERS = (
+    'django.contrib.staticfiles.finders.FileSystemFinder',
+    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
+    #    'django.contrib.staticfiles.finders.DefaultStorageFinder',
+)
+
+# Make this unique, and don't share it with anybody.
+SECRET_KEY = 'o%ogv9kpmp2#3#-otl_oisp&%tuuq8zg$0t5(pj56v4-oxq6e9'
+
+# List of callables that know how to import templates from various sources.
+TEMPLATE_LOADERS = (
+    'django.template.loaders.filesystem.Loader',
+    'django.template.loaders.app_directories.Loader',
+    #     'django.template.loaders.eggs.Loader',
+)
+
+MIDDLEWARE_CLASSES = (
+    'django.middleware.common.CommonMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'pybb.middleware.PybbMiddleware',
+    # Uncomment the next line for simple clickjacking protection:
+    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
+)
+
+ROOT_URLCONF = 'website.urls'
+
+# Python dotted path to the WSGI application used by Django's runserver.
+WSGI_APPLICATION = 'website.wsgi.application'
+
+TEMPLATE_CONTEXT_PROCESSORS = (
+    'django.contrib.auth.context_processors.auth',
+    'django.core.context_processors.request',
+    'pybb.context_processors.processor',
+)
+
+TEMPLATE_DIRS = (
+    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
+    # Always use forward slashes, even on Windows.
+    # Don't forget to use absolute paths, not relative paths.
+    "C:/python/projects/website/templates",
+
+)
+AUTH_PROFILE_MODULE = "account.UserProfile"
+STATIC_URL = '/static/'
+# Sending mail
+EMAIL_USE_TLS = True
+EMAIL_HOST = 'smtp.gmail.com'
+EMAIL_PORT = 587
+EMAIL_HOST_USER = 'lylya4@gmail.com'
+EMAIL_HOST_PASSWORD = 'Billy243a'
+
+INSTALLED_APPS = (
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.sites',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'django_tables2',
+    'haystack',
+    'contents',
+    'cube',
+    'blogs',
+    # Uncomment the next line to enable the admin:
+    'django.contrib.admin',
+    'south',
+    'pybb',
+    'markdown',
+    'postmarkup',
+    'annoying',
+    'pinax_theme_bootstrap',
+    # Uncomment the next line to enable admin documentation:
+    # 'django.contrib.admindocs',
+)
+
+HAYSTACK_CONNECTIONS = {
+    'default': {
+        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
+    },
+}
+SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'
+
+# A sample logging configuration. The only tangible logging
+# performed by this configuration is to send an email to
+# the site admins on every HTTP 500 error when DEBUG=False.
+# See http://docs.djangoproject.com/en/dev/topics/logging for
+# more details on how to customize your logging configuration.
+LOGGING = {
+    'version': 1,
+    'disable_existing_loggers': False,
+    'filters': {
+        'require_debug_false': {
+            '()': 'django.utils.log.RequireDebugFalse'
+        }
+    },
+    'handlers': {
+        'mail_admins': {
+            'level': 'ERROR',
+            'filters': ['require_debug_false'],
+            'class': 'django.utils.log.AdminEmailHandler'
+        }
+    },
+    'loggers': {
+        'django.request': {
+            'handlers': ['mail_admins'],
+            'level': 'ERROR',
+            'propagate': True,
+        },
+    }
+}
+
+PYBB_ATTACHMENT_ENABLE = True
+PYBB_TEMPLATE = 'pybb/base.html'
+PYBB_AUTO_USER_PERMISSIONS = True
\ No newline at end of file
Index: contents/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/tests.py	(revision )
+++ contents/tests.py	(revision )
@@ -0,0 +1,16 @@
+"""
+This file demonstrates writing tests using the unittest module. These will pass
+when you run "manage.py test".
+
+Replace this with more appropriate tests for your application.
+"""
+
+from django.test import TestCase
+
+
+class SimpleTest(TestCase):
+    def test_basic_addition(self):
+        """
+        Tests that 1 + 1 always equals 2.
+        """
+        self.assertEqual(1 + 1, 2)
Index: templates/registration/register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/registration/register.html	(revision )
+++ templates/registration/register.html	(revision )
@@ -0,0 +1,32 @@
+{% extends "site_base.html" %}
+{% block body %}
+<h1>Create an account</h1>
+{% block content %}
+
+{% if form.errors %}
+<p class="errorlist">Please check the required field, the passwords might not be matched.</p>
+{% endif %}
+<form action="" method="post" id="hongkiat-form">
+    {% csrf_token %}
+    {{ form.username.errors}}
+    <input id="id_name" maxlength="30" name="username" type="text" class="txtinput" placeholder="Username:">
+
+    <p class="helptext">Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.</p>
+
+    {{ form.email.errors}}
+    <input id="id_sender" name="email" type="email" class="txtinput" placeholder="Email:">
+    {{ form.password1.errors}}
+    <input id="id_subject" name="password1" type="password" class="txtinput" placeholder="Password:">
+    {{ form.password2.errors}}
+    <input id="id_subject" name="password2" type="password" class="txtinput" placeholder="Password confirmation:">
+
+    <p class="helptext">Enter the same password as above, for verification.</p>
+
+    <section id="buttons">
+        <input type="reset" name="reset" id="resetbtn" class="resetbtn" value="Reset">
+        <input type="submit" value="Create the account" class="submitbtn" id="submitbtn">
+    </section>
+    <input type="hidden" name="next" value="/accounts/login/?next={{ nextpage }}"/>
+</form>
+{% endblock %}
+{% endblock %}
\ No newline at end of file
Index: .idea/scopes/scope_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/scopes/scope_settings.xml	(revision )
+++ .idea/scopes/scope_settings.xml	(revision )
@@ -0,0 +1,5 @@
+<component name="DependencyValidationManager">
+  <state>
+    <option name="SKIP_IMPORT_STATEMENTS" value="false" />
+  </state>
+</component>
\ No newline at end of file
Index: website/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- website/__init__.py	(revision )
+++ website/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: blogs/static/screen.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/static/screen.css	(revision )
+++ blogs/static/screen.css	(revision )
@@ -0,0 +1,127 @@
+table.paleblue {
+    border-collapse: collapse;
+    border-color: #CCC;
+    border: 1px solid #DDD;
+}
+
+table.paleblue,
+table.paleblue +  ul.pagination {
+    font: normal 11px/14px 'Lucida Grande', Verdana, Helvetica, Arial, sans-serif;
+}
+
+table.paleblue a:link,
+table.paleblue a:visited,
+table.paleblue + ul.pagination > li > a {
+    color: #5B80B2;
+    text-decoration: none;
+    font-weight: bold;
+}
+
+table.paleblue a:hover {
+    color: #036;
+}
+
+table.paleblue td,
+table.paleblue th {
+    padding: 5px;
+    line-height: 13px;
+    border-bottom: 1px solid #EEE;
+    border-left: 1px solid #DDD;
+    text-align: left;
+}
+
+table.paleblue thead th:first-child,
+table.paleblue thead td:first-child {
+    border-left: none !important;
+}
+
+table.paleblue thead th,
+table.paleblue thead td {
+    background: #FCFCFC url(../img/header-bg.png) left bottom repeat-x;
+    border-bottom: 1px solid #DDD;
+    padding: 2px 5px;
+    font-size: 11px;
+    vertical-align: middle;
+    color: #666;
+}
+
+table.paleblue thead th > a:link,
+table.paleblue thead th > a:visited {
+    color: #666;
+}
+
+table.paleblue thead th.orderable > a {
+    padding-right: 20px;
+    background: url(../img/arrow-inactive-up.png) right center no-repeat;
+}
+table.paleblue thead th.orderable.asc > a {
+    background-image: url(../img/arrow-active-up.png);
+}
+table.paleblue thead th.orderable.desc > a {
+    background-image: url(../img/arrow-active-down.png);
+}
+
+table.paleblue tr.odd {
+    background-color: #EDF3FE;
+}
+
+table.paleblue tr.even {
+    background-color: white;
+}
+
+table.paleblue + ul.pagination {
+    background: white url(../img/pagination-bg.gif) left 180% repeat-x;
+    overflow: auto;
+    margin: 0;
+    padding: 10px;
+    border: 1px solid #DDD;
+    list-style: none;
+}
+
+table.paleblue + ul.pagination > li {
+    float: left;
+    line-height: 22px;
+    margin-left: 10px;
+}
+
+table.paleblue + ul.pagination > li:first-child {
+    margin-left: 0;
+}
+
+table.paleblue + ul.pagination > li.cardinality {
+    float: right;
+    color: #8d8d8d;
+}
+
+table.paleblue > tbody > tr > td > span.true,
+table.paleblue > tbody > tr > td > span.false {
+    background-position: top left;
+    background-repeat: no-repeat;
+    display: inline-block;
+    height: 10px;
+    overflow: hidden;
+    text-indent: -200px;
+    width: 10px;
+}
+
+table.paleblue > tbody > tr > td > .missing {
+    background: transparent url(../img/missing.png) right center no-repeat;
+    color: #717171;
+    padding-right: 20px;
+}
+
+table.paleblue > tbody > tr > td > .missing:hover {
+    color: #333;
+}
+
+table.paleblue > tbody > tr > td > span.true {
+    background-image: url(../img/true.gif);
+}
+
+table.paleblue > tbody > tr > td > span.false {
+    background-image: url(../img/false.gif);
+}
+
+div.table-container {
+    display: inline-block;
+}
Index: blogs/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/urls.py	(revision )
+++ blogs/urls.py	(revision )
@@ -0,0 +1,9 @@
+from django.conf.urls import patterns, url
+from blogs import views
+
+urlpatterns = patterns('',
+                       url(r'^$', views.content, name="index"),
+                       url(r'^(?P<page_slug>[\w-]+)/$', views.detail, name="detail"),
+                       url(r'^category/(?P<page_slug>[\w-]+)/$', views.category, name="category"),
+
+)
\ No newline at end of file
Index: templates/404.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/404.html	(revision )
+++ templates/404.html	(revision )
@@ -0,0 +1,6 @@
+{% extends "site_base.html" %}
+
+
+{% block content %}
+Page does not exists
+{% endblock %}
\ No newline at end of file
Index: contents/templatetags/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/templatetags/__init__.py	(revision )
+++ contents/templatetags/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: contents/static/fonts/icomoon/icomoon.dev.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/fonts/icomoon/icomoon.dev.svg	(revision )
+++ contents/static/fonts/icomoon/icomoon.dev.svg	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" >
+<svg xmlns="http://www.w3.org/2000/svg">
+<metadata>
+This is a custom SVG font generated by IcoMoon.
+<iconset grid="16"></iconset>
+</metadata>
+<defs>
+<font id="icomoon" horiz-adv-x="512" >
+<font-face units-per-em="512" ascent="480" descent="-32" />
+<missing-glyph horiz-adv-x="512" />
+<glyph class="hidden" unicode="&#xf000;" d="M0,480L 512 -32L0 -32 z" horiz-adv-x="0" />
+<glyph unicode="&#xe000;" d="M 496.131,44.302L 374.855,147.449c-12.537,11.283-25.945,16.463-36.776,15.963C 366.707,196.946, 384,240.451, 384,288
+	C 384,394.039, 298.039,480, 192,480C 85.962,480,0,394.039,0,288c0-106.039, 85.961-192, 192-192c 47.549,0, 91.054,17.293, 124.588,45.922
+	c-0.5-10.831, 4.68-24.239, 15.963-36.776l 103.147-121.276c 17.661-19.623, 46.511-21.277, 64.11-3.678S 515.754,26.641, 496.131,44.302z
+	 M 192,160c-70.692,0-128,57.308-128,128S 121.308,416, 192,416s 128-57.308, 128-128S 262.693,160, 192,160z" data-tags="search, magnifier, lookup, find" />
+<glyph unicode="&#x20;" horiz-adv-x="256" />
+</font></defs></svg>
\ No newline at end of file
Index: blogs/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/admin.py	(revision )
+++ blogs/admin.py	(revision )
@@ -0,0 +1,38 @@
+from django.contrib import admin
+from blogs.models import Blog, Comment, Category
+
+
+class CommentInline(admin.StackedInline):
+    model = Comment
+    extra = 3
+    fieldsets = [
+
+        ('Advanced', {'fields': ('user', 'comment'), 'classes': ['collapse']}),
+
+    ]
+
+
+class BlogAdmin(admin.ModelAdmin):
+    fieldsets = [
+        (None, {'fields': ['title']}),
+        (None, {'fields': ['pub_date']}),
+        (None, {'fields': ['description']}),
+        (None, {'fields': ['category']}),
+        (None, {'fields': ['page_slug']}),
+        ('Advanced', {'fields': ['is_comment']}),
+    ]
+    inlines = [CommentInline]
+
+
+admin.site.register(Blog, BlogAdmin)
+
+
+class CategoryAdmin(admin.ModelAdmin):
+    fieldsets = [
+        (None, {'fields': ['title']}),
+        (None, {'fields': ['description']}),
+        (None, {'fields': ['page_slug']}),
+    ]
+
+
+admin.site.register(Category, CategoryAdmin)
\ No newline at end of file
Index: contents/static/js/sliding_effect.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/sliding_effect.js	(revision )
+++ contents/static/js/sliding_effect.js	(revision )
@@ -0,0 +1,40 @@
+$(document).ready(function()
+{
+slide("#sliding-navigation", 25, 15, 150, .8);
+});
+
+function slide(navigation_id, pad_out, pad_in, time, multiplier)
+{
+// creates the target paths
+var list_elements = navigation_id + " li.sliding-element";
+var link_elements = list_elements + " a";
+
+// initiates the timer used for the sliding animation
+var timer = 0;
+
+// creates the slide animation for all list elements
+$(list_elements).each(function(i)
+{
+// margin left = - ([width of element] + [total vertical padding of element])
+$(this).css("margin-left","-180px");
+// updates timer
+timer = (timer*multiplier + time);
+$(this).animate({ marginLeft: "0" }, timer);
+$(this).animate({ marginLeft: "15px" }, timer);
+$(this).animate({ marginLeft: "0" }, timer);
+});
+
+// creates the hover-slide effect for all link elements
+$(link_elements).each(function(i)
+{
+$(this).hover(
+function()
+{
+$(this).animate({ paddingLeft: pad_out }, 150);
+},
+function()
+{
+$(this).animate({ paddingLeft: pad_in }, 150);
+});
+});
+}
\ No newline at end of file
Index: contents/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/views.py	(revision )
+++ contents/views.py	(revision )
@@ -0,0 +1,36 @@
+from django.shortcuts import render, get_object_or_404
+from django.http import HttpResponseRedirect
+from django.core.mail import send_mail
+
+from contents.models import Content, Images, ContactForm, slideshow
+
+
+def content(request, page_slug="home"):
+    content = get_object_or_404(Content, page_slug=page_slug)
+    imagecollection = Images.objects.all().filter(content_id=content.pk)
+    slideshowcollection = slideshow.objects.all().filter(content_id=content.pk)
+    return render(request, 'contents/index.html',
+                  {'content': content, 'imagecollection': imagecollection, 'slideshowcollection': slideshowcollection})
+
+
+def contact(request):
+    if request.method == 'POST': # If the form has been submitted...
+        form = ContactForm(request.POST) # A form bound to the POST data
+        if form.is_valid(): # All validation rules pass
+            subject = form.cleaned_data['subject']
+            message = form.cleaned_data['message']
+            sender = form.cleaned_data['sender']
+            cc_myself = form.cleaned_data['cc_myself']
+
+            recipients = ['tanya.ho@roi.com.au']
+            if cc_myself:
+                recipients.append(sender)
+
+            send_mail(subject, message, sender, recipients)
+            return HttpResponseRedirect('/thanks/') # Redirect after POST
+    else:
+        form = ContactForm() # An unbound form
+
+    return render(request, 'contents/contact.html', {
+        'form': form,
+    })
Index: cube/templates/table_from_cube.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/templates/table_from_cube.html	(revision )
+++ cube/templates/table_from_cube.html	(revision )
@@ -0,0 +1,31 @@
+<table>
+    <theader>
+        <tr>
+            <th></th>
+            {% for name, pretty_name in col_names %}
+            <th>{{ pretty_name }}</th>
+            {% endfor %}
+            <th>OVERALL</th>
+        </tr>
+    </theader>
+    <tbody>
+    {% for row in rows %}
+    <tr>
+        <th>{{ row.pretty_name }}</th>
+        {% for value in row.values %}
+        <td>{{ value }}</td>
+        {% endfor %}
+        <td>{{ row.overall }}</td>
+    </tr>
+    {% endfor %}
+    </tbody>
+    <tfoot>
+    <tr>
+        <th>OVERALL</th>
+        {% for col_overall in col_overalls %}
+        <td>{{ col_overall }}</td>
+        {% endfor %}
+        <td>{{ overall }}</td>
+    </tr>
+    </tfoot>
+</table>
Index: contents/static/js/script.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/script.js	(revision )
+++ contents/static/js/script.js	(revision )
@@ -0,0 +1,59 @@
+$(function(){
+
+var input = $('input#s');
+var divInput = $('div.input');
+var width = divInput.width();
+var outerWidth = divInput.parent().width() - (divInput.outerWidth() - width) - 28;
+var submit = $('#searchSubmit');
+var txt = input.val();
+
+input.bind('focus', function() {
+if(input.val() === txt) {
+input.val('');
+}
+$(this).animate({color: '#000'}, 300); // text color
+$(this).parent().animate({
+width: outerWidth + 'px',
+backgroundColor: '#fff', // background color
+paddingRight: '43px'
+}, 300, function() {
+if(!(input.val() === '' || input.val() === txt)) {
+if(!($.browser.msie && $.browser.version < 9)) {
+submit.fadeIn(300);
+} else {
+submit.css({display: 'block'});
+}
+}
+}).addClass('focus');
+}).bind('blur', function() {
+$(this).animate({color: '#b4bdc4'}, 300); // text color
+$(this).parent().animate({
+width: width + 'px',
+backgroundColor: '#e8edf1', // background color
+paddingRight: '15px'
+}, 300, function() {
+if(input.val() === '') {
+input.val(txt)
+}
+}).removeClass('focus');
+if(!($.browser.msie && $.browser.version < 9)) {
+submit.fadeOut(100);
+} else {
+submit.css({display: 'none'});
+}
+}).keyup(function() {
+if(input.val() === '') {
+if(!($.browser.msie && $.browser.version < 9)) {
+submit.fadeOut(300);
+} else {
+submit.css({display: 'none'});
+}
+} else {
+if(!($.browser.msie && $.browser.version < 9)) {
+submit.fadeIn(300);
+} else {
+submit.css({display: 'block'});
+}
+}
+});
+});
\ No newline at end of file
Index: manage.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- manage.py	(revision )
+++ manage.py	(revision )
@@ -0,0 +1,10 @@
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == "__main__":
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "website.settings")
+
+    from django.core.management import execute_from_command_line
+
+    execute_from_command_line(sys.argv)
Index: contents/templatetags/general.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/templatetags/general.py	(revision )
+++ contents/templatetags/general.py	(revision )
@@ -0,0 +1,1 @@
+__author__ = 'tho'
Index: contents/static/fonts/icomoon/license.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/fonts/icomoon/license.txt	(revision )
+++ contents/static/fonts/icomoon/license.txt	(revision )
@@ -0,0 +1,2 @@
+Icon Set:	IcoMoon - Free -- http://keyamoon.com/icomoon/
+License:	CC BY 3.0 -- http://creativecommons.org/licenses/by/3.0/
\ No newline at end of file
Index: contents/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/admin.py	(revision )
+++ contents/admin.py	(revision )
@@ -0,0 +1,26 @@
+from django.contrib import admin
+from contents.models import Content, Images, slideshow
+
+
+class ImagesInline(admin.StackedInline):
+    model = Images
+    extra = 1
+
+
+class SlideshowsInline(admin.StackedInline):
+    model = slideshow
+    extra = 1
+
+
+class ContentAdmin(admin.ModelAdmin):
+    fieldsets = [
+        (None, {'fields': ['title']}),
+        (None, {'fields': ['pub_date']}),
+        (None, {'fields': ['description']}),
+        ('SEO', {'fields': ('page_slug', 'meta_title', 'meta_description')}),
+        ('Advanced', {'fields': ['is_menu']}),
+    ]
+    inlines = [ImagesInline, SlideshowsInline]
+
+
+admin.site.register(Content, ContentAdmin)
Index: templates/header.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/header.html	(revision )
+++ templates/header.html	(revision )
@@ -0,0 +1,46 @@
+{% load staticfiles %}
+{% load menu %}
+{% get_menu_list %}
+<header id="header">
+    <div class="container">
+        <div class="clearfix">
+            <div class="logo">
+                <img src="{% static 'img/tools.png' %}" id="logostyle"><img src="{% static 'img/logo.png' %}">
+            </div>
+            <div class="call">
+
+            </div>
+            <div id="useraccount">
+                {% if user.is_authenticated %}
+                <span>Logged in as <a href="/forum/users/{{ user.username }}/">{{ user.username }}</a></span> <a
+                    href="/accounts/logout/?next={{ request.path|urlencode }}"><img
+                    src="{% static 'images/logout.png' %}"/></a>
+                {% else %}
+                <a href="/accounts/login/?next={{ request.path|urlencode }}"><img
+                        src="{% static 'images/login.png' %}"/></a> or <a
+                    href="/accounts/register/?next={{ request.path|urlencode }}"><img
+                    src="{% static 'images/register.png' %}"/></a>
+
+                {% endif %}
+            </div>
+
+            <form id="searchForm" action="/search/">
+                <fieldset>
+                    <div class="input">
+                        <input type="text" name="q" id="s" value="Search blogs"/>
+                    </div>
+                    <input type="submit" id="searchSubmit" value=""/>
+                </fieldset>
+            </form>
+        </div>
+    </div>
+    <ul id="nav">
+        <li class="top"><a href="/" class="top_link"><span>Home</span></a></li>
+        {% for item in site_menu %}
+        <li class="top"><a href="/{{ item.page_slug }}" class="top_link"><span>{{ item.title }}</span></a></li>
+        {% endfor %}
+        <li class="top"><a href="/blogs/" class="top_link"><span>Blog</span></a></li>
+        <li class="top"><a href="/forum/" class="top_link"><span>Forum</span></a></li>
+        <li class="top"><a href="/contact/" class="top_link"><span>Contact</span></a></li>
+    </ul>
+</header>
\ No newline at end of file
Index: templates/footer.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/footer.html	(revision )
+++ templates/footer.html	(revision )
@@ -0,0 +1,3 @@
+<footer class="footer">
+    <a href="/">Google Tools Set Up</a> | Copyright &copy; 2013 All Rights Reserved
+</footer>
\ No newline at end of file
Index: contents/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/urls.py	(revision )
+++ contents/urls.py	(revision )
@@ -0,0 +1,10 @@
+from django.conf.urls import patterns, url
+
+from contents import views
+
+urlpatterns = patterns('',
+                       url(r'^$', views.content, name='index'),
+                       url(r'^contact/$', views.contact, name='contact'),
+                       url(r'^(?P<page_slug>[\w-]+)/$', views.content, name='detail'),
+
+)
\ No newline at end of file
Index: contents/templatetags/sidebar.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/templatetags/sidebar.py	(revision )
+++ contents/templatetags/sidebar.py	(revision )
@@ -0,0 +1,21 @@
+from django import template
+from django.template import Node
+from blogs.models import Category
+
+register = template.Library()
+
+
+def build_sidebar_menu_list(parser, token):
+    """
+    {% get_menu_list %}
+    """
+    return MenuObject()
+
+
+class MenuObject(Node):
+    def render(self, context):
+        context['sidebar_menu'] = Category.objects.all()
+        return ''
+
+
+register.tag('get_sidebar_list', build_sidebar_menu_list)
\ No newline at end of file
Index: cube/test_cube/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/test_cube/settings.py	(revision )
+++ cube/test_cube/settings.py	(revision )
@@ -0,0 +1,47 @@
+# Django settings for test_cube1 project.
+
+import sys
+import os
+
+sys.path.append(os.path.abspath("../.."))
+
+TEST_RUNNER = 'doctest_runner.runner.run_tests_until_fail'
+
+DEBUG = True
+TEMPLATE_DEBUG = DEBUG
+
+ADMINS = (
+# ('Your Name', 'your_email@domain.com'),
+)
+
+MANAGERS = ADMINS
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
+        'NAME': 'test.sqlite3', # Or path to database file if using sqlite3.
+        'USER': '', # Not used with sqlite3.
+        'PASSWORD': '', # Not used with sqlite3.
+        'HOST': '', # Set to empty string for localhost. Not used with sqlite3.
+        'PORT': '', # Set to empty string for default. Not used with sqlite3.
+    }
+}
+
+# List of callables that know how to import templates from various sources.
+TEMPLATE_LOADERS = (
+    'django.template.loaders.filesystem.Loader',
+    'django.template.loaders.app_directories.Loader',
+    #     'django.template.loaders.eggs.Loader',
+)
+
+ROOT_URLCONF = 'test_cube.urls'
+
+TEMPLATE_DIRS = (
+    'templates',
+)
+
+INSTALLED_APPS = (
+    'test_cube.test_models',
+    'cube'
+)
Index: cube/test_cube/manage.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/test_cube/manage.py	(revision )
+++ cube/test_cube/manage.py	(revision )
@@ -0,0 +1,14 @@
+#!/usr/bin/env python
+from django.core.management import execute_manager
+
+try:
+    import settings # Assumed to be in the same directory.
+except ImportError:
+    import sys
+
+    sys.stderr.write(
+        "Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n(If the file settings.py does indeed exist, it's causing an ImportError somehow.)\n" % __file__)
+    sys.exit(1)
+
+if __name__ == "__main__":
+    execute_manager(settings)
Index: templates/sidebar.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/sidebar.html	(revision )
+++ templates/sidebar.html	(revision )
@@ -0,0 +1,13 @@
+{% load sidebar %}
+{% get_sidebar_list %}
+<div class="main-right">
+    <a href="/contact/" class="button">Send an enquiry</a>
+
+    <ul id="sliding-navigation">
+        <li class="sliding-element"><h3>Categories</h3></li>
+        {% for item in sidebar_menu %}
+        <li class="sliding-element"><a href="/blogs/category/{{ item.page_slug }}" class="top_link"><span>{{ item.title }}</span></a>
+        </li>
+        {% endfor %}
+    </ul>
+</div>
\ No newline at end of file
Index: cube/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/__init__.py	(revision )
+++ cube/__init__.py	(revision )
@@ -0,0 +1,60 @@
+# -*- coding: utf-8 -*-
+#'django-serializable'
+#Copyright (C) 2010 Sébastien Piquemal @ futurice
+#contact : sebastien.piquemal@futurice.com
+#futurice's website : www.futurice.com
+
+#This program is free software: you can redistribute it and/or modify
+#it under the terms of the GNU General Public License as published by
+#the Free Software Foundation, either version 3 of the License, or
+#(at your option) any later version.
+
+#This program is distributed in the hope that it will be useful,
+#but WITHOUT ANY WARRANTY; without even the implied warranty of
+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#GNU General Public License for more details.
+
+#You should have received a copy of the GNU General Public License
+#along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+
+
+import sys
+import __builtin__
+
+# For Python 2.5-, this will enable the simliar property mechanism as in
+# Python 2.6+/3.0+. The code is based on
+# http://bruynooghe.blogspot.com/2008/04/xsetter-syntax-in-python-25.html
+if sys.version_info[:2] <= (2, 5):
+    # If you need to acces original built-in propery(), uncomment the next line.
+    # __builtin__._property = property
+    class property(property):
+
+        def __init__(self, fget, *args, **kwargs):
+
+            self.__doc__ = fget.__doc__
+            super(property, self).__init__(fget, *args, **kwargs)
+
+        def setter(self, fset):
+
+            cls_ns = sys._getframe(1).f_locals
+            for k, v in cls_ns.iteritems():
+                if v == self:
+                    propname = k
+                    break
+            cls_ns[propname] = property(self.fget, fset,
+                                        self.fdel, self.__doc__)
+            return cls_ns[propname]
+
+        def deleter(self, fdel):
+
+            cls_ns = sys._getframe(1).f_locals
+            for k, v in cls_ns.iteritems():
+                if v == self:
+                    propname = k
+                    break
+            cls_ns[propname] = property(self.fget, self.fset,
+                                        fdel, self.__doc__)
+            return cls_ns[propname]
+
+    __builtin__.property = property
Index: cube/query.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/query.py	(revision )
+++ cube/query.py	(revision )
@@ -0,0 +1,212 @@
+# -*- coding: utf-8 -*-
+#'django-cube'
+#Copyright (C) 2010 Sébastien Piquemal @ futurice
+#contact : sebastien.piquemal@futurice.com
+#futurice's website : www.futurice.com
+
+#This program is free software: you can redistribute it and/or modify
+#it under the terms of the GNU General Public License as published by
+#the Free Software Foundation, either version 3 of the License, or
+#(at your option) any later version.
+
+#This program is distributed in the hope that it will be useful,
+#but WITHOUT ANY WARRANTY; without even the implied warranty of
+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#GNU General Public License for more details.
+
+#You should have received a copy of the GNU General Public License
+#along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+from .utils import odict
+
+
+class CubeQueryMixin(object):
+    """
+    Mixin class whose purpose is to separate querying of measures, from the cube logic itself. 
+    """
+
+    def measures_dict(self, *dim_names, **kwargs):
+        """
+        Returns: 
+            dict. An ordered dictionnary of measures from the cube, structured following *dim_names*. For example :
+
+                >>> cube.measures_dict('dim2', 'dim1') == {
+                ...     'subcubes': {
+                ...         dim2_val1: {
+                ...             'subcubes': {
+                ...                 dim1_val1: {'measure': measure1_1},
+                ...
+                ...                 dim1_valN: {'measure': measure1_N},
+                ...             },
+                ...             'measure': measure1
+                ...         },
+                ... 
+                ...         dim2_valN: {
+                ...
+                ...         },
+                ...     },
+                ...     'measure': measure
+                ... }
+
+            If *full=False*, only the measures for which all dimensions in *dim_names* are fixed will be returned. For example : ::
+
+                >>> cube(['dim1', 'dim2']).measures_dict('dim2', 'dim1', full=False) == {
+                ...     dim2_val1: {
+                ...         dim1_val1: {'measure': measure1_1},
+                ...
+                ...         dim1_valN: {'measure': measure1_N},
+                ...     },
+                ... 
+                ...     dim2_valN: {
+                ...
+                ...     },
+                ... }
+        """
+        full = kwargs.setdefault('full', True)
+        returned_dict = odict()
+
+        dim_names = list(dim_names)
+        next_dim_name = self._pop_first_dim(dim_names)
+
+        if next_dim_name:
+            #dictionnary containing *measures_dict* of the subcubes
+            subcubes_dict = odict()
+            for subcube in self.subcubes(next_dim_name):
+                dim_value = subcube.constraint[next_dim_name]
+                subcubes_dict[dim_value] = subcube.measures_dict(*dim_names, **kwargs)
+            if full:
+                returned_dict['measure'] = self.measure()
+                returned_dict['subcubes'] = subcubes_dict
+            else:
+                returned_dict = subcubes_dict
+        else:
+            returned_dict['measure'] = self.measure()
+        return returned_dict
+
+    def measures_list(self, *dim_names):
+        """
+        Returns:
+            list. A multidimensionnal list of measures from the cube, structured following *dim_names*. For example :
+
+                >>> cube.measures_list('dim2', 'dim1') == [
+                ...     [measure_11_21, measure_11_22, , measure_11_2N],
+                ...     [measure_12_21, measure_12_22, , measure_12_2N],
+                ... 
+                ...     [measure_1N_21, measure_1N_22, , measure_1N_2N]
+                ... ] # Where <measure_AB_CD> means measure of cube with dimA=valB and dimC=valD
+        """
+        returned_list = []
+
+        dim_names = list(dim_names)
+        next_dim_name = self._pop_first_dim(dim_names)
+
+        #We check if there is still dimensions in *dim_names*,
+        #otherwise we return a list of measures. 
+        if dim_names:
+            for subcube in self.subcubes(next_dim_name):
+                returned_list.append(subcube.measures_list(*dim_names))
+        elif next_dim_name:
+            for subcube in self.subcubes(next_dim_name):
+                returned_list.append(subcube.measure())
+        return returned_list
+
+    def table_helper(self, *dim_names):
+        """
+        A helper function to build a table from a cube. It takes two dimensions, and creates a dictionnary from it.  
+
+        Args:
+            dim_names. Two dimension names "dimension1", "dimension2", where "dimension1" is the name of the dimension that will be used for columns, "dimension2" the name of the dimension for rows.
+
+        Returns:
+            dict. A dictionnary containing the following variables :
+
+                - col_names: list of tuples *(<column name>, <column pretty name>)*
+                - row_names: list of tuples *(<row name>, <row pretty name>)*
+                - cols: list of columns, as *[{'name': col_name, 'pretty_name': col_pretty_name, 'values': [measure1, measure2, , measureN], 'overall': col_overall}]*
+                - rows: list of columns, as *[{'name': row_name, 'pretty_name': row_pretty_name, 'values': [measure1, measure2, , measureN], 'overall': row_overall}]*
+                - row_overalls: list of measure on whole rows, therefore the measure is taken on the row dimension, with *row_name* as value
+                - col_overalls: list of measure on whole columns, therefore the measure is taken on the column dimension, with *col_name* as value
+                - col_dim_name: the dimension on which the columns are calculated
+                - row_dim_name: the dimension on which the rows are calculated
+                - overall: measure on the whole cube
+        """
+        col_names = []
+        row_names = []
+        cols = []
+        rows = []
+        row_overalls = []
+        col_overalls = []
+        col_dim_name = str(dim_names[0])
+        row_dim_name = str(dim_names[1])
+        overall = None
+
+        #columns variables in the context
+        for col_subcube in self.subcubes(col_dim_name):
+            col_dimension = col_subcube.dimensions[col_dim_name]
+            #column level variables
+            col_names.append((
+                col_dimension.constraint,
+                col_dimension.pretty_constraint
+            ))
+            col_overalls.append(col_subcube.measure())
+            col = {
+                'values': [],
+                'overall': col_subcube.measure(),
+                'name': col_dimension.constraint,
+                'pretty_name': col_dimension.pretty_constraint,
+            }
+            #cell level variables
+            for cell_subcube in col_subcube.subcubes(row_dim_name):
+                col['values'].append(cell_subcube.measure())
+            cols.append(col)
+
+        #rows variables in the context
+        for row_subcube in self.subcubes(row_dim_name):
+            row_dimension = row_subcube.dimensions[row_dim_name]
+            #row level variables
+            row_names.append((
+                row_dimension.constraint,
+                row_dimension.pretty_constraint
+            ))
+            row_overalls.append(row_subcube.measure())
+            row = {
+                'values': [],
+                'overall': row_subcube.measure(),
+                'name': row_dimension.constraint,
+                'pretty_name': row_dimension.pretty_constraint,
+            }
+            #cell level variables
+            for cell_subcube in row_subcube.subcubes(col_dim_name):
+                row['values'].append(cell_subcube.measure())
+            rows.append(row)
+
+        #context dict
+        return {
+            'col_names': col_names,
+            'row_names': row_names,
+            'cols': cols,
+            'rows': rows,
+            'row_overalls': row_overalls,
+            'col_overalls': col_overalls,
+            'col_dim_name': col_dim_name,
+            'row_dim_name': row_dim_name,
+            'overall': self.measure(),
+        }
+
+    def measures(self, *dim_names):
+        """
+        Returns:
+            list. A list of dictionnaries, whose keys are values for dimensions in *dim_names* and a special key *'__measure'*, for the measure associated with these dimensions' values. This is actually very similar to Django querysets' "values" method. For example :
+
+                >>> cube.measures('dim2', 'dim1') == [
+                ...     [{'dim1': val1_1, 'dim2': val2_1, '__measure': measure_1_1},
+                ...     , ,
+                ...     {'dim1': val1_N, 'dim2': val2_N, '__measure': measure_1_1}]
+        """
+        dim_names = list(dim_names)
+        dict_list = []
+        for subcube in self.subcubes(*dim_names):
+            measure_dict = subcube.constraint
+            measure_dict['__measure'] = subcube.measure()
+            dict_list.append(measure_dict)
+        return dict_list
Index: blogs/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/models.py	(revision )
+++ blogs/models.py	(revision )
@@ -0,0 +1,50 @@
+from django.db import models
+from django.contrib.auth.models import User
+
+
+class Category(models.Model):
+    title = models.CharField(max_length=200)
+    description = models.TextField()
+    page_slug = models.CharField(max_length=200)
+
+    def __unicode__(self):
+        return self.title
+
+
+class Blog(models.Model):
+    title = models.CharField(max_length=200)
+    description = models.TextField()
+    pub_date = models.DateField('date published')
+    is_comment = models.BooleanField()
+    category = models.ForeignKey(Category)
+    page_slug = models.CharField(max_length=200)
+
+    def __unicode__(self):
+        return self.title
+
+
+class Comment(models.Model):
+    user = models.ForeignKey(User)
+    blog = models.ForeignKey(Blog)
+    comment = models.TextField()
+
+
+User.profile = property(lambda u: UserProfile.objects.get_or_create(user=u)[0])
+
+from cube.models import Cube, Dimension
+
+
+class BlogCube(Cube):
+    page_slug = Dimension('page_slug')
+    title = Dimension('title')
+    description = Dimension('description')
+    pub_date = Dimension('pub_date')
+    is_comment = Dimension('is_comment')
+
+    @staticmethod
+    def aggregation(queryset):
+        return queryset.count()
+
+
+
+
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/website.iml" filepath="$PROJECT_DIR$/.idea/website.iml" />
+    </modules>
+  </component>
+</project>
+
Index: templates/blogs/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/blogs/index.html	(revision )
+++ templates/blogs/index.html	(revision )
@@ -0,0 +1,26 @@
+{% extends "site_base.html" %}
+{% block body %}
+{% if latest_blog_list %}
+{% for item in latest_blog_list %}
+
+<div class="post">
+    <h2 class="page_title">
+        <a href="/blogs/{{ item.page_slug }}">{{ item.title }}</a>
+    </h2>
+
+    <div class="content">
+        <div class="meta">
+            <a href="/blogs/{{ item.page_slug }}">Leave a comment</a>&nbsp;&nbsp;&nbsp;Published in: <a
+                href="/blogs/category/{{ item.category.page_slug }}">{{ item.category }}</a> on {{ item.pub_date }}
+        </div>
+        <!-- meta -->
+        {{ item.description }}
+        <p><a href="/blogs/{{ item.page_slug }}" class="more_btn">Read More</a></p>
+    </div>
+    <!-- content -->
+</div>
+{% endfor %}
+{% else %}
+There is no blog post. Please select other categories.
+{% endif %}
+{% endblock %}
\ No newline at end of file
Index: contents/static/pro_dropdown_2/stuHover.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/pro_dropdown_2/stuHover.js	(revision )
+++ contents/static/pro_dropdown_2/stuHover.js	(revision )
@@ -0,0 +1,36 @@
+/* ================================================================
+This copyright notice must be kept untouched in the stylesheet at
+all times.
+
+The original version of this script and the associated (x)html
+is available at http://www.stunicholls.com/menu/pro_drop_1.html
+Copyright (c) 2005-2007 Stu Nicholls. All rights reserved.
+This script and the associated (x)html may be modified in any
+way to fit your requirements.
+=================================================================== */
+stuHover = function() {
+var cssRule;
+var newSelector;
+for (var i = 0; i < document.styleSheets.length; i++)
+for (var x = 0; x < document.styleSheets[i].rules.length ; x++)
+{
+cssRule = document.styleSheets[i].rules[x];
+if (cssRule.selectorText.indexOf("LI:hover") != -1)
+{
+newSelector = cssRule.selectorText.replace(/LI:hover/gi, "LI.iehover");
+document.styleSheets[i].addRule(newSelector , cssRule.style.cssText);
+}
+}
+var getElm = document.getElementById("nav").getElementsByTagName("LI");
+for (var i=0; i
+<getElm.length; i++) {
+getElm[i].onmouseover=function() {
+this.className+=" iehover";
+}
+getElm[i].onmouseout=function() {
+this.className=this.className.replace(new RegExp(" iehover\\b"), "");
+}
+}
+}
+if (window.attachEvent) window.attachEvent("onload", stuHover);
+
Index: cube/templatetags/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/templatetags/__init__.py	(revision )
+++ cube/templatetags/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: blogs/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/views.py	(revision )
+++ blogs/views.py	(revision )
@@ -0,0 +1,56 @@
+from django.shortcuts import render, get_object_or_404
+from django.contrib.auth.forms import UserCreationForm
+from django.http import HttpResponseRedirect
+from django_tables2 import RequestConfig
+
+from blogs.models import Blog, Comment, Category
+from blogs.tables import BlogTable
+
+
+def blogcontent(request):
+    latest_blog_list = BlogTable(Blog.objects.all())
+    RequestConfig(request).configure(latest_blog_list)
+    context = {'latest_blog_list': latest_blog_list}
+    return render(request, 'blogs/index.html', context)
+
+
+def content(request):
+    latest_blog_list = Blog.objects.all()
+    context = {'latest_blog_list': latest_blog_list}
+    return render(request, 'blogs/index.html', context)
+
+
+def category(request, page_slug):
+    get_category = Category.objects.get(page_slug=page_slug)
+    latest_blog_list = Blog.objects.all().filter(category=get_category.id)
+    context = {'latest_blog_list': latest_blog_list}
+    return render(request, 'blogs/index.html', context)
+
+
+def detail(request, page_slug):
+    a_message = ""
+    content = get_object_or_404(Blog, page_slug=page_slug)
+    commentcollection = Comment.objects.all().filter(blog_id=content.pk)
+    if request.method == 'POST':
+        commentcollection.create(user_id=request.POST['formuser'], comment=request.POST['comments'], blog_id=content.pk)
+        a_message = "Comment is added"
+    return render(request, 'blogs/detail.html', {
+        'content': content,
+        'a_message': a_message,
+        'commentcollection': commentcollection,
+    })
+
+
+def register(request):
+    if request.method == 'POST':
+        form = UserCreationForm(request.POST)
+        if form.is_valid():
+            new_user = form.save()
+            return HttpResponseRedirect(request.POST['next'])
+    else:
+        form = UserCreationForm()
+    nextpage = request.GET.get('next')
+    return render(request, "registration/register.html", {
+        'form': form,
+        'nextpage': nextpage,
+    })
Index: cube/utils.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/utils.py	(revision )
+++ cube/utils.py	(revision )
@@ -0,0 +1,329 @@
+# -*- coding: utf-8 -*-
+"""
+    odict
+    ~~~~~
+
+    This module is an example implementation of an ordered dict for the
+    collections module.  It's not written for performance (it actually
+    performs pretty bad) but to show how the API works.
+
+
+    Questions and Answers
+    =====================
+
+    Why would anyone need ordered dicts?
+
+        Dicts in python are unordered which means that the order of items when
+        iterating over dicts is undefined.  As a matter of fact it is most of
+        the time useless and differs from implementation to implementation.
+
+        Many developers stumble upon that problem sooner or later when
+        comparing the output of doctests which often does not match the order
+        the developer thought it would.
+
+        Also XML systems such as Genshi have their problems with unordered
+        dicts as the input and output ordering of tag attributes is often
+        mixed up because the ordering is lost when converting the data into
+        a dict.  Switching to lists is often not possible because the
+        complexity of a lookup is too high.
+
+        Another very common case is metaprogramming.  The default namespace
+        of a class in python is a dict.  With Python 3 it becomes possible
+        to replace it with a different object which could be an ordered dict.
+        Django is already doing something similar with a hack that assigns
+        numbers to some descriptors initialized in the class body of a
+        specific subclass to restore the ordering after class creation.
+
+        When porting code from programming languages such as PHP and Ruby
+        where the item-order in a dict is guaranteed it's also a great help
+        to have an equivalent data structure in Python to ease the transition.
+
+    Where are new keys added?
+
+        At the end.  This behavior is consistent with Ruby 1.9 Hashmaps
+        and PHP Arrays.  It also matches what common ordered dict
+        implementations do currently.
+
+    What happens if an existing key is reassigned?
+
+        The key is *not* moved.  This is consitent with existing
+        implementations and can be changed by a subclass very easily::
+
+            class movingodict(odict):
+                def __setitem__(self, key, value):
+                    self.pop(key, None)
+                    odict.__setitem__(self, key, value)
+
+        Moving keys to the end of a ordered dict on reassignment is not
+        very useful for most applications.
+
+    Does it mean the dict keys are sorted by a sort expression?
+
+        That's not the case.  The odict only guarantees that there is an order
+        and that newly inserted keys are inserted at the end of the dict.  If
+        you want to sort it you can do so, but newly added keys are again added
+        at the end of the dict.
+
+    I initializes the odict with a dict literal but the keys are not
+    ordered like they should!
+
+        Dict literals in Python generate dict objects and as such the order of
+        their items is not guaranteed.  Before they are passed to the odict
+        constructor they are already unordered.
+
+    What happens if keys appear multiple times in the list passed to the
+    constructor?
+
+        The same as for the dict.  The latter item overrides the former.  This
+        has the side-effect that the position of the first key is used because
+        the key is actually overwritten:
+
+        >>> odict([('a', 1), ('b', 2), ('a', 3)])
+        odict.odict([('a', 3), ('b', 2)])
+
+        This behavor is consistent with existing implementation in Python
+        and the PHP array and the hashmap in Ruby 1.9.
+
+    This odict doesn't scale!
+
+        Yes it doesn't.  The delitem operation is O(n).  This is file is a
+        mockup of a real odict that could be implemented for collections
+        based on an linked list.
+
+    Why is there no .insert()?
+
+        There are few situations where you really want to insert a key at
+        an specified index.  To now make the API too complex the proposed
+        solution for this situation is creating a list of items, manipulating
+        that and converting it back into an odict:
+
+        >>> d = odict([('a', 42), ('b', 23), ('c', 19)])
+        >>> l = d.items()
+        >>> l.insert(1, ('x', 0))
+        >>> odict(l)
+        odict.odict([('a', 42), ('x', 0), ('b', 23), ('c', 19)])
+
+    :copyright: (c) 2008 by Armin Ronacher and PEP 273 authors.
+    :license: modified BSD license.
+"""
+from itertools import izip, imap
+from copy import deepcopy
+
+missing = object()
+
+
+class odict(dict):
+    """
+    Ordered dict example implementation.
+
+    This is the proposed interface for a an ordered dict as proposed on the
+    Python mailinglist (proposal_).
+
+    It's a dict subclass and provides some list functions.  The implementation
+    of this class is inspired by the implementation of Babel but incorporates
+    some ideas from the `ordereddict`_ and Django's ordered dict.
+
+    The constructor and `update()` both accept iterables of tuples as well as
+    mappings:
+
+    >>> d = odict([('a', 'b'), ('c', 'd')])
+    >>> d.update({'foo': 'bar'})
+    >>> d
+    odict.odict([('a', 'b'), ('c', 'd'), ('foo', 'bar')])
+    
+    Keep in mind that when updating from dict-literals the order is not
+    preserved as these dicts are unsorted!
+
+    You can copy an odict like a dict by using the constructor, `copy.copy`
+    or the `copy` method and make deep copies with `copy.deepcopy`:
+
+    >>> from copy import copy, deepcopy
+    >>> copy(d)
+    odict.odict([('a', 'b'), ('c', 'd'), ('foo', 'bar')])
+    >>> d.copy()
+    odict.odict([('a', 'b'), ('c', 'd'), ('foo', 'bar')])
+    >>> odict(d)
+    odict.odict([('a', 'b'), ('c', 'd'), ('foo', 'bar')])
+    >>> d['spam'] = []
+    >>> d2 = deepcopy(d)
+    >>> d2['spam'].append('eggs')
+    >>> d
+    odict.odict([('a', 'b'), ('c', 'd'), ('foo', 'bar'), ('spam', [])])
+    >>> d2
+    odict.odict([('a', 'b'), ('c', 'd'), ('foo', 'bar'), ('spam', ['eggs'])])
+
+    All iteration methods as well as `keys`, `values` and `items` return
+    the values ordered by the the time the key-value pair is inserted:
+
+    >>> d.keys()
+    ['a', 'c', 'foo', 'spam']
+    >>> d.values()
+    ['b', 'd', 'bar', []]
+    >>> d.items()
+    [('a', 'b'), ('c', 'd'), ('foo', 'bar'), ('spam', [])]
+    >>> list(d.iterkeys())
+    ['a', 'c', 'foo', 'spam']
+    >>> list(d.itervalues())
+    ['b', 'd', 'bar', []]
+    >>> list(d.iteritems())
+    [('a', 'b'), ('c', 'd'), ('foo', 'bar'), ('spam', [])]
+
+    Index based lookup is supported too by `byindex` which returns the
+    key/value pair for an index:
+
+    >>> d.byindex(2)
+    ('foo', 'bar')
+
+    You can reverse the odict as well:
+
+    >>> d.reverse()
+    >>> d
+    odict.odict([('spam', []), ('foo', 'bar'), ('c', 'd'), ('a', 'b')])
+    
+    And sort it like a list:
+
+    >>> d.sort(key=lambda x: x[0].lower())
+    >>> d
+    odict.odict([('a', 'b'), ('c', 'd'), ('foo', 'bar'), ('spam', [])])
+
+    .. _proposal: http://thread.gmane.org/gmane.comp.python.devel/95316
+    .. _ordereddict: http://www.xs4all.nl/~anthon/Python/ordereddict/
+    """
+
+    def __init__(self, *args, **kwargs):
+        dict.__init__(self)
+        self._keys = []
+        self.update(*args, **kwargs)
+
+    def __delitem__(self, key):
+        dict.__delitem__(self, key)
+        self._keys.remove(key)
+
+    def __setitem__(self, key, item):
+        if key not in self:
+            self._keys.append(key)
+        dict.__setitem__(self, key, item)
+
+    def __deepcopy__(self, memo=None):
+        if memo is None:
+            memo = {}
+        d = memo.get(id(self), missing)
+        if d is not missing:
+            return d
+        memo[id(self)] = d = self.__class__()
+        dict.__init__(d, deepcopy(self.items(), memo))
+        d._keys = self._keys[:]
+        return d
+
+    def __getstate__(self):
+        return {'items': dict(self), 'keys': self._keys}
+
+    def __setstate__(self, d):
+        self._keys = d['keys']
+        dict.update(d['items'])
+
+    def __reversed__(self):
+        return reversed(self._keys)
+
+    def __eq__(self, other):
+        if isinstance(other, odict):
+            if not dict.__eq__(self, other):
+                return False
+            return self.items() == other.items()
+        return dict.__eq__(self, other)
+
+    def __ne__(self, other):
+        return not self.__eq__(other)
+
+    def __cmp__(self, other):
+        if isinstance(other, odict):
+            return cmp(self.items(), other.items())
+        elif isinstance(other, dict):
+            return dict.__cmp__(self, other)
+        return NotImplemented
+
+    @classmethod
+    def fromkeys(cls, iterable, default=None):
+        return cls((key, default) for key in iterable)
+
+    def clear(self):
+        del self._keys[:]
+        dict.clear(self)
+
+    def copy(self):
+        return self.__class__(self)
+
+    def items(self):
+        return zip(self._keys, self.values())
+
+    def iteritems(self):
+        return izip(self._keys, self.itervalues())
+
+    def keys(self):
+        return self._keys[:]
+
+    def iterkeys(self):
+        return iter(self._keys)
+
+    def pop(self, key, default=missing):
+        if default is missing:
+            return dict.pop(self, key)
+        elif key not in self:
+            return default
+        self._keys.remove(key)
+        return dict.pop(self, key, default)
+
+    def popitem(self, key):
+        self._keys.remove(key)
+        return dict.popitem(key)
+
+    def setdefault(self, key, default=None):
+        if key not in self:
+            self._keys.append(key)
+        dict.setdefault(self, key, default)
+
+    def update(self, *args, **kwargs):
+        sources = []
+        if len(args) == 1:
+            if hasattr(args[0], 'iteritems'):
+                sources.append(args[0].iteritems())
+            else:
+                sources.append(iter(args[0]))
+        elif args:
+            raise TypeError('expected at most one positional argument')
+        if kwargs:
+            sources.append(kwargs.iteritems())
+        for iterable in sources:
+            for key, val in iterable:
+                self[key] = val
+
+    def values(self):
+        return map(self.get, self._keys)
+
+    def itervalues(self):
+        return imap(self.get, self._keys)
+
+    def index(self, item):
+        return self._keys.index(item)
+
+    def byindex(self, item):
+        key = self._keys[item]
+        return (key, dict.__getitem__(self, key))
+
+    def reverse(self):
+        self._keys.reverse()
+
+    def sort(self, *args, **kwargs):
+        self._keys.sort(*args, **kwargs)
+
+    def __repr__(self):
+        return 'odict.odict(%r)' % self.items()
+
+    __copy__ = copy
+    __iter__ = iterkeys
+
+
+if __name__ == '__main__':
+    import doctest
+
+    doctest.testmod()
Index: website/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- website/urls.py	(revision )
+++ website/urls.py	(revision )
@@ -0,0 +1,27 @@
+from django.conf.urls import patterns, include, url
+# Uncomment the next two lines to enable the admin:
+from django.contrib import admin
+
+admin.autodiscover()
+
+urlpatterns = patterns('',
+                       # Examples:
+                       # url(r'^$', 'website.views.home', name='home'),
+                       # url(r'^website/', include('website.foo.urls')),
+
+                       # Uncomment the admin/doc line below to enable admin documentation:
+                       # url(r'^admin/doc/', include('django.contrib.admindocs.urls')),
+
+                       # Uncomment the next line to enable the admin:
+                       url(r'^admin/', include(admin.site.urls)),
+                       url(r'^search/', include('haystack.urls')),
+                       url(r'^forum/', include('pybb.urls', namespace='pybb')),
+                       url(r'^blogs/', include('blogs.urls', namespace="blogs")),
+                       url(r'^', include('contents.urls', namespace="contents")),
+
+                       url(r'^accounts/login/$', 'django.contrib.auth.views.login', name='auth_login'),
+                       url(r'^accounts/logout/$', 'django.contrib.auth.views.logout'),
+                       url(r'^accounts/register/$', 'blogs.views.register', name='registration_register'),
+
+
+)
\ No newline at end of file
Index: templates/search/search.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/search/search.html	(revision )
+++ templates/search/search.html	(revision )
@@ -0,0 +1,65 @@
+<html>
+<head>
+    {% load staticfiles %}
+    {% include "contents/head.html" %}
+</head>
+<body>
+<div class="wrapper">
+    <article class="main">
+        {% include "contents/header.html" %}
+        {% if content.page_slug = "home" %}
+        <ul class="bxslider">
+            {% for slide in slideshowcollection %}
+            <li><img src='/{{ slide.url|cut:"contents/" }}' title="{{ slide.alt }}"/></li>
+            {% endfor %}
+            {% endif %}
+        </ul>
+        <div class="clearfix">
+            <div class="main-left">
+                {% block content %}
+                <h1>Search</h1>
+
+                <form method="get" action="." id="hongkiat-form">
+
+                    <input id="id_subject" name="q" type="text" class="txtinput" placeholder="Enter the keyword:">
+                    <section id="buttons">
+                        <input type="reset" name="reset" id="resetbtn" class="resetbtn" value="Reset">
+                        <input type="submit" value="Search blogs" class="submitbtn" id="submitbtn">
+                    </section>
+
+
+                    {% if query %}
+                    <br class="clearfix" style="clear:both;"/>
+
+                    <h3>Results</h3>
+
+                    {% for result in page.object_list %}
+                    <p>
+                        <a href="{{ result.object.get_absolute_url }}">{{ result.object.title }}</a>: {{
+                        result.object.description|truncatewords:30 }}
+                    </p>
+                    {% empty %}
+                    <p>No results found.</p>
+                    {% endfor %}
+
+                    {% if page.has_previous or page.has_next %}
+                    <div>
+                        {% if page.has_previous %}<a href="?q={{ query }}&amp;page={{ page.previous_page_number }}">{%
+                        endif %}&laquo; Previous{% if page.has_previous %}</a>{% endif %}
+                        |
+                        {% if page.has_next %}<a href="?q={{ query }}&amp;page={{ page.next_page_number }}">{% endif
+                        %}Next &raquo;{% if page.has_next %}</a>{% endif %}
+                    </div>
+                    {% endif %}
+                    {% else %}
+                    {# Show some example queries to run, maybe query syntax, something else? #}
+                    {% endif %}
+                </form>
+                {% endblock %}
+            </div>
+            {% include "contents/sidebar.html" %}
+        </div>
+    </article>
+    {% include "contents/footer.html" %}
+</div>
+</body>
\ No newline at end of file
Index: contents/static/js/html5shiv.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/html5shiv.js	(revision )
+++ contents/static/js/html5shiv.js	(revision )
@@ -0,0 +1,9 @@
+(function(l,f){function m(){var a=e.elements;return"string"==typeof a?a.split(" "):a}function i(a){var b=n[a[o]];b||(b={},h++,a[o]=h,n[h]=b);return b}function p(a,b,c){b||(b=f);if(g)return b.createElement(a);c||(c=i(b));b=c.cache[a]?c.cache[a].cloneNode():r.test(a)?(c.cache[a]=c.createElem(a)).cloneNode():c.createElem(a);return b.canHaveChildren&&!s.test(a)?c.frag.appendChild(b):b}function t(a,b){if(!b.cache)b.cache={},b.createElem=a.createElement,b.createFrag=a.createDocumentFragment,b.frag=b.createFrag();
+a.createElement=function(c){return!e.shivMethods?b.createElem(c):p(c,a,b)};a.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+m().join().replace(/\w+/g,function(a){b.createElem(a);b.frag.createElement(a);return'c("'+a+'")'})+");return n}")(e,b.frag)}function q(a){a||(a=f);var b=i(a);if(e.shivCSS&&!j&&!b.hasCSS){var c,d=a;c=d.createElement("p");d=d.getElementsByTagName("head")[0]||d.documentElement;c.innerHTML="x
+<style>article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}
+</style>";
+c=d.insertBefore(c.lastChild,d.firstChild);b.hasCSS=!!c}g||t(a,b);return a}var k=l.html5||{},s=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,r=/^<|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i,j,o="_html5shiv",h=0,n={},g;(function(){try{var a=f.createElement("a");a.innerHTML="
+<xyz></xyz>";j="hidden"in a;var b;if(!(b=1==a.childNodes.length)){f.createElement("a");
+var c=f.createDocumentFragment();b="undefined"==typeof c.cloneNode||"undefined"==typeof c.createDocumentFragment||"undefined"==typeof c.createElement}g=b}catch(d){g=j=!0}})();var e={elements:k.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:!1!==k.shivCSS,supportsUnknownElements:g,shivMethods:!1!==k.shivMethods,type:"default",shivDocument:q,createElement:p,createDocumentFragment:function(a,
+b){a||(a=f);if(g)return a.createDocumentFragment();for(var b=b||i(a),c=b.frag.cloneNode(),d=0,e=m(),h=e.length;d
+<h;d++)c.createElement(e[d]);return c}};l.html5=e;q(f)})(this,document);
Index: contents/static/jquery.bxslider.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/jquery.bxslider.css	(revision )
+++ contents/static/jquery.bxslider.css	(revision )
@@ -0,0 +1,197 @@
+/**
+ * BxSlider v4.0 - Fully loaded, responsive content slider
+ * http://bxslider.com
+ *
+ * Written by: Steven Wanderski, 2012
+ * http://stevenwanderski.com
+ * (while drinking Belgian ales and listening to jazz)
+ *
+ * CEO and founder of bxCreative, LTD
+ * http://bxcreative.com
+ */
+
+
+/** RESET AND LAYOUT
+===================================*/
+
+.bx-wrapper {
+	position: relative;
+	margin: 0 auto 60px;
+	padding: 0;
+	*zoom: 1;
+}
+
+.bx-wrapper img {
+	max-width: 100%;
+	display: block;
+}
+
+/** THEME
+===================================*/
+
+.bx-wrapper .bx-viewport {
+	-moz-box-shadow: 0 0 5px #ccc;
+	-webkit-box-shadow: 0 0 5px #ccc;
+	box-shadow: 0 0 5px #ccc;
+	border: solid #fff 5px;
+	left: -5px;
+	background: #fff;
+}
+
+.bx-wrapper .bx-pager,
+.bx-wrapper .bx-controls-auto {
+	position: absolute;
+	bottom: -30px;
+	width: 100%;
+}
+
+/* LOADER */
+
+.bx-wrapper .bx-loading {
+	min-height: 50px;
+	background: url(images/bx_loader.gif) center center no-repeat #fff;
+	height: 100%;
+	width: 100%;
+	position: absolute;
+	top: 0;
+	left: 0;
+	z-index: 2000;
+}
+
+/* PAGER */
+
+.bx-wrapper .bx-pager {
+	text-align: center;
+	font-size: .85em;
+	font-family: Arial;
+	font-weight: bold;
+	color: #666;
+	padding-top: 20px;
+}
+
+.bx-wrapper .bx-pager .bx-pager-item,
+.bx-wrapper .bx-controls-auto .bx-controls-auto-item {
+	display: inline-block;
+	*zoom: 1;
+	*display: inline;
+}
+
+.bx-wrapper .bx-pager.bx-default-pager a {
+	background: #666;
+	text-indent: -9999px;
+	display: block;
+	width: 10px;
+	height: 10px;
+	margin: 0 5px;
+	outline: 0;
+	-moz-border-radius: 5px;
+	-webkit-border-radius: 5px;
+	border-radius: 5px;
+}
+
+.bx-wrapper .bx-pager.bx-default-pager a:hover,
+.bx-wrapper .bx-pager.bx-default-pager a.active {
+	background: #000;
+}
+
+/* DIRECTION CONTROLS (NEXT / PREV) */
+
+.bx-wrapper .bx-prev {
+	left: 10px;
+	background: url(images/controls.png) no-repeat 0 -32px;
+}
+
+.bx-wrapper .bx-next {
+	right: 10px;
+	background: url(images/controls.png) no-repeat -43px -32px;
+}
+
+.bx-wrapper .bx-prev:hover {
+	background-position: 0 0;
+}
+
+.bx-wrapper .bx-next:hover {
+	background-position: -43px 0;
+}
+
+.bx-wrapper .bx-controls-direction a {
+	position: absolute;
+	top: 50%;
+	margin-top: -16px;
+	outline: 0;
+	width: 32px;
+	height: 32px;
+	text-indent: -9999px;
+	z-index: 9999;
+}
+
+.bx-wrapper .bx-controls-direction a.disabled {
+	display: none;
+}
+
+/* AUTO CONTROLS (START / STOP) */
+
+.bx-wrapper .bx-controls-auto {
+	text-align: center;
+}
+
+.bx-wrapper .bx-controls-auto .bx-start {
+	display: block;
+	text-indent: -9999px;
+	width: 10px;
+	height: 11px;
+	outline: 0;
+	background: url(images/controls.png) -86px -11px no-repeat;
+	margin: 0 3px;
+}
+
+.bx-wrapper .bx-controls-auto .bx-start:hover,
+.bx-wrapper .bx-controls-auto .bx-start.active {
+	background-position: -86px 0;
+}
+
+.bx-wrapper .bx-controls-auto .bx-stop {
+	display: block;
+	text-indent: -9999px;
+	width: 9px;
+	height: 11px;
+	outline: 0;
+	background: url(images/controls.png) -86px -44px no-repeat;
+	margin: 0 3px;
+}
+
+.bx-wrapper .bx-controls-auto .bx-stop:hover,
+.bx-wrapper .bx-controls-auto .bx-stop.active {
+	background-position: -86px -33px;
+}
+
+/* PAGER WITH AUTO-CONTROLS HYBRID LAYOUT */
+
+.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-pager {
+	text-align: left;
+	width: 80%;
+}
+
+.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-controls-auto {
+	right: 0;
+	width: 35px;
+}
+
+/* IMAGE CAPTIONS */
+
+.bx-wrapper .bx-caption {
+	position: absolute;
+	bottom: 0;
+	left: 0;
+	background: #666\9;
+	background: rgba(80, 80, 80, 0.75);
+	width: 100%;
+}
+
+.bx-wrapper .bx-caption span {
+	color: #fff;
+	font-family: Arial;
+	display: block;
+	font-size: .85em;
+	padding: 10px;
+}
\ No newline at end of file
Index: blogs/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/tests.py	(revision )
+++ blogs/tests.py	(revision )
@@ -0,0 +1,16 @@
+"""
+This file demonstrates writing tests using the unittest module. These will pass
+when you run "manage.py test".
+
+Replace this with more appropriate tests for your application.
+"""
+
+from django.test import TestCase
+
+
+class SimpleTest(TestCase):
+    def test_basic_addition(self):
+        """
+        Tests that 1 + 1 always equals 2.
+        """
+        self.assertEqual(1 + 1, 2)
Index: cube/test_cube/test_models/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/test_cube/test_models/__init__.py	(revision )
+++ cube/test_cube/test_models/__init__.py	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: contents/static/fonts/codropsicons/codropsicons.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/fonts/codropsicons/codropsicons.svg	(revision )
+++ contents/static/fonts/codropsicons/codropsicons.svg	(revision )
@@ -0,0 +1,24 @@
+<?xml version="1.0" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" >
+<svg xmlns="http://www.w3.org/2000/svg">
+<metadata>
+This is a custom SVG font generated by IcoMoon.
+<iconset grid="14"></iconset>
+</metadata>
+<defs>
+<font id="codropsicons" horiz-adv-x="448" >
+<font-face units-per-em="448" ascent="384" descent="-64" />
+<missing-glyph horiz-adv-x="448" />
+<glyph unicode="&#xe001;" d="M 221.657,359.485 ,m0.00,0.00,c 0.00,0.00 -132.984-182.838 -132.205-286.236 0.515-68.522 61.089-123.688 135.314-123.218 74.202,0.479 133.943,56.421 133.428,124.943 C 357.414,178.368 221.657,359.485 221.657,359.485 z"  />
+<glyph unicode="&#xe004;" d="M 384.00,160.00l0.00-32.00 q0.00-13.25 -8.125-22.625t-21.125-9.375l-176.00,0.00 l 73.25-73.50q 9.50-9.00 9.50-22.50t-9.50-22.50l-18.75-19.00q-9.25-9.25 -22.50-9.25q-13.00,0.00 -22.75,9.25l-162.75,163.00q-9.25,9.25 -9.25,22.50q0.00,13.00 9.25,22.75l 162.75,162.50q 9.50,9.50 22.75,9.50q 13.00,0.00 22.50-9.50l 18.75-18.50q 9.50-9.50 9.50-22.75t-9.50-22.75l-73.25-73.25l 176.00,0.00 q 13.00,0.00 21.125-9.375 t 8.125-22.625z" horiz-adv-x="384"  />
+<glyph unicode="&#xe002;" d="M 407.273-23.273c0.00,0.00-325.818,0.00-366.545,0.00s-40.727,40.727-40.727,40.727l0.00,142.545 l 101.818,183.273l 244.364,0.00 l 101.818-183.273c0.00,0.00,0.00-101.818,0.00-142.545S 407.273-23.273, 407.273-23.273z M 325.818,302.545L 122.182,302.545 
+	l-71.273-142.545L 142.545,160.00 c0.00,0.00, 40.727,0.00, 40.727-40.727l0.00-20.364 l 81.455,0.00 l0.00,20.364 c0.00,0.00,0.00,40.727, 40.727,40.727l 91.636,0.00 L 325.818,302.545z M 407.273,119.273l-96.911,0.00 C 307.532,113.917, 305.455,107.503, 305.455,98.909c0.00-40.727-40.727-40.727-40.727-40.727L 183.273,58.182 c0.00,0.00-40.727,0.00-40.727,40.727
+	c0.00,8.593-2.077,15.008-4.908,20.364L 40.727,119.273 l0.00-101.818 l 366.545,0.00 L 407.273,119.273 z M 132.364,221.091l 183.273,0.00 L 325.818,200.727L 122.182,200.727 L 132.364,221.091z M 152.727,261.818l 142.545,0.00 L 305.455,241.455L 142.545,241.455 L 152.727,261.818z"  />
+<glyph unicode="&#xe000;" d="M 368.00,144.00q0.00-13.50 -9.25-22.75l-162.75-162.75q-9.75-9.25 -22.75-9.25q-12.75,0.00 -22.50,9.25l-18.75,18.75q-9.50,9.50 -9.50,22.75t 9.50,22.75l 73.25,73.25l-176.00,0.00 q-13.00,0.00 -21.125,9.375t-8.125,22.625l0.00,32.00 q0.00,13.25 8.125,22.625t 21.125,9.375l 176.00,0.00 l-73.25,73.50q-9.50,9.00 -9.50,22.50t 9.50,22.50l 18.75,18.75q 9.50,9.50 22.50,9.50q 13.25,0.00 22.75-9.50l 162.75-162.75q 9.25-8.75 9.25-22.50z" horiz-adv-x="384"  />
+<glyph unicode="&#xe003;" d="M 224.00-64.00C 100.291-64.00,0.00,36.291,0.00,160.00S 100.291,384.00, 224.00,384.00s 224.00-100.291, 224.00-224.00S 347.709-64.00, 224.00-64.00z
+	 M 224.00,343.273c-101.228,0.00-183.273-82.045-183.273-183.273s 82.045-183.273, 183.273-183.273s 183.273,82.045, 183.273,183.273S 325.228,343.273, 224.00,343.273z M 244.364,122.164C 244.364,111.005, 244.364,98.909, 244.364,98.909l-40.727,0.00 c0.00,0.00,0.00,29.466,0.00,40.727
+	s 9.123,20.364, 20.364,20.364l0.00,0.00c 22.481,0.00, 40.727,18.246, 40.727,40.727s-18.246,40.727-40.727,40.727S 183.273,223.209, 183.273,200.727c0.00-7.453, 2.138-14.356, 5.641-20.364L 145.437,180.364 C 143.727,186.90, 142.545,193.661, 142.545,200.727
+	c0.00,44.983, 36.471,81.455, 81.455,81.455s 81.455-36.471, 81.455-81.455C 305.455,162.831, 279.45,131.247, 244.364,122.164z M 244.364,37.818l-40.727,0.00 l0.00,40.727 l 40.727,0.00 L 244.364,37.818 z"  />
+<glyph unicode="&#x20;" horiz-adv-x="224" />
+<glyph class="hidden" unicode="&#xf000;" d="M0,384L 448 -64L0 -64 z" horiz-adv-x="0" />
+</font></defs></svg>
\ No newline at end of file
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision )
+++ .idea/.name	(revision )
@@ -0,0 +1,1 @@
+website
\ No newline at end of file
Index: templates/pybb/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/pybb/base.html	(revision )
+++ templates/pybb/base.html	(revision )
@@ -0,0 +1,51 @@
+{% extends "site_base.html" %}
+{% load static %}
+
+{% block style_base %}
+{{ block.super }}
+
+{% block extra_style %}
+
+{% endblock %}
+{% endblock %}
+
+{% block extra_script %}
+<script type="text/javascript" src="{% static " pybb/js/pybbjs.js" %}"></script>
+
+<script src="{% static 'js/jquery.tablesorter.pager.js' %}"></script>
+
+<script>
+$(document).ready(function()
+    {
+        $(".tablesorter").tablesorter();
+
+    }
+);
+
+
+</script>
+
+{% endblock %}
+
+
+{% load url from future %}
+
+{% load i18n pybb_tags %}
+
+{%block title %}{{ PYBB_DEFAULT_TITLE }}{% endblock title %}
+
+{% block extra_head %}
+{{ block.super }}
+<!-- Feeds -->
+<link rel="alternate" type="application/atom+xml" href="{% url 'pybb:feed_posts' %}" title="{% trans " Latest posts on
+      forum" %}" >
+<link rel="alternate" type="application/atom+xml" href="{% url 'pybb:feed_topics' %}" title="{% trans " Latest topics on
+      forum" %}" >
+{% endblock %}
+
+{% block breadcrumb %}
+{% include "pybb/breadcrumb.html" %}
+
+{% endblock %}
+
+{% block content %}{% endblock content %}
Index: cube/base.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cube/base.py	(revision )
+++ cube/base.py	(revision )
@@ -0,0 +1,341 @@
+# -*- coding: utf-8 -*-
+#'django-cube'
+#Copyright (C) 2010 Sébastien Piquemal @ futurice
+#contact : sebastien.piquemal@futurice.com
+#futurice's website : www.futurice.com
+
+#This program is free software: you can redistribute it and/or modify
+#it under the terms of the GNU General Public License as published by
+#the Free Software Foundation, either version 3 of the License, or
+#(at your option) any later version.
+
+#This program is distributed in the hope that it will be useful,
+#but WITHOUT ANY WARRANTY; without even the implied warranty of
+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#GNU General Public License for more details.
+
+#You should have received a copy of the GNU General Public License
+#along with this program.  If not, see <http://www.gnu.org/licenses/>.
+"""
+"""
+import copy
+
+
+class BaseDimension(object):
+    """
+    The base class for a dimension of a cube.
+
+    Kwargs:
+        sample_space (iterable|callable): The sample space of the dimension to create.
+    """
+
+    def __init__(self, sample_space=[]):
+        """
+        """
+        self._name = ""
+        self.sample_space = sample_space
+        self._constraint = None
+
+    @property
+    def name(self):
+        """
+        Returns:
+            str. The name of the dimension.
+        """
+        return self._name
+
+    @property
+    def constraint(self):
+        """
+        Returns:
+            object. The value to which the dimension is constrained
+        """
+        return self._constraint
+
+    @constraint.setter
+    def constraint(self, value):
+        """
+        Setter for the property :meth:`constraint`.
+
+        Args:
+            value (object): The value to set the dimension's constraint to.
+        """
+        self._constraint = value
+
+    @property
+    def pretty_constraint(self):
+        """
+        Returns:
+            str. A pretty string representation of the constraint's value 
+        """
+        return self.constraint
+
+    def get_sample_space(self, sort=False):
+        """
+        Kwargs:
+            sort (bool): whether to sort or not the sample space returned
+
+        Returns:
+            list. The sample space for the calling dimension. If the dimension is constrained, the sample space is only the constraint value.
+        """
+        sample_space = [self.constraint] or self.sample_space
+        if sort:
+            return self._sort_sample_space(sample_space)
+        else:
+            return sample_space
+
+    def _sort_sample_space(self, sample_space):
+        """
+        Args:
+            sample_space (iterable). The sample space to sort, can be any iterable.
+
+        Returns:
+            list. The sample space sorted.
+        """
+        return sorted(list(sample_space))
+
+
+class BaseCubeOptions(object):
+    """
+    'Container' object for meta informations on a cube class. 
+    """
+
+    def __init__(self, options):
+        self.dimensions = None
+
+
+class BaseCubeMetaclass(type):
+    """
+    Metaclass for :class:`BaseCube`.
+    """
+
+    def __new__(cls, name, bases, attrs):
+        #We gather in *dimensions* all the dimensions found in *attrs*
+        dimensions = {}
+        attrs_copy = copy.copy(attrs)
+        for attr_name, attr_value in attrs_copy.iteritems():
+            if isinstance(attr_value, BaseDimension):
+                dimensions[attr_name] = attr_value
+                attr_value._name = attr_name
+                #we don't want the dimension to be directly an attribute of the new class
+                del attrs[attr_name]
+
+        new_class = super(BaseCubeMetaclass, cls).__new__(cls, name, bases, attrs)
+        #meta informations on a cube class
+        meta = getattr(new_class, 'Meta', None)
+        if meta:
+            del new_class.Meta
+        new_class._meta = BaseCubeOptions(meta)
+
+        #We take the first base class that is a subclass of *BaseCube*.
+        if name == 'BaseCube':
+            parent_cube_class = None
+        else:
+            parent_cube_class = filter(lambda base: issubclass(base, BaseCube), bases)[0]
+            #If there is one, we force inheritage of some attributes from the *parent_cube_class*
+        parent_dimensions = copy.deepcopy(parent_cube_class._meta.dimensions) \
+            if parent_cube_class else {}
+        parent_dimensions.update(dimensions)
+        dimensions = parent_dimensions
+        new_class._meta.dimensions = dimensions
+
+        return new_class
+
+
+class BaseCube(object):
+    """
+    The base class for a cube.
+    
+    .. todo:: clarify get_sample_space and sorting
+    """
+
+    __metaclass__ = BaseCubeMetaclass
+
+    def __new__(cls, *args, **kwargs):
+        """
+        Provides the instance with local copies of the dimensions declared at the class level.
+        """
+        new_cube = super(BaseCube, cls).__new__(cls)
+
+        #overrides the dimensions from the class with local copies
+        new_cube.dimensions = copy.deepcopy(cls._meta.dimensions)
+
+        return new_cube
+
+    @staticmethod
+    def sort_key(coordinates):
+        """
+        This method can be overriden for custom sorting of the cube's sample space. This will result in a custom order, when using every method that iterates on a cube for measures or subcubes.
+
+        Args:
+            coordinates (dict). The coordinates to generate a sorting key from. The format of *coordinates* is *{'dim_name1': val1', 'dim_name2': val2, ...}*.
+
+        Returns:
+            object. A key generated to sort the sample space of the cube.
+        """
+        raise NotImplementedError
+
+    def subcubes(self, *dim_names):
+        """
+        Returns:
+            iterator. A sorted iterator on all the sucubes with dimensions in *dim_names* constrained. It is sorted according to :meth:`sort_key`.For example :
+
+            >>> class MyCube(Cube):
+            ...     name = Dimension(sample_space=['John', 'Jack'])
+            ...     instrument = Dimension(sample_space=['Trumpet'])
+            ...     age = Dimension(sample_space=[14, 89])
+            ...
+            ...     @staticmethod
+            ...     def sort_key(coordinates):
+            ...         return ''\\
+            ...             + str(coordinates.get('name', ''))\\
+            ...             + str(coordinates.get('instrument', ''))\\
+            ...             + str(coordinates.get('age', ''))
+
+            >>> list(MyCube().subcubes('name', 'instrument'))
+            [Cube(age, instrument='Trumpet', name='Jack'), Cube(age, instrument='Trumpet', name='John')]
+
+        .. note:: If one of the dimensions whose name passed as parameter is already constrained in the calling cube, it is not considered as an error.
+        """
+        dim_names = list(dim_names)
+        #sublist of *dim_names*, with only dimensions that are not yet constrained
+        free_dim_names = []
+        free_dim_name = self._pop_first_dim(dim_names, free_only=True)
+        while (free_dim_name):
+            free_dim_names.append(free_dim_name)
+            free_dim_name = self._pop_first_dim(dim_names, free_only=True)
+
+        #if no free dimension, the cube is completely constrained, no need to get further
+        if not free_dim_names:
+            yield copy.deepcopy(self)
+            raise StopIteration
+
+        #else, we get and sort the cube's sample space
+        sample_space = self.get_sample_space(*free_dim_names)
+        try:
+            sample_space = sorted(sample_space, key=self.sort_key)
+        except NotImplementedError:
+            pass
+
+        #and yield the subcubes
+        for value in sample_space:
+            yield self.constrain(**value)
+        raise StopIteration
+
+    def constrain(self, **extra_constraint):
+        """
+        Updates the calling cube's *constraint* with *extra_constraint*. Example :
+
+            >>> cube = MyCube(queryset)
+            >>> subcube = cube.constrain(dimensionA=2)
+            >>> cube ; subcube
+            MyCube(dimensionA)
+            MyCube(dimensionA=2)
+
+        Returns:
+            Cube. A copy of the calling cube, with the updated constraint.
+        """
+        cube_copy = copy.deepcopy(self)
+        dimensions = cube_copy.dimensions
+
+        for dim_name, value in extra_constraint.iteritems():
+            try:
+                dimensions[dim_name].constraint = value
+            except KeyError:
+                raise ValueError("invalid dimension %s" % dim_name)
+
+        return cube_copy
+
+    def measure(self, **coordinates):
+        """
+        Returns:
+            object. The measure on the cube at *coordinates*. For example :
+            
+                >>> cube.measure(dim1=val1, dim2=val2, dimN=valN)
+                12.98
+
+            If *coordinates* is empty, the measure returned is calculated on the whole cube. 
+        """
+        raise NotImplementedError
+
+    def get_sample_space(self, *dim_names, **kwargs):
+        """
+        Returns:
+            list. The sample space for the cube for the dimensions *dim_names*.
+        
+        Kwargs:
+            format (str). The format of the sample space returned :
+                - 'dict': [{'dim1': val11, ..., 'dimN': val1N}, ..., {'dim1': valN1, ..., 'dimN': valNN}]
+                - 'tuple': [(val11, ... val1N), ..., (valN1, ..., valNN)] ; the values in the tuples map to dimensions names in *dim_names*.
+                - 'flat': [val1, ..., valN] ; only available if there is ONE dimension name passed as a parameter
+        """
+        format = kwargs.get('format', 'dict')
+        if format == 'flat' and len(dim_names) > 1:
+            raise ValueError('format="flat" is valid if there is only one dimension name passed to the function')
+
+        dim_names = list(dim_names)
+        #name of the first dimension in the list
+        dim_name = self._pop_first_dim(dim_names)
+        #cube's sample space : [{dim1: val11, dim2: val21, ...}, ...,  {...}]
+        sample_space = []
+
+        #We fill in cube's sample space, by finding all the combination
+        #possible of all dimensions' sample spaces.
+        while dim_name:
+            new_sample_space = []
+            if sample_space:
+                for old_value in sample_space:
+                    for extra_value in self.dimensions[dim_name].get_sample_space():
+                        if format == 'dict':
+                            new_value = dict(old_value)
+                            new_value.update({dim_name: extra_value})
+                            new_sample_space.append(new_value)
+                        elif format == 'tuple':
+                            new_sample_space.append(old_value + (extra_value,))
+                sample_space = new_sample_space
+            else:
+                if format == 'dict':
+                    sample_space = [{dim_name: value} for value in self.dimensions[dim_name].get_sample_space()]
+                elif format == 'tuple':
+                    sample_space = [(value,) for value in self.dimensions[dim_name].get_sample_space()]
+                elif format == 'flat':
+                    sample_space = list(self.dimensions[dim_name].get_sample_space())
+            dim_name = self._pop_first_dim(dim_names)
+        return sample_space
+
+    @property
+    def constraint(self):
+        """
+        Returns:
+            dict. A dictionnary of pairs *(dimension_name, constraint_value)*. Dimensions that are not constrained do not appear in this dictionnary.
+        """
+        constraint_dict = {}
+        for dimension in self.dimensions.values():
+            if dimension.constraint:
+                constraint_dict[dimension.name] = dimension.constraint
+        return constraint_dict
+
+    def _pop_first_dim(self, dim_names, free_only=False):
+        """
+        Pops the first dimension name from *dim_names*.
+
+        Kwargs:
+            free_only (bool): if True, only the dimensions that are not constrained will be poped.
+
+        Returns:
+            str|None. The poped dimension name, or None if there is no dimension name to pop.
+        """
+        for index, dim_name in enumerate(dim_names):
+            if dim_name not in self.dimensions:
+                raise ValueError("invalid dimension %s" % dim_name)
+                #if dimension is constrained we don't need to iterate for it.
+            if free_only and dim_name in self.constraint:
+                continue
+            else:
+                return dim_names.pop(index)
+        return None
+
+    def __repr__(self):
+        constr_dimensions = sorted(["%s=%s" % (dim, value) for dim, value in self.constraint.iteritems()])
+        free_dimensions = sorted(list(set(self.dimensions) - set(self.constraint)))
+        return 'Cube(%s)' % ", ".join(free_dimensions + constr_dimensions)
Index: contents/templatetags/menu.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/templatetags/menu.py	(revision )
+++ contents/templatetags/menu.py	(revision )
@@ -0,0 +1,21 @@
+from django import template
+from django.template import Node
+from contents.models import Content
+
+register = template.Library()
+
+
+def build_menu_list(parser, token):
+    """
+    {% get_menu_list %}
+    """
+    return MenuObject()
+
+
+class MenuObject(Node):
+    def render(self, context):
+        context['site_menu'] = Content.objects.all().filter(is_menu=True)
+        return ''
+
+
+register.tag('get_menu_list', build_menu_list)
\ No newline at end of file
Index: contents/static/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/style.css	(revision )
+++ contents/static/style.css	(revision )
@@ -0,0 +1,1315 @@
+/* ===========================================================
+   Reset
+   =========================================================*/
+
+a, abbr, acronym, address, applet, article, aside, audio,
+b, big, blockquote, body,
+canvas, caption, center, cite, code,
+dd, del, details, dfn, dialog, div, dl, dt,
+em, embed,
+fieldset, figcaption, figure, font, footer, form,
+h1, h2, h3, h4, h5, h6, header, hgroup, hr, html,
+i, iframe, img, ins,
+kbd,
+label, legend, li,
+mark, menu, meter,
+nav,
+object, ol, output,
+p, pre, progress,
+q,
+rp, rt, ruby,
+s, samp, section, small, span, strike, strong, sub, summary, sup,
+table, tbody, td, tfoot, th, thead, time, tr, tt,
+u, ul,
+var, video,
+xmp {
+    border: 0;
+    margin: 0;
+    padding: 0;
+    font-size: 100%;
+}
+
+article, aside,
+details,
+figcaption, figure, footer,
+header, hgroup,
+menu,
+nav,
+section {
+    display: block;
+}
+
+b, strong {
+    font-weight: bold;
+}
+img {
+    color: transparent;
+    font-size: 0;
+    vertical-align: middle;
+    -ms-interpolation-mode: bicubic;
+}
+ol, ul {
+    list-style: none;
+}
+li {
+    display: list-item;
+}
+table {
+    border-collapse: collapse;
+    border-spacing: 0;
+}
+th, td, caption {
+    font-weight: normal;
+    vertical-align: top;
+    text-align: left;
+}
+q {
+    quotes: none;
+}
+q:before, q:after {
+    content: '';
+    content: none;
+}
+sub, sup, small {
+    font-size: 75%;
+}
+sub, sup {
+    line-height: 0;
+    position: relative;
+    vertical-align: baseline;
+}
+sub {
+    bottom: -0.25em;
+}
+sup {
+    top: -0.5em;
+}
+svg {
+    overflow: hidden;
+}
+
+
+/* ===========================================================
+   Classes
+   =========================================================*/
+
+/* position */
+.rel {
+    position: relative;
+}
+.abs {
+    position: absolute;
+}
+.fixed {
+    position: fixed;
+}
+
+/* text-align */
+.tl {
+    text-align: left;
+}
+.tc {
+    text-align: center;
+}
+.tr {
+    text-align: right;
+}
+
+/* float */
+.fl, .alignleft {
+    float: left;
+}
+.fr, .alignright {
+    float: right;
+}
+.aligncenter {
+    clear: both;
+    display: block;
+    margin: 0 auto;
+}
+
+.spacebottom
+{
+    margin-bottom:20px;
+    clear:both;
+
+}
+/* clear float */
+.clear,
+.clearfix:after {
+    clear: both;
+}
+.clear,
+.clearfix:before,
+.clearfix:after {
+    display: block;
+    overflow: hidden;
+    visibility: hidden;
+    width: 0; height: 0;
+}
+.clearfix:before,
+.clearfix:after {
+    content: '\0020';
+}
+.lt-ie8 .clearfix {
+    zoom: 1;
+}
+
+/* image replace */
+.ir {
+    display: block;
+    overflow: hidden;
+    text-align: left;
+    text-indent: -9999px;
+}
+
+.bx-viewport{
+    width:98%!important;
+    margin-left:10px;
+
+}
+
+.divided
+{
+    height: 2px;
+    background-color: rgb(9, 146, 4);
+
+}
+
+/* ===========================================================
+   Typography
+   =========================================================*/
+
+html, body {
+    height: 100%;
+}
+html {
+    -webkit-text-size-adjust: none;
+}
+body {
+    background-color:#D6D6D6;
+    font: 12px/1.5 'Roboto', sans-serif;
+    color: #000;
+}
+button, input, textarea, select {
+    margin: 0;
+    padding: 0;
+    font-family: 'Roboto', sans-serif;
+}
+img {
+    vertical-align: top;
+    max-width: 100%;
+}
+a {
+    color: green;
+    text-decoration: none;
+}
+
+
+/* ===========================================================
+   wrapper
+   =========================================================*/
+
+.wrapper {
+    background-color:white;
+    margin: 0 auto;
+    width: 1024px;
+}
+
+#contentWrapper
+{
+
+
+}
+/* ===========================================================
+   header
+   =========================================================*/
+header
+{
+    background-color:#000;
+
+}
+.header .container {
+}
+
+/* logo */
+.logo {
+    float: left;
+    padding-bottom: 7px;
+    height: 77px;
+}
+
+.logo img{
+    height:85px;
+
+}
+
+#logostyle{
+
+    opacity:0.5;
+}
+/* call */
+.call {
+    float: right;
+    margin: 24px 0 0;
+    font-size: 38px;
+    line-height: 1;
+    color: #fff;
+}
+
+#useraccount
+{
+    text-align:right;
+    margin-right:15px;
+
+}
+
+#useraccount span
+{
+    color: white;
+    line-height: 30px;
+    margin-right:5px;
+
+}
+
+/* banner */
+.banner {
+    position: relative;
+    height: 216px;
+}
+.banner span {
+    display: block;
+    font-weight: bold;
+    font-size: 39px;
+    line-height: 1;
+}
+.banner .r1 {
+    padding: 62px 0 0 20px;
+    color: #1b1b1b;
+}
+.banner .r2 {
+    padding: 12px 0 0 169px;
+    color: #2b7ea0;
+}
+.banner img {
+    position: absolute;
+    bottom: 1px;
+    right: 13px;
+}
+
+/* top-cta */
+.top-cta {
+    padding: 18px 0;
+}
+.top-cta span,
+.top-cta .field,
+.top-cta .button {
+    float: left;
+}
+.top-cta span {
+    width: 275px;
+    font-size: 30px;
+    line-height: 32px;
+    color: #ffcf00;
+}
+.top-cta .field {
+    margin-right: 16px;
+    width: 202px;
+}
+.top-cta .custom-input {
+    position: relative;
+    height: 32px;
+}
+.top-cta .placeholder {
+    font-size: 14px;
+    line-height: 18px;
+    color: #1b1b1b;
+}
+.top-cta .custom-input label {
+    position: absolute;
+    top: 7px;
+    left: 12px;
+    cursor: text;
+}
+.top-cta .custom-input input {
+    float: left;
+    padding: 7px 12px;
+    width: 178px;
+    height: 18px;
+    background: #fff;
+    border: 0;
+}
+.top-cta .button {
+    margin: 0 0 -1px 5px;
+}
+.top-cta .button input {
+    float: left;
+}
+
+/* ===========================================================
+   post
+   =========================================================*/
+.post {
+padding: 15px 0;
+border-bottom: 1px solid #e8e8e8;
+}
+
+
+.page_title a
+{color: #3f8fba;
+font-size: 32px;
+font-weight: normal;
+font-family: 'basic_sans_light_sfregular';
+line-height: 36px;
+padding: 0 0 13px 0;
+}
+
+a.more_btn {
+	display: inline-block;
+	color: #b8b8b8;
+	font-size: 11px;
+	font-style: normal;
+    font-family: 'droid_sansregular';
+	line-height: 18px;
+	text-transform: uppercase;
+	text-shadow: 0px 1px 0px rgba(0, 0, 0, 1);
+	padding: 5px 14px;
+	margin: 0 4px;
+	background: url(images/col_more.jpg) repeat-x 50% 0;
+	position: relative;
+}
+.more_btn:before {
+	display: block;
+	content: '';
+	width: 4px;
+	height: 28px;
+	background: url(images/col_more_l.png) no-repeat 50% 50%;
+	position: absolute;
+	top: 0;
+	left: -4px;
+}
+.more_btn:after {
+	display: block;
+	content: '';
+	width: 4px;
+	height: 28px;
+	background: url(images/col_more_r.png) no-repeat 50% 50%;
+	position: absolute;
+	top: 0;
+	right: -4px;
+}
+a.more_btn:hover {
+	color: #fff;
+}
+
+.meta {
+padding: 10px 0 15px;
+color: #777;
+font-size: 15px;
+line-height: 22px;
+}
+
+p {
+padding: 0 0 18px;
+}
+
+.comment {
+margin-top:10px;
+padding: 5px 10px;
+}
+/* ===========================================================
+   footer
+   =========================================================*/
+
+.footer {
+    margin-top: 30px;
+
+    padding: 15px 15px;
+    background-color:black;
+    line-height: 13px;
+    color: white;
+}
+.footer a {
+    color: green;
+}
+.footer a:hover {
+    text-decoration: underline;
+}
+
+
+/* ===========================================================
+   main
+   =========================================================*/
+
+.main {
+
+    font-size: 13px;
+    line-height: 23px;
+}
+.main h1 {
+
+    font-size: 33px;
+    color: #515155;
+    margin-bottom:20px;
+}
+.main h2 {
+    margin-top: 28px;
+    font-size: 20px;
+    line-height: 21px;
+    color: green;
+}
+
+.main h3 {
+    margin-top: 28px;
+    font-size: 16px;
+    line-height: 21px;
+    color: green;
+}
+.main h1 + h2 {
+    margin-top: 17px;
+    font-style: italic;
+}
+
+.lt-ie9 .main h1,
+.lt-ie9 .main h2 {
+    letter-spacing: -1px;
+}
+
+.main-left {
+    float: left;
+    margin-top: 10px;
+    width: 668px;
+    margin-left: 20px;
+}
+.main-right {
+    float: right;
+    margin-top: 25px;
+    margin-right: 10px;
+    width: 200px;
+}
+
+.box {
+    margin-top: 41px;
+    margin-bottom: 49px;
+    height: 165px;
+    background: #f7f7f7;
+}
+.box .left {
+    float: left;
+    margin: -1px 0;
+    width: 411px;
+    height: 169px;
+    background: url(img/box-bg.png) no-repeat;
+    font-weight: bold;
+    font-size: 25px;
+    line-height: 35px;
+    color: #1b1b1b;
+}
+.box .left p {
+    margin: 0;
+    padding: 15px 0 0 62px;
+}
+.box .right {
+    float: right;
+    width: 574px;
+    font-size: 15px;
+}
+.box .right p {
+    margin: 0;
+    padding: 36px 0 0;
+}
+
+.list {
+    margin-top: 31px;
+    margin-bottom: 31px;
+}
+.list li {
+    position: relative;
+    margin-top: 20px;
+    padding-left: 130px;
+    height: 37px;
+    background: #f7f7f7;
+    font-size: 22px;
+    line-height: 37px;
+}
+.list li:first-child {
+    margin-top: 0;
+}
+.list img {
+    position: absolute;
+    top: -11px;
+    left: 38px;
+}
+
+.enquire-now {
+    padding: 20px 23px 23px 20px;
+    width: 267px;
+    background: #005296;
+}
+.enquire-now h3 {
+    padding-bottom: 7px;
+    margin: 0 -10px;
+    text-align: center;
+    font-weight: normal;
+    font-size: 48px;
+    line-height: 1;
+    color: #fff;
+}
+.enquire-now .field {
+    margin-top: 14px;
+}
+.enquire-now .custom-input {
+    position: relative;
+}
+.enquire-now .placeholder {
+    font-size: 14px;
+    line-height: 18px;
+    color: #6b6a6a;
+}
+.enquire-now .custom-input label {
+    position: absolute;
+    top: 5px;
+    left: 6px;
+    cursor: text;
+}
+.enquire-now .custom-input input,
+.enquire-now .custom-input textarea {
+    float: left;
+    padding: 5px 6px;
+    width: 255px;
+    height: 18px;
+    background: #fff;
+    border: 0;
+}
+.enquire-now .custom-input textarea {
+    height: 74px;
+    overflow: auto;
+    resize: none;
+}
+.enquire-now .submit {
+    float: left;
+    margin-top: 19px;
+}
+.enquire-now img {
+    float: right;
+    margin-top: 20px;
+}
+
+/* privacy-policy */
+.privacy-policy {
+    padding: 20px;
+    background: #fff;
+    font-size: 14px;
+    line-height: 21px;
+    font-family: 'Droid Sans', sans-serif;
+    color: #000;
+}
+.privacy-policy h1 {
+    font-size: 30px;
+    line-height: 1;
+}
+.privacy-policy h2 {
+    margin-top: 21px;
+    font-size: 18px;
+    color: #9d9d9d;
+}
+.privacy-policy p {
+    margin-top: 21px;
+}
+.privacy-policy a {
+    color: #000;
+}
+
+
+/*! fancyBox v2.1.4 fancyapps.com | fancyapps.com/fancybox/#license */
+.fancybox-wrap,
+.fancybox-skin,
+.fancybox-outer,
+.fancybox-inner,
+.fancybox-image,
+.fancybox-wrap iframe,
+.fancybox-wrap object,
+.fancybox-nav,
+.fancybox-nav span,
+.fancybox-tmp
+{
+    padding: 0;
+    margin: 0;
+    border: 0;
+    outline: none;
+    vertical-align: top;
+}
+
+.fancybox-wrap {
+    position: absolute;
+    top: 0;
+    left: 0;
+    z-index: 8020;
+}
+
+.fancybox-skin {
+    position: relative;
+    background: #f9f9f9;
+    color: #444;
+    text-shadow: none;
+    -webkit-border-radius: 4px;
+       -moz-border-radius: 4px;
+            border-radius: 4px;
+}
+
+.fancybox-opened {
+    z-index: 8030;
+}
+
+.fancybox-opened .fancybox-skin {
+    -webkit-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
+       -moz-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
+            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
+}
+
+.fancybox-outer, .fancybox-inner {
+    position: relative;
+}
+
+.fancybox-inner {
+    overflow: hidden;
+}
+
+.fancybox-type-iframe .fancybox-inner {
+    -webkit-overflow-scrolling: touch;
+}
+
+.fancybox-error {
+    color: #444;
+    font: 14px/20px "Helvetica Neue",Helvetica,Arial,sans-serif;
+    margin: 0;
+    padding: 15px;
+    white-space: nowrap;
+}
+
+.fancybox-image, .fancybox-iframe {
+    display: block;
+    width: 100%;
+    height: 100%;
+}
+
+.fancybox-image {
+    max-width: 100%;
+    max-height: 100%;
+}
+
+#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {
+    background-image: url('img/fancybox_sprite.png');
+}
+
+#fancybox-loading {
+    position: fixed;
+    top: 50%;
+    left: 50%;
+    margin-top: -22px;
+    margin-left: -22px;
+    background-position: 0 -108px;
+    opacity: 0.8;
+    cursor: pointer;
+    z-index: 8060;
+}
+
+#fancybox-loading div {
+    width: 44px;
+    height: 44px;
+    background: url('img/fancybox_loading.gif') center center no-repeat;
+}
+
+.fancybox-close {
+    position: absolute;
+    top: -18px;
+    right: -18px;
+    width: 36px;
+    height: 36px;
+    cursor: pointer;
+    z-index: 8040;
+}
+
+.fancybox-nav {
+    position: absolute;
+    top: 0;
+    width: 40%;
+    height: 100%;
+    cursor: pointer;
+    text-decoration: none;
+    background: transparent url('img/blank.gif'); /* helps IE */
+    -webkit-tap-highlight-color: rgba(0,0,0,0);
+    z-index: 8040;
+}
+
+.fancybox-prev {
+    left: 0;
+}
+
+.fancybox-next {
+    right: 0;
+}
+
+.fancybox-nav span {
+    position: absolute;
+    top: 50%;
+    width: 36px;
+    height: 34px;
+    margin-top: -18px;
+    cursor: pointer;
+    z-index: 8040;
+    visibility: hidden;
+}
+
+.fancybox-prev span {
+    left: 10px;
+    background-position: 0 -36px;
+}
+
+.fancybox-next span {
+    right: 10px;
+    background-position: 0 -72px;
+}
+
+.fancybox-nav:hover span {
+    visibility: visible;
+}
+
+.fancybox-tmp {
+    position: absolute;
+    top: -99999px;
+    left: -99999px;
+    visibility: hidden;
+    max-width: 99999px;
+    max-height: 99999px;
+    overflow: visible !important;
+}
+
+/* Overlay helper */
+
+.fancybox-lock {
+    overflow: hidden;
+}
+
+.fancybox-overlay {
+    position: absolute;
+    top: 0;
+    left: 0;
+    overflow: hidden;
+    display: none;
+    z-index: 8010;
+    background: url('img/fancybox_overlay.png');
+}
+
+.fancybox-overlay-fixed {
+    position: fixed;
+    bottom: 0;
+    right: 0;
+}
+
+.fancybox-lock .fancybox-overlay {
+    overflow: auto;
+    overflow-y: scroll;
+}
+
+/* Title helper */
+
+.fancybox-title {
+    visibility: hidden;
+    font: normal 13px/20px "Helvetica Neue",Helvetica,Arial,sans-serif;
+    position: relative;
+    text-shadow: none;
+    z-index: 8050;
+}
+
+.fancybox-opened .fancybox-title {
+    visibility: visible;
+}
+
+.fancybox-title-float-wrap {
+    position: absolute;
+    bottom: 0;
+    right: 50%;
+    margin-bottom: -35px;
+    z-index: 8050;
+    text-align: center;
+}
+
+.fancybox-title-float-wrap .child {
+    display: inline-block;
+    margin-right: -100%;
+    padding: 2px 20px;
+    background: transparent; /* Fallback for web browsers that doesn't support RGBa */
+    background: rgba(0, 0, 0, 0.8);
+    -webkit-border-radius: 15px;
+       -moz-border-radius: 15px;
+            border-radius: 15px;
+    text-shadow: 0 1px 2px #222;
+    color: #FFF;
+    font-weight: bold;
+    line-height: 24px;
+    white-space: nowrap;
+}
+
+.fancybox-title-outside-wrap {
+    position: relative;
+    margin-top: 10px;
+    color: #fff;
+}
+
+.fancybox-title-inside-wrap {
+    padding-top: 10px;
+}
+
+.fancybox-title-over-wrap {
+    position: absolute;
+    bottom: 0;
+    left: 0;
+    color: #fff;
+    padding: 10px;
+    background: #000;
+    background: rgba(0, 0, 0, .8);
+}
+
+/* custom fancybox */
+.fb-popup .fancybox-skin,
+.fb-popup.fancybox-opened .fancybox-skin {
+    background: none;
+    color: #fff;
+    -webkit-border-radius: 0;
+       -moz-border-radius: 0;
+            border-radius: 0;
+    -webkit-box-shadow: none;
+       -moz-box-shadow: none;
+            box-shadow: none;
+}
+
+.fb-popup .fancybox-error {
+    color: #fff;
+}
+
+.fb-popup .fancybox-close {
+    top: -31px;
+    right: 0;
+    width: 29px;
+    height: 31px;
+    background: url(img/close.png) no-repeat;
+}
+
+.button {
+	-moz-box-shadow:inset 0px 1px 0px 0px #caefab;
+	-webkit-box-shadow:inset 0px 1px 0px 0px #caefab;
+	box-shadow:inset 0px 1px 0px 0px #caefab;
+	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #77d42a), color-stop(1, #337001) );
+	background:-moz-linear-gradient( center top, #77d42a 5%, #337001 100% );
+	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#77d42a', endColorstr='#337001');
+	background-color:#77d42a;
+	-webkit-border-top-left-radius:20px;
+	-moz-border-radius-topleft:20px;
+	border-top-left-radius:20px;
+	-webkit-border-top-right-radius:20px;
+	-moz-border-radius-topright:20px;
+	border-top-right-radius:20px;
+	-webkit-border-bottom-right-radius:20px;
+	-moz-border-radius-bottomright:20px;
+	border-bottom-right-radius:20px;
+	-webkit-border-bottom-left-radius:20px;
+	-moz-border-radius-bottomleft:20px;
+	border-bottom-left-radius:20px;
+	text-indent:-2.62px;
+	border:1px solid #268a16;
+	display:inline-block;
+	color:#306108;
+	font-family:Arial;
+	font-size:20px;
+	font-weight:bold;
+	font-style:normal;
+	height:65px;
+	line-height:65px;
+	width:200px;
+	text-decoration:none;
+	text-align:center;
+	text-shadow:1px 1px 0px #aade7c;
+}
+.button:hover {
+	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #337001), color-stop(1, #77d42a) );
+	background:-moz-linear-gradient( center top, #337001 5%, #77d42a 100% );
+	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#337001', endColorstr='#77d42a');
+	background-color:#337001;
+}.button:active {
+	position:relative;
+	top:1px;
+}
+/* This button was generated using CSSButtonGenerator.com */
+
+
+
+/** the form elements **/
+
+.errorlist{
+    color:red;
+
+}
+#hongkiat-form { box-sizing: border-box; margin-top:30px; }
+
+#hongkiat-form .txtinput {
+display: block;
+font-family: "Helvetica Neue", Arial, sans-serif;
+border-style: solid;
+border-width: 1px;
+border-color: #dedede;
+margin-bottom: 20px;
+font-size: 1.55em;
+padding: 11px 25px;
+padding-left: 55px;
+width: 90%;
+color: #777;
+box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
+-moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
+-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
+transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+-webkit-transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+-moz-transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+-o-transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+}
+#hongkiat-form .helptext
+{
+    margin-top:-20px;
+
+}
+#hongkiat-form .txtinput:focus {
+color: #333;
+border-color: rgba(41, 92, 161, 0.4);
+box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset, 0 0 8px rgba(41, 92, 161, 0.6);
+-moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset, 0 0 8px rgba(41, 92, 161, 0.6);
+-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset, 0 0 8px rgba(41, 92, 161, 0.6);
+outline: 0 none;
+}
+
+#hongkiat-form input#id_name, #hongkiat-form input#id_login {
+background: #fff url('images/user.png') 5px 4px no-repeat;
+}
+#hongkiat-form input#id_sender {
+background: #fff url('images/email.png') 5px 4px no-repeat;
+}
+#hongkiat-form input#id_subject {
+background: #fff url('images/website.png') 5px 4px no-repeat;
+}
+#hongkiat-form input#telephone {
+background: #fff url('images/phone.png') 5px 4px no-repeat;
+}
+
+#hongkiat-form textarea {
+display: block;
+font-family: "Helvetica Neue", Arial, sans-serif;
+border-style: solid;
+border-width: 1px;
+border-color: #dedede;
+margin-bottom: 15px;
+font-size: 1.5em;
+padding: 11px 25px;
+padding-left: 55px;
+width: 100%;
+height: 180px;
+color: #777;
+box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
+-moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
+-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
+transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+-webkit-transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+-moz-transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+-o-transition: border 0.15s linear 0s, box-shadow 0.15s linear 0s, color 0.15s linear 0s;
+}
+#hongkiat-form textarea:focus {
+color: #333;
+border-color: rgba(41, 92, 161, 0.4);
+box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset, 0 0 8px rgba(40, 90, 160, 0.6);
+-moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset, 0 0 8px rgba(40, 90, 160, 0.6);
+-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset, 0 0 8px rgba(40, 90, 160, 0.6);
+outline: 0 none;
+}
+#hongkiat-form textarea.txtblock {
+background: #fff url('images/speech.png') 5px 4px no-repeat;
+}
+
+#hongkiat-form #slider { width: 60%; }
+
+#hongkiat-form #aligned {
+box-sizing: border-box;
+float: left;
+width: 450px;
+margin-right: 50px;
+}
+#hongkiat-form #aside {
+	float: left;
+	width: 250px;
+	padding: 0;
+	box-sizing: border-box;
+}
+
+#wrapping { width: 100%; box-sizing: border-box; }
+
+span.radiobadge { display: block; margin-bottom: 8px; }
+span.radiobadge label { font-size: 1.2em; padding-bottom: 4px; }
+
+#hongkiat-form select {
+font-size: 17px;
+color: #676767;
+padding: 9px !important;
+border: 1px solid #aaa;
+width: 200px;
+}
+
+.hide{
+    display:none;
+
+}
+/** custom buttons **/
+
+#buttons { display: block; padding-top: 10px; }
+#buttons #resetbtn {
+display: block;
+float: left;
+color: #515151;
+text-shadow: -1px 1px 0px #fff;
+margin-right: 20px;
+height: 3em;
+padding: 0 1em;
+outline: 0;
+font-weight: bold;
+font-size: 1.3em;
+white-space: nowrap;
+word-wrap: normal;
+vertical-align: middle;
+cursor: pointer;
+-moz-border-radius: 2px;
+-webkit-border-radius: 2px;
+border-radius: 2px;
+background-color: #fff;
+background-image: -moz-linear-gradient(top,  rgb(255,255,255) 2%, rgb(240,240,240) 2%, rgb(222,222,222) 100%);
+background-image: -webkit-gradient(linear, left top, left bottom, color-stop(2%,rgb(255,255,255)), color-stop(2%,rgb(240,240,240)), color-stop(100%,rgb(222,222,222)));
+background-image: -webkit-linear-gradient(top,  rgb(255,255,255) 2%,rgb(240,240,240) 2%,rgb(222,222,222) 100%);
+background-image: -o-linear-gradient(top,  rgb(255,255,255) 2%,rgb(240,240,240) 2%,rgb(222,222,222) 100%);    background-image: -ms-linear-gradient(top,  rgb(255,255,255) 2%,rgb(240,240,240) 2%,rgb(222,222,222) 100%);
+background-image: linear-gradient(top,  rgb(255,255,255) 2%,rgb(240,240,240) 2%,rgb(222,222,222) 100%);
+filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#dedede',GradientType=0 );
+border: 1px solid #969696;
+box-shadow: 0 1px 2px rgba(144, 144, 144, 0.4);
+-moz-box-shadow: 0 1px 2px rgba(144, 144, 144, 0.4);
+-webkit-box-shadow: 0 1px 2px rgba(144, 144, 144, 0.4);
+text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
+}
+
+#buttons #resetbtn:hover {
+text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
+color: #818181;
+background-color: #fff;
+background-image: -moz-linear-gradient(top,  rgb(255,255,255) 2%, rgb(244,244,244) 2%, rgb(229,229,229) 100%);
+background-image: -webkit-gradient(linear, left top, left bottom, color-stop(2%,rgb(255,255,255)), color-stop(2%,rgb(244,244,244)), color-stop(100%,rgb(229,229,229)));
+background-image: -webkit-linear-gradient(top,  rgb(255,255,255) 2%,rgb(244,244,244) 2%,rgb(229,229,229) 100%);background-image: -o-linear-gradient(top,  rgb(255,255,255) 2%,rgb(244,244,244) 2%,rgb(229,229,229) 100%); background-image: -ms-linear-gradient(top,  rgb(255,255,255) 2%,rgb(244,244,244) 2%,rgb(229,229,229) 100%); background-image: linear-gradient(top,  rgb(255,255,255) 2%,rgb(244,244,244) 2%,rgb(229,229,229) 100%);
+filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#e5e5e5',GradientType=0 );
+border-color: #aeaeae;
+box-shadow: inset 0 1px 0 rgba(256,256,256,0.4),0 1px 3px rgba(0,0,0,0.5);
+}
+
+#buttons #submitbtn {
+display: block;
+float: left;
+height: 3em;
+padding: 0 1em;
+border: 1px solid;
+outline: 0;
+font-weight: bold;
+font-size: 1.3em;
+color:  #fff;
+text-shadow: 0px 1px 0px #222;
+white-space: nowrap;
+word-wrap: normal;
+vertical-align: middle;
+cursor: pointer;
+-moz-border-radius: 2px;
+-webkit-border-radius: 2px;
+border-radius: 2px;
+border-color: #5e890a #5e890a #000;
+-moz-box-shadow: inset 0 1px 0 rgba(256,256,256, .35);
+-ms-box-shadow: inset 0 1px 0 rgba(256,256,256, .35);
+-webkit-box-shadow: inset 0 1px 0 rgba(256,256,256, .35);
+box-shadow: inset 0 1px 0 rgba(256,256,256, .35);
+background-color: rgb(226,238,175);
+background-image: -moz-linear-gradient(top, rgb(226,238,175) 3%, rgb(188,216,77) 3%, rgb(144,176,38) 100%);
+background-image: -webkit-gradient(linear, left top, left bottom, color-stop(3%,rgb(226,238,175)), color-stop(3%,rgb(188,216,77)), color-stop(100%,rgb(144,176,38)));
+background-image: -webkit-linear-gradient(top, rgb(226,238,175) 3%,rgb(188,216,77) 3%,rgb(144,176,38) 100%);
+background-image: -o-linear-gradient(top, rgb(226,238,175) 3%,rgb(188,216,77) 3%,rgb(144,176,38) 100%);
+background-image: -ms-linear-gradient(top, rgb(226,238,175) 3%,rgb(188,216,77) 3%,rgb(144,176,38) 100%);
+background-image: linear-gradient(top, rgb(226,238,175) 3%,rgb(188,216,77) 3%,rgb(144,176,38) 100%);
+filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e2eeaf', endColorstr='#90b026',GradientType=0 );
+}
+#buttons #submitbtn:hover, #buttons #submitbtn:active {
+border-color: #7c9826 #7c9826 #000;
+color: #fff;
+-moz-box-shadow: inset 0 1px 0 rgba(256,256,256,0.4),0 1px 3px rgba(0,0,0,0.5);
+-ms-box-shadow: inset 0 1px 0 rgba(256,256,256,0.4),0 1px 3px rgba(0,0,0,0.5);
+-webkit-box-shadow: inset 0 1px 0 rgba(256,256,256,0.4),0 1px 3px rgba(0,0,0,0.5);
+box-shadow: inset 0 1px 0 rgba(256,256,256,0.4),0 1px 3px rgba(0,0,0,0.5);
+background: rgb(228,237,189);
+background: -moz-linear-gradient(top, rgb(228,237,189) 2%, rgb(207,219,120) 3%, rgb(149,175,54) 100%);
+background: -webkit-gradient(linear, left top, left bottom, color-stop(2%,rgb(228,237,189)), color-stop(3%,rgb(207,219,120)), color-stop(100%,rgb(149,175,54)));
+background: -webkit-linear-gradient(top, rgb(228,237,189) 2%,rgb(207,219,120) 3%,rgb(149,175,54) 100%);
+background: -o-linear-gradient(top, rgb(228,237,189) 2%,rgb(207,219,120) 3%,rgb(149,175,54) 100%); background: -ms-linear-gradient(top, rgb(228,237,189) 2%,rgb(207,219,120) 3%,rgb(149,175,54) 100%); background: linear-gradient(top, rgb(228,237,189) 2%,rgb(207,219,120) 3%,rgb(149,175,54) 100%);
+filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e4edbd', endColorstr='#95af36',GradientType=0 );
+}
+
+
+ul#sliding-navigation
+{
+	list-style: none;
+	font-size: 14px;
+	margin: 30px 0;
+	background-color:#1D1D1D;
+}
+
+ul#sliding-navigation li.sliding-element h3,
+ul#sliding-navigation li.sliding-element a
+{
+	display: block;
+	width: 155px;
+	padding: 5px 15px;
+	margin: 0;
+	margin-bottom: 5px;
+}
+
+ul#sliding-navigation li.sliding-element h3
+{
+	color: #fff;
+	background: #333 url(img/heading_bg.jpg) repeat-y;
+	font-weight: normal;
+}
+
+ul#sliding-navigation li.sliding-element a
+{
+	color: #999;
+	background: #222;
+	border: 1px solid #1a1a1a;
+	text-decoration: none;
+}
+
+ul#sliding-navigation li.sliding-element a:hover { color: green; }
+
+ul#sliding-navigation li.sliding-element h3
+{
+	color: #fff;
+	background:#333 url(img/heading_bg.jpg) repeat-y;
+	font-weight: normal;
+}
+
+
+/*-------------
+SEARCH
+-------------*/
+
+#searchForm{
+float: right;
+margin-top: 10px;
+margin-right: 10px;
+}
+#searchForm fieldset {
+    width:240px;
+    position:relative;
+    display:block;
+}
+
+div.input {
+    width:120px;
+    padding:5px 15px 7px 15px;
+    border-radius:20px;
+    border:1px solid #c6d2db;
+    border-top:1px solid #b4c1cb;
+    box-shadow:inset 0 1px 2px rgba(0,0,0,0.08);
+    float:right;
+    background:#e8edf1;
+}
+
+    div.input.focus {
+        border:1px solid #9ecbe2;
+        box-shadow:0 0 6px #abdcff, inset 0 1px 2px rgba(0,0,0,0.08);
+    }
+
+input#s {
+    width:100%;
+    border:0;
+    border-radius:20px;
+    background:transparent;
+    height:16px;
+    color:#b4bdc4;
+    text-shadow:0 1px 1px #fff;
+}
+
+    input#s:focus {
+        outline:none
+    }
+
+input#searchSubmit {
+    width:19px;
+    height:19px;
+    text-indent:-9999px;
+    overflow:hidden;
+    background:url(images/search-icon.png) no-repeat;
+    border:0;
+    position:absolute;
+    top:7px; right:13px;
+    z-index:5;
+    display:none;
+    cursor:pointer;
+}
+
+table.tablesorter {
+	font-size: 12px;
+	background-color: #4D4D4D;
+	width: 740px;
+	border: 1px solid #000;
+	margin-bottom:30px;
+}
+table.tablesorter th {
+	text-align: left;
+	padding: 5px;
+	background-color: #6E6E6E;
+}
+table.tablesorter td {
+	color: #FFF;
+	padding: 5px;
+}
+table.tablesorter .even {
+	background-color: #3D3D3D;
+}
+table.tablesorter .odd {
+	background-color: #6E6E6E;
+}
+table.tablesorter .header {
+	background-image: url(tablesorter/bg.png);
+	background-repeat: no-repeat;
+	border-left: 1px solid #FFF;
+	border-right: 1px solid #000;
+	border-top: 1px solid #FFF;
+	padding-left: 30px;
+	padding-top: 8px;
+	height: auto;
+	cursor: pointer;
+}
+
+table.tablesorter .headerpost {
+	background-image: url(tablesorter/bg2.png);
+    background-repeat: repeat;
+}
+table.tablesorter .headerSortUp {
+	background-image: url(tablesorter/asc.png);
+	background-repeat: no-repeat;
+}
+table.tablesorter .headerSortDown {
+	background-image: url(tablesorter/desc.png);
+	background-repeat: no-repeat;
+}
+
+.breadcrumb li
+{
+    float:left;
+
+}
\ No newline at end of file
Index: .idea/website.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/website.iml	(revision )
+++ .idea/website.iml	(revision )
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="PyDocumentationSettings">
+    <option name="myDocStringFormat" value="Plain" />
+  </component>
+  <component name="TestRunnerService">
+    <option name="projectConfiguration" value="Nosetests" />
+    <option name="PROJECT_TEST_RUNNER" value="Nosetests" />
+  </component>
+</module>
+
Index: contents/static/js/jquery.bxslider.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/jquery.bxslider.min.js	(revision )
+++ contents/static/js/jquery.bxslider.min.js	(revision )
@@ -0,0 +1,30 @@
+/**
+* BxSlider v4.1.1 - Fully loaded, responsive content slider
+* http://bxslider.com
+*
+* Copyright 2013, Steven Wanderski - http://stevenwanderski.com - http://bxcreative.com
+* Written while drinking Belgian ales and listening to jazz
+*
+* Released under the MIT license - http://opensource.org/licenses/MIT
+*/
+!function(t){var e={},s={mode:"horizontal",slideSelector:"",infiniteLoop:!0,hideControlOnEnd:!1,speed:500,easing:null,slideMargin:0,startSlide:0,randomStart:!1,captions:!1,ticker:!1,tickerHover:!1,adaptiveHeight:!1,adaptiveHeightSpeed:500,video:!1,useCSS:!0,preloadImages:"visible",responsive:!0,touchEnabled:!0,swipeThreshold:50,oneToOneTouch:!0,preventDefaultSwipeX:!0,preventDefaultSwipeY:!1,pager:!0,pagerType:"full",pagerShortSeparator:" / ",pagerSelector:null,buildPager:null,pagerCustom:null,controls:!0,nextText:"Next",prevText:"Prev",nextSelector:null,prevSelector:null,autoControls:!1,startText:"Start",stopText:"Stop",autoControlsCombine:!1,autoControlsSelector:null,auto:!1,pause:4e3,autoStart:!0,autoDirection:"next",autoHover:!1,autoDelay:0,minSlides:1,maxSlides:1,moveSlides:0,slideWidth:0,onSliderLoad:function(){},onSlideBefore:function(){},onSlideAfter:function(){},onSlideNext:function(){},onSlidePrev:function(){}};t.fn.bxSlider=function(n){if(0==this.length)return this;if(this.length>1)return this.each(function(){t(this).bxSlider(n)}),this;var o={},r=this;e.el=this;var a=t(window).width(),l=t(window).height(),d=function(){o.settings=t.extend({},s,n),o.settings.slideWidth=parseInt(o.settings.slideWidth),o.children=r.children(o.settings.slideSelector),o.children.length
+<o.settings.minSlides&&(o.settings.minSlides=o.children.length),o.children.length
+<o.settings.maxSlides&&(o.settings.maxSlides=o.children.length),o.settings.randomStart&&(o.settings.startSlide=Math.floor(Math.random()*o.children.length)),o.active={index:o.settings.startSlide},o.carousel=o.settings.minSlides>1||o.settings.maxSlides>1,o.carousel&&(o.settings.preloadImages="all"),o.minThreshold=o.settings.minSlides*o.settings.slideWidth+(o.settings.minSlides-1)*o.settings.slideMargin,o.maxThreshold=o.settings.maxSlides*o.settings.slideWidth+(o.settings.maxSlides-1)*o.settings.slideMargin,o.working=!1,o.controls={},o.interval=null,o.animProp="vertical"==o.settings.mode?"top":"left",o.usingCSS=o.settings.useCSS&&"fade"!=o.settings.mode&&function(){var t=document.createElement("div"),e=["WebkitPerspective","MozPerspective","OPerspective","msPerspective"];for(var i in e)if(void 0!==t.style[e[i]])return o.cssPrefix=e[i].replace("Perspective","").toLowerCase(),o.animProp="-"+o.cssPrefix+"-transform",!0;return!1}(),"vertical"==o.settings.mode&&(o.settings.maxSlides=o.settings.minSlides),r.data("origStyle",r.attr("style")),r.children(o.settings.slideSelector).each(function(){t(this).data("origStyle",t(this).attr("style"))}),c()},c=function(){r.wrap('
+<div class="bx-wrapper">
+    <div class="bx-viewport"></div>
+</div>'),o.viewport=r.parent(),o.loader=t('
+<div class="bx-loading"/>'),o.viewport.prepend(o.loader),r.css({width:"horizontal"==o.settings.mode?100*o.children.length+215+"%":"auto",position:"relative"}),o.usingCSS&&o.settings.easing?r.css("-"+o.cssPrefix+"-transition-timing-function",o.settings.easing):o.settings.easing||(o.settings.easing="swing"),f(),o.viewport.css({width:"100%",overflow:"hidden",position:"relative"}),o.viewport.parent().css({maxWidth:v()}),o.settings.pager||o.viewport.parent().css({margin:"0 auto 0px"}),o.children.css({"float":"horizontal"==o.settings.mode?"left":"none",listStyle:"none",position:"relative"}),o.children.css("width",u()),"horizontal"==o.settings.mode&&o.settings.slideMargin>0&&o.children.css("marginRight",o.settings.slideMargin),"vertical"==o.settings.mode&&o.settings.slideMargin>0&&o.children.css("marginBottom",o.settings.slideMargin),"fade"==o.settings.mode&&(o.children.css({position:"absolute",zIndex:0,display:"none"}),o.children.eq(o.settings.startSlide).css({zIndex:50,display:"block"})),o.controls.el=t('
+<div class="bx-controls"/>'),o.settings.captions&&P(),o.active.last=o.settings.startSlide==x()-1,o.settings.video&&r.fitVids();var e=o.children.eq(o.settings.startSlide);"all"==o.settings.preloadImages&&(e=o.children),o.settings.ticker?o.settings.pager=!1:(o.settings.pager&&T(),o.settings.controls&&C(),o.settings.auto&&o.settings.autoControls&&E(),(o.settings.controls||o.settings.autoControls||o.settings.pager)&&o.viewport.after(o.controls.el)),g(e,h)},g=function(e,i){var s=e.find("img, iframe").length;if(0==s)return i(),void 0;var n=0;e.find("img, iframe").each(function(){t(this).one("load",function(){++n==s&&i()}).each(function(){this.complete&&t(this).load()})})},h=function(){if(o.settings.infiniteLoop&&"fade"!=o.settings.mode&&!o.settings.ticker){var e="vertical"==o.settings.mode?o.settings.minSlides:o.settings.maxSlides,i=o.children.slice(0,e).clone().addClass("bx-clone"),s=o.children.slice(-e).clone().addClass("bx-clone");r.append(i).prepend(s)}o.loader.remove(),S(),"vertical"==o.settings.mode&&(o.settings.adaptiveHeight=!0),o.viewport.height(p()),r.redrawSlider(),o.settings.onSliderLoad(o.active.index),o.initialized=!0,o.settings.responsive&&t(window).bind("resize",B),o.settings.auto&&o.settings.autoStart&&H(),o.settings.ticker&&L(),o.settings.pager&&I(o.settings.startSlide),o.settings.controls&&W(),o.settings.touchEnabled&&!o.settings.ticker&&O()},p=function(){var e=0,s=t();if("vertical"==o.settings.mode||o.settings.adaptiveHeight)if(o.carousel){var n=1==o.settings.moveSlides?o.active.index:o.active.index*m();for(s=o.children.eq(n),i=1;i<=o.settings.maxSlides-1;i++)s=n+i>=o.children.length?s.add(o.children.eq(i-1)):s.add(o.children.eq(n+i))}else s=o.children.eq(o.active.index);else s=o.children;return"vertical"==o.settings.mode?(s.each(function(){e+=t(this).outerHeight()}),o.settings.slideMargin>0&&(e+=o.settings.slideMargin*(o.settings.minSlides-1))):e=Math.max.apply(Math,s.map(function(){return t(this).outerHeight(!1)}).get()),e},v=function(){var t="100%";return o.settings.slideWidth>0&&(t="horizontal"==o.settings.mode?o.settings.maxSlides*o.settings.slideWidth+(o.settings.maxSlides-1)*o.settings.slideMargin:o.settings.slideWidth),t},u=function(){var t=o.settings.slideWidth,e=o.viewport.width();return 0==o.settings.slideWidth||o.settings.slideWidth>e&&!o.carousel||"vertical"==o.settings.mode?t=e:o.settings.maxSlides>1&&"horizontal"==o.settings.mode&&(e>o.maxThreshold||e
+<o.minThreshold&&(t=(e-o.settings.slideMargin*(o.settings.minSlides-1))/o.settings.minSlides)),t},f=function(){var t=1;if("horizontal"==o.settings.mode&&o.settings.slideWidth>0)if(o.viewport.width()
+<o.minThreshold)t=o.settings.minSlides;else if(o.viewport.width()>o.maxThreshold)t=o.settings.maxSlides;else{var e=o.children.first().width();t=Math.floor(o.viewport.width()/e)}else"vertical"==o.settings.mode&&(t=o.settings.minSlides);return t},x=function(){var t=0;if(o.settings.moveSlides>0)if(o.settings.infiniteLoop)t=o.children.length/m();else for(var e=0,i=0;e
+<o.children.length;)++t,e=i+f(),i+=o.settings.moveSlides<=f()?o.settings.moveSlides:f();else t=Math.ceil(o.children.length/f());return t},m=function(){return o.settings.moveSlides>0&&o.settings.moveSlides<=f()?o.settings.moveSlides:f()},S=function(){if(o.children.length>o.settings.maxSlides&&o.active.last&&!o.settings.infiniteLoop){if("horizontal"==o.settings.mode){var t=o.children.last(),e=t.position();b(-(e.left-(o.viewport.width()-t.width())),"reset",0)}else if("vertical"==o.settings.mode){var i=o.children.length-o.settings.minSlides,e=o.children.eq(i).position();b(-e.top,"reset",0)}}else{var e=o.children.eq(o.active.index*m()).position();o.active.index==x()-1&&(o.active.last=!0),void 0!=e&&("horizontal"==o.settings.mode?b(-e.left,"reset",0):"vertical"==o.settings.mode&&b(-e.top,"reset",0))}},b=function(t,e,i,s){if(o.usingCSS){var n="vertical"==o.settings.mode?"translate3d(0, "+t+"px, 0)":"translate3d("+t+"px, 0, 0)";r.css("-"+o.cssPrefix+"-transition-duration",i/1e3+"s"),"slide"==e?(r.css(o.animProp,n),r.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(){r.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),D()})):"reset"==e?r.css(o.animProp,n):"ticker"==e&&(r.css("-"+o.cssPrefix+"-transition-timing-function","linear"),r.css(o.animProp,n),r.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(){r.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),b(s.resetValue,"reset",0),N()}))}else{var a={};a[o.animProp]=t,"slide"==e?r.animate(a,i,o.settings.easing,function(){D()}):"reset"==e?r.css(o.animProp,t):"ticker"==e&&r.animate(a,speed,"linear",function(){b(s.resetValue,"reset",0),N()})}},w=function(){for(var e="",i=x(),s=0;i>s;s++){var n="";o.settings.buildPager&&t.isFunction(o.settings.buildPager)?(n=o.settings.buildPager(s),o.pagerEl.addClass("bx-custom-pager")):(n=s+1,o.pagerEl.addClass("bx-default-pager")),e+='
+<div class="bx-pager-item"><a href="" data-slide-index="'+s+'" class="bx-pager-link">'+n+"</a>
+</div>"}o.pagerEl.html(e)},T=function(){o.settings.pagerCustom?o.pagerEl=t(o.settings.pagerCustom):(o.pagerEl=t('
+<div class="bx-pager"/>'),o.settings.pagerSelector?t(o.settings.pagerSelector).html(o.pagerEl):o.controls.el.addClass("bx-has-pager").append(o.pagerEl),w()),o.pagerEl.delegate("a","click",q)},C=function(){o.controls.next=t('
+<a class="bx-next" href="">'+o.settings.nextText+"</a>"),o.controls.prev=t('<a class="bx-prev" href="">'+o.settings.prevText+"</a>"),o.controls.next.bind("click",y),o.controls.prev.bind("click",z),o.settings.nextSelector&&t(o.settings.nextSelector).append(o.controls.next),o.settings.prevSelector&&t(o.settings.prevSelector).append(o.controls.prev),o.settings.nextSelector||o.settings.prevSelector||(o.controls.directionEl=t('
+<div class="bx-controls-direction"/>'),o.controls.directionEl.append(o.controls.prev).append(o.controls.next),o.controls.el.addClass("bx-has-controls-direction").append(o.controls.directionEl))},E=function(){o.controls.start=t('
+<div class="bx-controls-auto-item"><a class="bx-start" href="">'+o.settings.startText+"</a></div>"),o.controls.stop=t('
+<div class="bx-controls-auto-item"><a class="bx-stop" href="">'+o.settings.stopText+"</a></div>"),o.controls.autoEl=t('
+<div class="bx-controls-auto"/>'),o.controls.autoEl.delegate(".bx-start","click",k),o.controls.autoEl.delegate(".bx-stop","click",M),o.settings.autoControlsCombine?o.controls.autoEl.append(o.controls.start):o.controls.autoEl.append(o.controls.start).append(o.controls.stop),o.settings.autoControlsSelector?t(o.settings.autoControlsSelector).html(o.controls.autoEl):o.controls.el.addClass("bx-has-controls-auto").append(o.controls.autoEl),A(o.settings.autoStart?"stop":"start")},P=function(){o.children.each(function(){var e=t(this).find("img:first").attr("title");void 0!=e&&(""+e).length&&t(this).append('
+<div class="bx-caption"><span>'+e+"</span>
+</div>")})},y=function(t){o.settings.auto&&r.stopAuto(),r.goToNextSlide(),t.preventDefault()},z=function(t){o.settings.auto&&r.stopAuto(),r.goToPrevSlide(),t.preventDefault()},k=function(t){r.startAuto(),t.preventDefault()},M=function(t){r.stopAuto(),t.preventDefault()},q=function(e){o.settings.auto&&r.stopAuto();var i=t(e.currentTarget),s=parseInt(i.attr("data-slide-index"));s!=o.active.index&&r.goToSlide(s),e.preventDefault()},I=function(e){var i=o.children.length;return"short"==o.settings.pagerType?(o.settings.maxSlides>1&&(i=Math.ceil(o.children.length/o.settings.maxSlides)),o.pagerEl.html(e+1+o.settings.pagerShortSeparator+i),void 0):(o.pagerEl.find("a").removeClass("active"),o.pagerEl.each(function(i,s){t(s).find("a").eq(e).addClass("active")}),void 0)},D=function(){if(o.settings.infiniteLoop){var t="";0==o.active.index?t=o.children.eq(0).position():o.active.index==x()-1&&o.carousel?t=o.children.eq((x()-1)*m()).position():o.active.index==o.children.length-1&&(t=o.children.eq(o.children.length-1).position()),"horizontal"==o.settings.mode?b(-t.left,"reset",0):"vertical"==o.settings.mode&&b(-t.top,"reset",0)}o.working=!1,o.settings.onSlideAfter(o.children.eq(o.active.index),o.oldIndex,o.active.index)},A=function(t){o.settings.autoControlsCombine?o.controls.autoEl.html(o.controls[t]):(o.controls.autoEl.find("a").removeClass("active"),o.controls.autoEl.find("a:not(.bx-"+t+")").addClass("active"))},W=function(){1==x()?(o.controls.prev.addClass("disabled"),o.controls.next.addClass("disabled")):!o.settings.infiniteLoop&&o.settings.hideControlOnEnd&&(0==o.active.index?(o.controls.prev.addClass("disabled"),o.controls.next.removeClass("disabled")):o.active.index==x()-1?(o.controls.next.addClass("disabled"),o.controls.prev.removeClass("disabled")):(o.controls.prev.removeClass("disabled"),o.controls.next.removeClass("disabled")))},H=function(){o.settings.autoDelay>0?setTimeout(r.startAuto,o.settings.autoDelay):r.startAuto(),o.settings.autoHover&&r.hover(function(){o.interval&&(r.stopAuto(!0),o.autoPaused=!0)},function(){o.autoPaused&&(r.startAuto(!0),o.autoPaused=null)})},L=function(){var e=0;if("next"==o.settings.autoDirection)r.append(o.children.clone().addClass("bx-clone"));else{r.prepend(o.children.clone().addClass("bx-clone"));var i=o.children.first().position();e="horizontal"==o.settings.mode?-i.left:-i.top}b(e,"reset",0),o.settings.pager=!1,o.settings.controls=!1,o.settings.autoControls=!1,o.settings.tickerHover&&!o.usingCSS&&o.viewport.hover(function(){r.stop()},function(){var e=0;o.children.each(function(){e+="horizontal"==o.settings.mode?t(this).outerWidth(!0):t(this).outerHeight(!0)});var i=o.settings.speed/e,s="horizontal"==o.settings.mode?"left":"top",n=i*(e-Math.abs(parseInt(r.css(s))));N(n)}),N()},N=function(t){speed=t?t:o.settings.speed;var e={left:0,top:0},i={left:0,top:0};"next"==o.settings.autoDirection?e=r.find(".bx-clone").first().position():i=o.children.first().position();var s="horizontal"==o.settings.mode?-e.left:-e.top,n="horizontal"==o.settings.mode?-i.left:-i.top,a={resetValue:n};b(s,"ticker",speed,a)},O=function(){o.touch={start:{x:0,y:0},end:{x:0,y:0}},o.viewport.bind("touchstart",X)},X=function(t){if(o.working)t.preventDefault();else{o.touch.originalPos=r.position();var e=t.originalEvent;o.touch.start.x=e.changedTouches[0].pageX,o.touch.start.y=e.changedTouches[0].pageY,o.viewport.bind("touchmove",Y),o.viewport.bind("touchend",V)}},Y=function(t){var e=t.originalEvent,i=Math.abs(e.changedTouches[0].pageX-o.touch.start.x),s=Math.abs(e.changedTouches[0].pageY-o.touch.start.y);if(3*i>s&&o.settings.preventDefaultSwipeX?t.preventDefault():3*s>i&&o.settings.preventDefaultSwipeY&&t.preventDefault(),"fade"!=o.settings.mode&&o.settings.oneToOneTouch){var n=0;if("horizontal"==o.settings.mode){var r=e.changedTouches[0].pageX-o.touch.start.x;n=o.touch.originalPos.left+r}else{var r=e.changedTouches[0].pageY-o.touch.start.y;n=o.touch.originalPos.top+r}b(n,"reset",0)}},V=function(t){o.viewport.unbind("touchmove",Y);var e=t.originalEvent,i=0;if(o.touch.end.x=e.changedTouches[0].pageX,o.touch.end.y=e.changedTouches[0].pageY,"fade"==o.settings.mode){var s=Math.abs(o.touch.start.x-o.touch.end.x);s>=o.settings.swipeThreshold&&(o.touch.start.x>o.touch.end.x?r.goToNextSlide():r.goToPrevSlide(),r.stopAuto())}else{var s=0;"horizontal"==o.settings.mode?(s=o.touch.end.x-o.touch.start.x,i=o.touch.originalPos.left):(s=o.touch.end.y-o.touch.start.y,i=o.touch.originalPos.top),!o.settings.infiniteLoop&&(0==o.active.index&&s>0||o.active.last&&0>s)?b(i,"reset",200):Math.abs(s)>=o.settings.swipeThreshold?(0>s?r.goToNextSlide():r.goToPrevSlide(),r.stopAuto()):b(i,"reset",200)}o.viewport.unbind("touchend",V)},B=function(){var e=t(window).width(),i=t(window).height();(a!=e||l!=i)&&(a=e,l=i,r.redrawSlider())};return r.goToSlide=function(e,i){if(!o.working&&o.active.index!=e)if(o.working=!0,o.oldIndex=o.active.index,o.active.index=0>e?x()-1:e>=x()?0:e,o.settings.onSlideBefore(o.children.eq(o.active.index),o.oldIndex,o.active.index),"next"==i?o.settings.onSlideNext(o.children.eq(o.active.index),o.oldIndex,o.active.index):"prev"==i&&o.settings.onSlidePrev(o.children.eq(o.active.index),o.oldIndex,o.active.index),o.active.last=o.active.index>=x()-1,o.settings.pager&&I(o.active.index),o.settings.controls&&W(),"fade"==o.settings.mode)o.settings.adaptiveHeight&&o.viewport.height()!=p()&&o.viewport.animate({height:p()},o.settings.adaptiveHeightSpeed),o.children.filter(":visible").fadeOut(o.settings.speed).css({zIndex:0}),o.children.eq(o.active.index).css("zIndex",51).fadeIn(o.settings.speed,function(){t(this).css("zIndex",50),D()});else{o.settings.adaptiveHeight&&o.viewport.height()!=p()&&o.viewport.animate({height:p()},o.settings.adaptiveHeightSpeed);var s=0,n={left:0,top:0};if(!o.settings.infiniteLoop&&o.carousel&&o.active.last)if("horizontal"==o.settings.mode){var a=o.children.eq(o.children.length-1);n=a.position(),s=o.viewport.width()-a.outerWidth()}else{var l=o.children.length-o.settings.minSlides;n=o.children.eq(l).position()}else if(o.carousel&&o.active.last&&"prev"==i){var d=1==o.settings.moveSlides?o.settings.maxSlides-m():(x()-1)*m()-(o.children.length-o.settings.maxSlides),a=r.children(".bx-clone").eq(d);n=a.position()}else if("next"==i&&0==o.active.index)n=r.find("> .bx-clone").eq(o.settings.maxSlides).position(),o.active.last=!1;else if(e>=0){var c=e*m();n=o.children.eq(c).position()}if("undefined"!=typeof n){var g="horizontal"==o.settings.mode?-(n.left-s):-n.top;b(g,"slide",o.settings.speed)}}},r.goToNextSlide=function(){if(o.settings.infiniteLoop||!o.active.last){var t=parseInt(o.active.index)+1;r.goToSlide(t,"next")}},r.goToPrevSlide=function(){if(o.settings.infiniteLoop||0!=o.active.index){var t=parseInt(o.active.index)-1;r.goToSlide(t,"prev")}},r.startAuto=function(t){o.interval||(o.interval=setInterval(function(){"next"==o.settings.autoDirection?r.goToNextSlide():r.goToPrevSlide()},o.settings.pause),o.settings.autoControls&&1!=t&&A("stop"))},r.stopAuto=function(t){o.interval&&(clearInterval(o.interval),o.interval=null,o.settings.autoControls&&1!=t&&A("start"))},r.getCurrentSlide=function(){return o.active.index},r.getSlideCount=function(){return o.children.length},r.redrawSlider=function(){o.children.add(r.find(".bx-clone")).outerWidth(u()),o.viewport.css("height",p()),o.settings.ticker||S(),o.active.last&&(o.active.index=x()-1),o.active.index>=x()&&(o.active.last=!0),o.settings.pager&&!o.settings.pagerCustom&&(w(),I(o.active.index))},r.destroySlider=function(){o.initialized&&(o.initialized=!1,t(".bx-clone",this).remove(),o.children.each(function(){void 0!=t(this).data("origStyle")?t(this).attr("style",t(this).data("origStyle")):t(this).removeAttr("style")}),void 0!=t(this).data("origStyle")?this.attr("style",t(this).data("origStyle")):t(this).removeAttr("style"),t(this).unwrap().unwrap(),o.controls.el&&o.controls.el.remove(),o.controls.next&&o.controls.next.remove(),o.controls.prev&&o.controls.prev.remove(),o.pagerEl&&o.pagerEl.remove(),t(".bx-caption",this).remove(),o.controls.autoEl&&o.controls.autoEl.remove(),clearInterval(o.interval),o.settings.responsive&&t(window).unbind("resize",B))},r.reloadSlider=function(t){void 0!=t&&(n=t),r.destroySlider(),d()},d(),this}}(jQuery);
\ No newline at end of file
Index: templates/contents/contact.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/contents/contact.html	(revision )
+++ templates/contents/contact.html	(revision )
@@ -0,0 +1,47 @@
+{% extends "site_base.html" %}
+{% block body %}
+<h1>Contact Us</h1>
+
+<form action="/contact/" method="post" id="hongkiat-form">
+    {% csrf_token %}
+    {# Include the hidden fields #}
+    {% for hidden in form.hidden_fields %}
+    {{ hidden }}
+    {% endfor %}
+    {# Include the visible fields #}
+    {{ form.non_field_errors }}
+    <div class="fieldWrapper">
+        {{ form.name.errors }}
+
+        <input id="id_name" maxlength="100" name="name" type="text" class="txtinput"
+               placeholder="Name:">
+    </div>
+    <div class="fieldWrapper">
+        {{ form.subject.errors }}
+
+        <input id="id_subject" maxlength="100" name="subject" type="text" class="txtinput"
+               placeholder="Subject:">
+    </div>
+    <div class="fieldWrapper">
+        {{ form.sender.errors }}
+
+        <input id="id_sender" name="sender" type="text" class="txtinput" placeholder="Email:">
+    </div>
+    <div class="fieldWrapper">
+        {{ form.message.errors }}
+
+        <textarea cols="40" id="bbcode" name="message" rows="5" class="txtblock"
+                  placeholder="Message:"></textarea>
+    </div>
+
+    <div class="fieldWrapper">
+        {{ form.cc_myself.errors }}
+        <label for="id_cc_myself">CC yourself?</label>
+        {{ form.cc_myself }}
+    </div>
+    <section id="buttons">
+        <input type="reset" name="reset" id="resetbtn" class="resetbtn" value="Reset">
+        <input type="submit" value="Send message" class="submitbtn" id="submitbtn"/>
+    </section>
+</form>
+{% endblock %}
\ No newline at end of file
Index: templates/search/indexes/blogs/note_text.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/search/indexes/blogs/note_text.txt	(revision )
+++ templates/search/indexes/blogs/note_text.txt	(revision )
@@ -0,0 +1,2 @@
+{{ object.title }}
+{{ object.description }}
Index: contents/static/fonts/icomoon/icomoon.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/fonts/icomoon/icomoon.svg	(revision )
+++ contents/static/fonts/icomoon/icomoon.svg	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" >
+<svg xmlns="http://www.w3.org/2000/svg">
+<metadata>
+This is a custom SVG font generated by IcoMoon.
+<iconset grid="16"></iconset>
+</metadata>
+<defs>
+<font id="icomoon" horiz-adv-x="512" >
+<font-face units-per-em="512" ascent="480" descent="-32" />
+<missing-glyph horiz-adv-x="512" />
+<glyph class="hidden" unicode="&#xf000;" d="M0,480L 512 -32L0 -32 z" horiz-adv-x="0" />
+<glyph unicode="&#xe000;" d="M 496.131,44.302L 374.855,147.449c-12.537,11.283-25.945,16.463-36.776,15.963C 366.707,196.946, 384,240.451, 384,288
+	C 384,394.039, 298.039,480, 192,480C 85.962,480,0,394.039,0,288c0-106.039, 85.961-192, 192-192c 47.549,0, 91.054,17.293, 124.588,45.922
+	c-0.5-10.831, 4.68-24.239, 15.963-36.776l 103.147-121.276c 17.661-19.623, 46.511-21.277, 64.11-3.678S 515.754,26.641, 496.131,44.302z
+	 M 192,160c-70.692,0-128,57.308-128,128S 121.308,416, 192,416s 128-57.308, 128-128S 262.693,160, 192,160z"  />
+<glyph unicode="&#x20;" horiz-adv-x="256" />
+</font></defs></svg>
\ No newline at end of file
Index: blogs/tables.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- blogs/tables.py	(revision )
+++ blogs/tables.py	(revision )
@@ -0,0 +1,13 @@
+import django_tables2 as tables
+from django_tables2.utils import A
+
+from blogs.models import Blog
+
+
+class BlogTable(tables.Table):
+    title = tables.LinkColumn('blogs:detail', args=[A('page_slug')])
+
+    class Meta:
+        model = Blog
+        # add class="paleblue" to <table> tag
+        attrs = {"class": "paleblue"}
\ No newline at end of file
Index: contents/static/pro_dropdown_2/pro_dropdown_2.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/pro_dropdown_2/pro_dropdown_2.css	(revision )
+++ contents/static/pro_dropdown_2/pro_dropdown_2.css	(revision )
@@ -0,0 +1,65 @@
+/* ================================================================ 
+This copyright notice must be kept untouched in the stylesheet at 
+all times.
+
+The original version of this stylesheet and the associated (x)html
+is available at http://www.stunicholls.com/menu/pro_drop_2.html
+Copyright (c) 2005-2007 Stu Nicholls. All rights reserved.
+This stylesheet and the associated (x)html may be modified in any 
+way to fit your requirements.
+=================================================================== */
+
+.preload1 {background: url(three_1.gif);}
+.preload2 {background: url(three_1a.gif);}
+
+#nav {padding:0; margin:0; list-style:none; height:38px; background:#fff url(three_0.gif) repeat-x; position:relative; z-index:500; font-family:arial, verdana, sans-serif;}
+#nav li.top {display:block; float:left; height:38px;}
+#nav li a.top_link {display:block; float:left; height:35px; line-height:33px; color:#ccc; text-decoration:none; font-size:11px; font-weight:bold; padding:0 0 0 12px; cursor:pointer;background: url(three_0.gif);}
+#nav li a.top_link span {float:left; display:block; padding:0 24px 0 12px; height:35px; background: url(three_0.gif) right top no-repeat;}
+#nav li a.top_link span.down {float:left; display:block; padding:0 24px 0 12px; height:35px; background: url(three_0a.gif) no-repeat right top;}
+
+#nav li:hover a.top_link {color:#fff; background: url(three_1.gif) no-repeat;}
+#nav li:hover a.top_link span {background:url(three_1.gif) no-repeat right top;}
+#nav li:hover a.top_link span.down {background:url(three_1a.gif) no-repeat right top;}
+
+/* Default list styling */
+
+#nav li:hover {position:relative; z-index:200;}
+
+#nav li:hover ul.sub
+{left:1px; top:38px; background: #bbd37e; padding:3px; border:1px solid #5c731e; white-space:nowrap; width:90px; height:auto; z-index:300;}
+#nav li:hover ul.sub li
+{display:block; height:20px; position:relative; float:left; width:90px; font-weight:normal;}
+#nav li:hover ul.sub li a
+{display:block; font-size:11px; height:18px; width:88px; line-height:18px; text-indent:5px; color:#000; text-decoration:none;border:1px solid #bbd37e;}
+#nav li ul.sub li a.fly
+{background:#bbd37e url(arrow.gif) 80px 6px no-repeat;}
+#nav li:hover ul.sub li a:hover 
+{background:#6a812c; color:#fff; border-color:#fff;}
+#nav li:hover ul.sub li a.fly:hover
+{background:#6a812c url(arrow_over.gif) 80px 6px no-repeat; color:#fff;}
+
+
+#nav li:hover li:hover ul,
+#nav li:hover li:hover li:hover ul,
+#nav li:hover li:hover li:hover li:hover ul,
+#nav li:hover li:hover li:hover li:hover li:hover ul
+{left:90px; top:-4px; background: #bbd37e; padding:3px; border:1px solid #5c731e; white-space:nowrap; width:90px; z-index:400; height:auto;}
+
+#nav ul, 
+#nav li:hover ul ul,
+#nav li:hover li:hover ul ul,
+#nav li:hover li:hover li:hover ul ul,
+#nav li:hover li:hover li:hover li:hover ul ul
+{position:absolute; left:-9999px; top:-9999px; width:0; height:0; margin:0; padding:0; list-style:none;}
+
+#nav li:hover li:hover a.fly,
+#nav li:hover li:hover li:hover a.fly,
+#nav li:hover li:hover li:hover li:hover a.fly,
+#nav li:hover li:hover li:hover li:hover li:hover a.fly
+{background:#6a812c url(arrow_over.gif) 80px 6px no-repeat; color:#fff; border-color:#fff;} 
+
+#nav li:hover li:hover li a.fly,
+#nav li:hover li:hover li:hover li a.fly,
+#nav li:hover li:hover li:hover li:hover li a.fly
+{background:#bbd37e url(arrow.gif) 80px 6px no-repeat; color:#000; border-color:#bbd37e;} 
Index: contents/static/js/jquery-1.7.2.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/js/jquery-1.7.2.min.js	(revision )
+++ contents/static/js/jquery-1.7.2.min.js	(revision )
@@ -0,0 +1,714 @@
+/*! jQuery v1.7.2 jquery.com | jquery.org/license */
+(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"
+<html>
+<body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return
+cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function
+cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new
+a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function
+cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var
+d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof
+h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+"
+"+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+"
+"+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to
+")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var
+e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in
+d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in
+e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+"
+"+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function
+b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof
+e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else
+d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in
+c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function
+bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i
+<j
+&&(k||!l);i++)l=h[i](c,d,e),typeof
+l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return
+l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var
+d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e
+<g
+;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var
+d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e
+<g
+;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return
+d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e
+<g
+;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return
+d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return
+b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof
+a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function
+bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof
+a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof
+a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var
+c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function
+bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete
+h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d
+<e
+;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return
+f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function
+U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return
+c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return
+e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var
+d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return
+f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function
+S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function
+n(a,b,c){var
+d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function
+m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function
+l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof
+d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else
+d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c
+<d
+;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function
+J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var
+e=function(a,b){return new
+e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[
+\/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*?
+rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var
+g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return
+this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof
+a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d
+instanceof
+e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return
+e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return
+f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return
+this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return
+f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return
+e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return
+F.call(this,0)},get:function(a){return
+a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var
+d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?"
+":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return
+e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return
+a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return
+this.eq(-1)},slice:function(){return
+this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return
+this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return
+this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var
+a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof
+i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j
+<k
+;j++)if((a=arguments[j])!=null)for(c in
+a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return
+i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return
+e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return
+setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once
+memory");if(c.readyState==="complete")return
+setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else
+if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var
+b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return
+e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return
+a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return
+a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var
+d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in
+a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return
+null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return
+a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return
+"+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var
+d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new
+ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid
+XML: "+c);return
+d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return
+a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return
+a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var
+f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g
+<h
+;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g
+<h
+;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return
+a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var
+d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return
+c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c
+<d
+;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var
+f=c.length;e
+<f
+;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var
+f=0,g=a.length;f
+<g
+;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof
+e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i
+<j
+;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return
+h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return
+b;var f=F.call(arguments,2),g=function(){return
+a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return
+g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in
+d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return
+j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l
+<m
+;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new
+Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var
+b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function
+a(b,c){return new
+a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f
+instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return
+a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object
+"+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return
+e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var
+d,e,g,h,i;for(d=0,e=b.length;d
+<e
+;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m
+<l
+;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var
+a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var
+b=arguments,d=0,e=b.length;for(;d
+<e
+;d++)for(var f=0;f
+<c.length
+;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var
+b=0,d=c.length;for(;b
+<d
+;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return
+this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return
+this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return
+this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var
+i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once
+memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return
+e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return
+this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return
+f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var
+c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else
+for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in
+g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return
+i},when:function(a){function m(a){return
+function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return
+function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var
+b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c
+<d
+;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else
+j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var
+b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="
+<link/>
+<table></table>
+<a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="
+<:nav></:nav>
+",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete
+p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n
+in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof
+p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var
+d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px
+solid #000;",q="
+<div
+"+n+"display:block;'>
+<div style='"+t+"0;display:block;overflow:hidden;'></div>
+</div>"+"
+<table
+"+n+"' cellpadding='0' cellspacing='0'>"+"
+<tr>
+    <td></td>
+</tr>
+</table>
+",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="
+<table>
+    <tr>
+        <td style='"+t+"0;display:none'></td>
+        <td>t</td>
+    </tr>
+</table>
+",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof
+p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="
+<div style='width:5px;'></div>
+",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof
+d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var
+j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var
+g,h,i,j=f.expando,k=typeof
+c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof
+c=="object"||typeof
+c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return
+g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var
+d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b
+in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e
+<g
+;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete
+j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete
+j[k]:j[k]=null,i&&(f.support.deleteExpando?delete
+a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return
+f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return
+b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var
+d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return
+m}if(typeof a=="object")return
+this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return
+f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return
+m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var
+b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return
+this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var
+d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var
+d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return
+d||[]}},dequeue:function(a,b){b=b||"fx";var
+c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue
+"+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof
+a!="string"&&(c=a,a="fx",d--);if(arguments.length
+<d
+)return f.queue(this[0],a);return c===b?this:this.each(function(){var
+b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return
+this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return
+this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return
+this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof
+a!="string"&&(c=a,a=b),a=a||"fx";var
+d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once
+memory"),!0))h++,l.add(m);m();return d.promise(c)}});var
+o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return
+f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return
+this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return
+f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return
+this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var
+b,c,d,e,g,h,i;if(f.isFunction(a))return
+this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof
+a=="string"){b=a.split(p);for(c=0,d=this.length;c
+<d
+;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+"
+";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return
+this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return
+this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof
+a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d
+<e
+;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i
+<j
+;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var
+c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return
+this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return
+this.each(function(){if(c==="string"){var
+e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else
+if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var
+b=" "+a+" ",c=0,d=this.length;for(;c
+<d
+;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o,"
+").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return
+this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof
+h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return
+a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in
+c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in
+c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof
+d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var
+b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var
+b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c
+<d
+;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return
+b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var
+c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return
+c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var
+g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof
+a.getAttribute=="undefined")return
+f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in
+h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return
+g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var
+c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i
+<g
+;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in
+a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be
+changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var
+c=a.value;a.setAttribute("type",b),c&&(a.value=c);return
+b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in
+a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return
+w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var
+e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return
+d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in
+g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return
+c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var
+d,e=f.prop(a,c);return e===!0||typeof
+e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var
+d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return
+c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return
+d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var
+e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return
+e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return
+c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var
+d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return
+a.style.cssText.toLowerCase()||b},set:function(a,b){return
+a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var
+b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return
+null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return
+a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return
+a.checked=f.inArray(f(a).val(),b)>=0}})});var
+z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/(?:^|\s)hover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(
+a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return
+b},H=function(a,b){var
+c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return
+f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var
+h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler,g=p.selector),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return
+typeof
+f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split("
+");for(k=0;k
+<c.length
+;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g&&G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var
+g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h
+<b.length
+;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in
+o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new
+RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n
+<r.length
+;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete
+o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var
+h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof
+c=="object"?c[f.expando]?c:new f.Event(h,c):new
+f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new
+RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in
+j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l
+<r.length
+&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return
+c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var
+d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=f.event.special[c.type]||{},j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(!i.preDispatch||i.preDispatch.call(this,c)!==!1){if(e&&(!c.button||c.type!=="click")){n=f(this),n.context=this.ownerDocument||this;for(m=c.target;m!=this;m=m.parentNode||this)if(m.disabled!==!0){p={},r=[],n[0]=m;for(k=0;k
+<e
+;k++)s=d[k],t=s.selector,p[t]===b&&(p[t]=s.quick?H(m,s.quick):n.is(t)),p[t]&&r.push(s);r.length&&j.push({elem:m,matches:r})}}d.length>e&&j.push({elem:this,matches:d.slice(e)});for(k=0;k
+<j.length
+&&!c.isPropagationStopped();k++){q=j[k],c.currentTarget=q.elem;for(l=0;l
+<q.matches.length
+&&!c.isImmediatePropagationStopped();l++){s=q.matches[l];if(h||!c.namespace&&!s.namespace||c.namespace_re&&c.namespace_re.test(s.namespace))c.data=s.data,c.handleObj=s,o=((f.event.special[s.origType]||{}).handle||s.handler).apply(q.elem,g),o!==b&&(c.result=o,o===!1&&(c.preventDefault(),c.stopPropagation()))}}i.postDispatch&&i.postDispatch.call(this,c);return
+c.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase
+metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key
+keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return
+a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY
+toElement".split(" "),filter:function(a,d){var
+e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return
+a}},fix:function(a){if(a[f.expando])return a;var
+d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return
+h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var
+e=f.extend(new
+f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this
+instanceof f.Event))return new
+f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var
+a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var
+a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var
+c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return
+h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit
+keypress._submit",function(a){var
+c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),d._submit_attached=!0)})},postDispatch:function(a){a._submit_bubble&&(delete
+a._submit_bubble,this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var
+b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var
+b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return
+a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return
+z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var
+d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var
+h,i;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(i in a)this.on(i,c,d,a[i],g);return
+this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return
+this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return
+this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return
+this.on(a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var
+e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return
+this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof
+c=="function")d=c,c=b;d===!1&&(d=J);return
+this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return
+this.on(a,null,b,c)},unbind:function(a,b){return
+this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return
+this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return
+this.on(b,a,c,d)},undelegate:function(a,b,c){return
+arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return
+this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return
+f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var
+e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return
+b[e].apply(this,arguments)||!1};e.guid=c;while(d
+<b.length
+)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur
+focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout
+mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split("
+"),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return
+arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function
+x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var
+k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof
+b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function
+w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var
+k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var
+a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^
+>+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return
+0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof
+b!="string")return e;var
+i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else
+k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else
+if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else
+for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return
+e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b
+<a.length
+;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return
+m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var
+d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e
+<f
+;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof
+b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var
+f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in
+o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else
+if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else
+break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var
+n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9||d===11){if(typeof
+a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return
+a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else
+for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return
+e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return
+a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof
+b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f
+<g
+;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var
+c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e
+<f
+;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e
+<f
+;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof
+b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var
+d,f=e++,g=x;typeof
+b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof
+b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return
+d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var
+c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e
+<f
+;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof
+b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a="
+"+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+"
+").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return
+a[1].replace(j,"")},TAG:function(a,b){return
+a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var
+b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else
+a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var
+g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]="
+"+a[4]+" ");return
+a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var
+g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else
+if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return
+a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return
+a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return
+a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var
+b=a.getAttribute("type"),c=a.type;return
+a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return
+a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return
+a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return
+a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return
+a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var
+b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return
+a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var
+b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var
+b=a.nodeName.toLowerCase();return
+b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return
+a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return
+b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b
+<c
+[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return
+c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return
+f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var
+g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var
+c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return
+c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return
+b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return("
+"+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var
+c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return
+d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+"
+").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var
+e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in
+o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new
+RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));o.match.globalPOS=p;var
+s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return
+a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var
+c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var
+e=a.length;c
+<e
+;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var
+u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return
+0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return
+a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return
+a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return
+v(a,b);if(!g)return-1;if(!i)return
+1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k
+<c
+&&k
+<d
+;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var
+d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var
+a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof
+c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof
+e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var
+c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return
+a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var
+a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var
+c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return
+c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof
+a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return
+a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var
+a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>
+";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var
+h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return
+s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return
+s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var
+i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return
+s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var
+k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return
+s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e
+in a)m[e]=a[e];b=null}}(),function(){var
+a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var
+d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var
+f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return
+m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="
+<div class='test e'></div>
+<div class='test'></div>
+";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof
+b.getElementsByClassName!="undefined"&&!c)return
+b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return
+a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var
+b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var
+d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var
+h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return
+m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var
+L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.globalPOS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var
+b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c
+<d
+;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c
+<d
+;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h
+<e.length
+;h++)for(i=0;i
+<g
+;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var
+a=0,c=b.length;a
+<c
+;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return
+this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return
+this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof
+a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var
+c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d
+<a.length
+;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof
+a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d
+<e
+;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return
+this.pushStack(c,"closest",a)},index:function(a){if(!a)return
+this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return
+f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof
+a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return
+this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return
+this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return
+b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return
+f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return
+f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return
+f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return
+f.dir(a,"previousSibling",c)},siblings:function(a){return
+f.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return
+f.sibling(a.firstChild)},contents:function(a){return
+f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var
+e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof
+d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return
+this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return
+b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var
+e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return
+e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return
+a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var
+V="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/
+jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/
+<tbody
+/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new
+RegExp("<(?:"+V+")[\\s/>]","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select
+        multiple='multiple'>","</select>"],legend:[1,"
+<fieldset>","</fieldset>
+"],thead:[1,"
+<table>","</table>
+"],tr:[2,"
+<table>
+    <tbody>","</tbody>
+</table>
+"],td:[3,"
+<table>
+    <tbody>
+    <tr>","</tr>
+    </tbody>
+</table>
+"],col:[2,"
+<table>
+    <tbody></tbody>
+    <colgroup>","</colgroup>
+</table>
+"],area:[1,"
+<map>","</map>
+"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div
+<div>","</div>
+"]),f.fn.extend({text:function(a){return f.access(this,function(a){return
+a===b?f.text(this):this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(f.isFunction(a))return
+this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var
+b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var
+a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return
+this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return
+this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var
+b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return
+this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return
+this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return
+this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return
+this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f
+.clean(arguments);a.push.apply(a,this.toArray());return
+this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return
+this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var
+a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var
+c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return
+this},empty:function(){for(var
+a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return
+this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return
+f.clone(this,a,b)})},html:function(a){return f.access(this,function(a){var
+c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(W,""):null;if(typeof
+a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1>
+</
+$2>");try{for(;d
+<e
+;d++)c=this[d]||{},c.nodeType===1&&(f.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(g){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return
+this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof
+a!="string"&&(a=f(a).detach());return this.each(function(){var
+b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return
+this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return
+this.remove(a,!0)},domManip:function(a,c,d){var
+e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return
+this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var
+g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var
+l=0,m=this.length,n=m-1;l
+<m
+;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l
+<n
+?f.clone(h,!0,!0):h)}k.length&&f.each(k,function(a,b){b.src?f.ajax({type:"GET",global:!1,url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)})}return
+this}}),f.buildFragment=function(a,b,d){var
+e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof
+j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var
+d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return
+this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return
+this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var
+d,e,g,h=f.support.html5Clone||f.isXMLDoc(a)||!bc.test("<"+a.nodeName+">")?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return
+h},clean:function(a,b,d,e){var g,h,i,j=[];b=b||c,typeof
+b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);for(var k=0,l;(l=a[k])!=null;k++){typeof
+l=="number"&&(l+="");if(!l)continue;if(typeof l=="string")if(!_.test(l))l=b.createTextNode(l);else{l=l.replace(Y,"<$1>
+</$2>");var m=(Z.exec(l)||["",""])[1].toLowerCase(),n=bg[m]||bg._default,o=n[0],p=b.createElement("div"),q=bh.childNodes,r;b===c?bh.appendChild(p):U(b).appendChild(p),p.innerHTML=n[1]+l+n[2];while(o--)p=p.lastChild;if(!f.support.tbody){var s=$.test(l),t=m==="table"&&!s?p.firstChild&&p.firstChild.childNodes:n[1]==="
+<table>
+    "&&!s?p.childNodes:[];for(i=t.length-1;i>=0;--i)f.nodeName(t[i],"tbody")&&!t[i].childNodes.length&&t[i].parentNode.removeChild(t[i])}!f.support.leadingWhitespace&&X.test(l)&&p.insertBefore(b.createTextNode(X.exec(l)[0]),p.firstChild),l=p.childNodes,p&&(p.parentNode.removeChild(p),q.length>0&&(r=q[q.length-1],r&&r.parentNode&&r.parentNode.removeChild(r)))}var
+    u;if(!f.support.appendChecked)if(l[0]&&typeof (u=l.length)=="number")for(i=0;i<u;i++)bn(l[i]);else
+    bn(l);l.nodeType?j.push(l):j=f.merge(j,l)}if(d){g=function(a){return!a.type||be.test(a.type)};for(k=0;j[k];k++){h=j[k];if(e&&f.nodeName(h,"script")&&(!h.type||be.test(h.type)))e.push(h.parentNode?h.parentNode.removeChild(h):h);else{if(h.nodeType===1){var
+    v=f.grep(h.getElementsByTagName("script"),g);j.splice.apply(j,[k+1,0].concat(v))}d.appendChild(h)}}}return
+    j},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var
+    h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var
+    j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete
+    i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var
+    bp=/alpha\([^)]*\)/i,bq=/opacity=([^)]*)/,br=/([A-Z]|^ms)/g,bs=/^[\-+]?(?:\d*\.)?\d+$/i,bt=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,bu=/^([\-+])=([\-+.\de]+)/,bv=/^margin/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Top","Right","Bottom","Left"],by,bz,bA;f.fn.css=function(a,c){return
+    f.access(this,function(a,c,d){return
+    d!==b?f.style(a,c,d):f.css(a,c)},a,c,arguments.length>1)},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var
+    c=by(a,"opacity");return c===""?"1":c}return
+    a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var
+    g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in
+    k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof
+    d,h==="string"&&(g=bu.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in
+    k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var
+    e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in
+    g&&(e=g.get(a,!0,d))!==b)return e;if(by)return by(a,c)},swap:function(a,b,c){var d={},e,f;for(f in
+    b)d[f]=a.style[f],a.style[f]=b[f];e=c.call(a);for(f in b)a.style[f]=d[f];return
+    e}}),f.curCSS=f.css,c.defaultView&&c.defaultView.getComputedStyle&&(bz=function(a,b){var
+    c,d,e,g,h=a.style;b=b.replace(br,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b))),!f.support.pixelMargin&&e&&bv.test(b)&&bt.test(c)&&(g=h.width,h.width=c,c=e.width,h.width=g);return
+    c}),c.documentElement.currentStyle&&(bA=function(a,b){var
+    c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f==null&&g&&(e=g[b])&&(f=e),bt.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return
+    f===""?"auto":f}),by=bz||bA,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){if(c)return
+    a.offsetWidth!==0?bB(a,b,d):f.swap(a,bw,function(){return bB(a,b,d)})},set:function(a,b){return
+    bs.test(b)?b+"px":b}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return
+    bq.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var
+    c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bp,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bp.test(g)?g.replace(bp,e):g+"
+    "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){return
+    f.swap(a,{display:"inline-block"},function(){return
+    b?by(a,"margin-right"):a.style.marginRight})}})}),f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var
+    b=a.offsetWidth,c=a.offsetHeight;return
+    b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)}),f.each({margin:"",padding:"",border:"Width"},function(a,b){f.cssHooks[a+b]={expand:function(c){var
+    d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bx[d]+b]=e[d]||e[d-2]||e[0];return f}}});var
+    bC=/%20/g,bD=/\[\]$/,bE=/\r?\n/g,bF=/#.*$/,bG=/^(.*?):[
+    \t]*([^\r\n]*)\r?$/mg,bH=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bI=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bJ=/^(?:GET|HEAD)$/,bK=/^\/\//,bL=/\?/,bM=/
+    <script
+    \b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bN=/^(?:select|textarea)/i,bO=/\s+/,bP=/([?&])_=[^&]*/,bQ=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bR=f.fn.load,bS={},bT={},bU,bV,bW=["*/"]+["*"];try{bU=e.href}catch(bX){bU=c.createElement("a"),bU.href="",bU=bU.href}bV=bQ.exec(bU.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof
+    a!="string"&&bR)return bR.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var
+    g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof
+    c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var
+    i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("
+    <div>
+        ").append(c.replace(bM,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bN.test(this.nodeName)||bH.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bE,"\r\n")}}):{name:b.name,value:c.replace(bE,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b$(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b$(a,b);return a},ajaxSettings:{url:bU,isLocal:bI.test(bV[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bW},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bY(bS),ajaxTransport:bY(bT),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?ca(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cb(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bG.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bF,"").replace(bK,bV[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bO),d.crossDomain==null&&(r=bQ.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bV[1]&&r[2]==bV[2]&&(r[3]||(r[1]==="http:"?80:443))==(bV[3]||(bV[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bZ(bS,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bJ.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bL.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bP,"$1_="+x);d.url=y+(y===d.url?(bL.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bW+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bZ(bT,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join("&").replace(bC,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cc++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=typeof b.data=="string"&&/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cd.test(b.url)||e&&cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cd,l),b.url===j&&(e&&(k=k.replace(cd,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ce&&delete cg[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n);try{m.text=h.responseText}catch(a){}try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&&(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cq;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(ct("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),(e===""&&f.css(d,"display")==="none"||!f.contains(d.ownerDocument.documentElement,d))&&f._data(d,"olddisplay",cu(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(ct("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(ct("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o,p,q;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]);if((k=f.cssHooks[g])&&"expand"in k){l=k.expand(a[g]),delete a[g];for(i in l)i in a||(a[i]=l[i])}}for(g in a){h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cu(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cm.test(h)?(q=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),q?(f._data(this,"toggle"+i,q==="show"?"hide":"show"),j[q]()):j[h]()):(m=cn.exec(h),n=j.cur(),m?(o=parseFloat(m[2]),p=m[3]||(f.cssNumber[i]?"":"px"),p!=="px"&&(f.style(this,i,(o||1)+p),n=(o||1)/j.cur()*n,f.style(this,i,n+p)),m[1]&&(o=(m[1]==="-="?-1:1)*o+n),j.custom(n,o,p)):j.custom(n,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:ct("show",1),slideUp:ct("hide",1),slideToggle:ct("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+.5}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cq||cr(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){f._data(e.elem,"fxshow"+e.prop)===b&&(e.options.hide?f._data(e.elem,"fxshow"+e.prop,e.start):e.options.show&&f._data(e.elem,"fxshow"+e.prop,e.end))},h()&&f.timers.push(h)&&!co&&(co=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cq||cr(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(cp.concat.apply([],cp),function(a,b){b.indexOf("margin")&&(f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)})}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cv,cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?cv=function(a,b,c,d){try{d=a.getBoundingClientRect()}catch(e){}if(!d||!f.contains(c,a))return d?{top:d.top,left:d.left}:{top:0,left:0};var g=b.body,h=cy(b),i=c.clientTop||g.clientTop||0,j=c.clientLeft||g.clientLeft||0,k=h.pageYOffset||f.support.boxModel&&c.scrollTop||g.scrollTop,l=h.pageXOffset||f.support.boxModel&&c.scrollLeft||g.scrollLeft,m=d.top+k-i,n=d.left+l-j;return{top:m,left:n}}:cv=function(a,b,c){var d,e=a.offsetParent,g=a,h=b.body,i=b.defaultView,j=i?i.getComputedStyle(a,null):a.currentStyle,k=a.offsetTop,l=a.offsetLeft;while((a=a.parentNode)&&a!==h&&a!==c){if(f.support.fixedPosition&&j.position==="fixed")break;d=i?i.getComputedStyle(a,null):a.currentStyle,k-=a.scrollTop,l-=a.scrollLeft,a===e&&(k+=a.offsetTop,l+=a.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(a.nodeName))&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),g=e,e=a.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&d.overflow!=="visible"&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),j=d}if(j.position==="relative"||j.position==="static")k+=h.offsetTop,l+=h.offsetLeft;f.support.fixedPosition&&j.position==="fixed"&&(k+=Math.max(c.scrollTop,h.scrollTop),l+=Math.max(c.scrollLeft,h.scrollLeft));return{top:k,left:l}},f.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){f.offset.setOffset(this,a,b)});var c=this[0],d=c&&c.ownerDocument;if(!d)return null;if(c===d.body)return f.offset.bodyOffset(c);return cv(c,d,d.documentElement)},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);f.fn[a]=function(e){return f.access(this,function(a,e,g){var h=cy(a);if(g===b)return h?c in h?h[c]:f.support.boxModel&&h.document.documentElement[e]||h.document.body[e]:a[e];h?h.scrollTo(d?f(h).scrollLeft():g,d?g:f(h).scrollTop()):a[e]=g},a,e,arguments.length,null)}}),f.each({Height:"height",Width:"width"},function(a,c){var d="client"+a,e="scroll"+a,g="offset"+a;f.fn["inner"+a]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,c,"padding")):this[c]():null},f.fn["outer"+a]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,c,a?"margin":"border")):this[c]():null},f.fn[c]=function(a){return f.access(this,function(a,c,h){var i,j,k,l;if(f.isWindow(a)){i=a.document,j=i.documentElement[d];return f.support.boxModel&&j||i.body&&i.body[d]||j}if(a.nodeType===9){i=a.documentElement;if(i[d]>=i[e])return i[d];return Math.max(a.body[e],i[e],a.body[g],i[g])}if(h===b){k=f.css(a,c),l=parseFloat(k);return f.isNumeric(l)?l:k}f(a).css(c,h)},c,a,arguments.length,null)}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);
\ No newline at end of file
Index: contents/static/markitup/sets/bbcode/set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- contents/static/markitup/sets/bbcode/set.js	(revision )
+++ contents/static/markitup/sets/bbcode/set.js	(revision )
@@ -0,0 +1,45 @@
+// ----------------------------------------------------------------------------
+// markItUp!
+// ----------------------------------------------------------------------------
+// Copyright (C) 2008 Jay Salvat
+// http://markitup.jaysalvat.com/
+// ----------------------------------------------------------------------------
+myBbcodeSettings = {
+nameSpace:          "bbcode", // Useful to prevent multi-instances CSS conflict
+previewParserPath:  "~/sets/bbcode/preview.php",
+markupSet: [
+{name:'Bold', key:'B', openWith:'[b]', closeWith:'[/b]'},
+{name:'Italic', key:'I', openWith:'[i]', closeWith:'[/i]'},
+{name:'Underline', key:'U', openWith:'[u]', closeWith:'[/u]'},
+{separator:'---------------' },
+{name:'Picture', key:'P', replaceWith:'[img][![Url]!][/img]'},
+{name:'Link', key:'L', openWith:'[url=[![Url]!]]', closeWith:'[/url]', placeHolder:'Your text to link here...'},
+{separator:'---------------' },
+{name:'Colors', openWith:'[color=[![Color]!]]', closeWith:'[/color]', dropMenu: [
+{name:'Yellow', openWith:'[color=yellow]', closeWith:'[/color]', className:"col1-1" },
+{name:'Orange', openWith:'[color=orange]', closeWith:'[/color]', className:"col1-2" },
+{name:'Red', openWith:'[color=red]', closeWith:'[/color]', className:"col1-3" },
+{name:'Blue', openWith:'[color=blue]', closeWith:'[/color]', className:"col2-1" },
+{name:'Purple', openWith:'[color=purple]', closeWith:'[/color]', className:"col2-2" },
+{name:'Green', openWith:'[color=green]', closeWith:'[/color]', className:"col2-3" },
+{name:'White', openWith:'[color=white]', closeWith:'[/color]', className:"col3-1" },
+{name:'Gray', openWith:'[color=gray]', closeWith:'[/color]', className:"col3-2" },
+{name:'Black', openWith:'[color=black]', closeWith:'[/color]', className:"col3-3" }
+]},
+{name:'Size', key:'S', openWith:'[size=[![Text size]!]]', closeWith:'[/size]', dropMenu :[
+{name:'Big', openWith:'[size=200]', closeWith:'[/size]' },
+{name:'Normal', openWith:'[size=100]', closeWith:'[/size]' },
+{name:'Small', openWith:'[size=50]', closeWith:'[/size]' }
+]},
+{separator:'---------------' },
+{name:'Bulleted list', openWith:'[list]\n', closeWith:'\n[/list]'},
+{name:'Numeric list', openWith:'[list=[![Starting number]!]]\n', closeWith:'\n[/list]'},
+{name:'List item', openWith:'[*] '},
+{separator:'---------------' },
+{name:'Quotes', openWith:'[quote]', closeWith:'[/quote]'},
+{name:'Code', openWith:'[code]', closeWith:'[/code]'},
+{separator:'---------------' },
+{name:'Clean', className:"clean", replaceWith:function(h) { return h.selection.replace(/\[(.*?)\]/g, "") } },
+{name:'Preview', className:"preview", call:'preview' }
+]
+}
\ No newline at end of file
Index: templates/head.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/head.html	(revision )
+++ templates/head.html	(revision )
@@ -0,0 +1,48 @@
+{% load staticfiles %}
+<link rel="stylesheet" type="text/css" href="{% static 'style.css' %}"/>
+<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
+<link rel="stylesheet" type="text/css" href="{% static 'pro_dropdown_2/pro_dropdown_2.css' %}"/>
+<script src="{% static 'pro_dropdown_2/stuHover.js' %}" type="text/javascript"></script>
+<!-- bxSlider Javascript file -->
+<script src="{% static 'js/jquery.bxslider.min.js' %}"></script>
+<!-- bxSlider CSS file -->
+<link href="{% static 'jquery.bxslider.css' %}" rel="stylesheet"/>
+<script src="{% static 'js/sliding_effect.js' %}"></script>
+<script src="{% static 'js/script.js' %}"></script>
+<script src="{% static 'js/jquery.color.js' %}"></script>
+<link rel="stylesheet" type="text/css" href="{% static 'markitup/skins/markitup/style.css' %}"/>
+<link rel="stylesheet" type="text/css" href="{% static 'markitup/sets/bbcode/style.css' %}"/>
+<script type="text/javascript" src="{% static 'markitup/jquery.markitup.js' %}"></script>
+<script type="text/javascript" src="{% static 'markitup/sets/bbcode/set.js' %}"></script>
+<script>
+$(document).ready(function(){
+  $('.bxslider').bxSlider({
+  mode: 'fade',
+  captions: true,
+  auto: true,
+  autoControls: true,
+
+});
+    $('#bbcode').markItUp(myBbcodeSettings);
+
+    $('#emoticons a').click(function() {
+        emoticon = $(this).attr("title");
+        $.markItUp( { replaceWith:emoticon } );
+    });
+
+});
+
+
+
+</script>
+
+<script>
+$(document).ready(function()
+    {
+        $(".tablesorter").tablesorter();
+        });
+    }
+);
+
+
+</script>
